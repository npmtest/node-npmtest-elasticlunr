{"/home/travis/build/npmtest/node-npmtest-elasticlunr/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_elasticlunr */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/lib.npmtest_elasticlunr.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/lib.npmtest_elasticlunr.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":56}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":62}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_elasticlunr */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_elasticlunr = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_elasticlunr = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":55}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":69},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-elasticlunr && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_elasticlunr */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_elasticlunr","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_elasticlunr.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_elasticlunr.rollup.js'] =","            local.assetsDict['/assets.npmtest_elasticlunr.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_elasticlunr.__dirname + '/lib.npmtest_elasticlunr.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/elasticlunr.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/elasticlunr.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":1,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":1,"64":1,"65":0,"66":0,"67":1,"68":0,"69":1,"70":0,"71":1,"72":0,"73":1,"74":1,"75":3,"76":0,"77":3,"78":3,"79":1,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":1,"131":0,"132":1,"133":0,"134":0,"135":0,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":1,"147":0,"148":0,"149":1,"150":0,"151":1,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":1,"164":0,"165":0,"166":0,"167":1,"168":0,"169":0,"170":1,"171":0,"172":0,"173":1,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":1,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":1,"217":0,"218":0,"219":0,"220":0,"221":0,"222":1,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":1,"231":0,"232":1,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":1,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":1,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":1,"311":0,"312":0,"313":0,"314":0,"315":1,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":1,"323":0,"324":0,"325":0,"326":0,"327":1,"328":0,"329":0,"330":0,"331":1,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":1,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":1,"346":0,"347":1,"348":0,"349":0,"350":0,"351":0,"352":0,"353":1,"354":0,"355":0,"356":0,"357":1,"358":0,"359":1,"360":0,"361":0,"362":0,"363":0,"364":0,"365":1,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":1,"374":0,"375":0,"376":0,"377":0,"378":0,"379":1,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":1,"388":0,"389":1,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":1,"398":1,"399":1,"400":1,"401":1,"402":1,"403":1,"404":1,"405":1,"406":1,"407":1,"408":1,"409":1,"410":1,"411":1,"412":1,"413":1,"414":1,"415":1,"416":1,"417":1,"418":1,"419":1,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":1,"509":1,"510":1,"511":0,"512":0,"513":1,"514":0,"515":1,"516":0,"517":0,"518":0,"519":0,"520":1,"521":0,"522":1,"523":1,"524":1,"525":1,"526":0,"527":0,"528":0,"529":1,"530":1,"531":0,"532":1,"533":0,"534":0,"535":0,"536":1,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":1,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":1,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":1,"568":0,"569":0,"570":0,"571":0,"572":1,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":1,"580":0,"581":0,"582":0,"583":0,"584":1,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":1,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":1,"611":0,"612":1,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":1,"624":0,"625":0,"626":0,"627":1,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":1,"646":0,"647":0,"648":1,"649":0,"650":1,"651":0,"652":1,"653":0,"654":0,"655":1,"656":0,"657":0,"658":0,"659":0,"660":1,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":1,"669":0,"670":1,"671":0,"672":1,"673":0,"674":1,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":1,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":1,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":1,"720":0,"721":0,"722":0,"723":0,"724":1,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":1,"734":0,"735":1,"736":1,"737":0,"738":1,"739":1,"740":0,"741":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,3],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0],"156":[0,0],"157":[0,0],"158":[0,0],"159":[0,0],"160":[0,0],"161":[0,0],"162":[0,0],"163":[0,0],"164":[0,0],"165":[0,0],"166":[0,1],"167":[1,0],"168":[1,0]},"f":{"1":1,"2":0,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":3,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":1,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":1,"117":1},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":1},"end":{"line":11,"column":11}}},"2":{"name":"(anonymous_2)","line":72,"loc":{"start":{"line":72,"column":18},"end":{"line":72,"column":36}}},"3":{"name":"(anonymous_3)","line":109,"loc":{"start":{"line":109,"column":26},"end":{"line":109,"column":44}}},"4":{"name":"(anonymous_4)","line":110,"loc":{"start":{"line":110,"column":9},"end":{"line":110,"column":28}}},"5":{"name":"(anonymous_5)","line":128,"loc":{"start":{"line":128,"column":29},"end":{"line":128,"column":44}}},"6":{"name":"(anonymous_6)","line":150,"loc":{"start":{"line":150,"column":27},"end":{"line":150,"column":39}}},"7":{"name":"(anonymous_7)","line":163,"loc":{"start":{"line":163,"column":49},"end":{"line":163,"column":61}}},"8":{"name":"(anonymous_8)","line":170,"loc":{"start":{"line":170,"column":16},"end":{"line":170,"column":32}}},"9":{"name":"(anonymous_9)","line":183,"loc":{"start":{"line":183,"column":52},"end":{"line":183,"column":72}}},"10":{"name":"(anonymous_10)","line":203,"loc":{"start":{"line":203,"column":42},"end":{"line":203,"column":58}}},"11":{"name":"(anonymous_11)","line":208,"loc":{"start":{"line":208,"column":28},"end":{"line":208,"column":42}}},"12":{"name":"(anonymous_12)","line":220,"loc":{"start":{"line":220,"column":48},"end":{"line":220,"column":64}}},"13":{"name":"(anonymous_13)","line":242,"loc":{"start":{"line":242,"column":24},"end":{"line":242,"column":39}}},"14":{"name":"(anonymous_14)","line":245,"loc":{"start":{"line":245,"column":25},"end":{"line":245,"column":41}}},"15":{"name":"(anonymous_15)","line":253,"loc":{"start":{"line":253,"column":18},"end":{"line":253,"column":31}}},"16":{"name":"(anonymous_16)","line":258,"loc":{"start":{"line":258,"column":16},"end":{"line":258,"column":31}}},"17":{"name":"(anonymous_17)","line":288,"loc":{"start":{"line":288,"column":37},"end":{"line":288,"column":51}}},"18":{"name":"(anonymous_18)","line":298,"loc":{"start":{"line":298,"column":39},"end":{"line":298,"column":50}}},"19":{"name":"(anonymous_19)","line":306,"loc":{"start":{"line":306,"column":37},"end":{"line":306,"column":48}}},"20":{"name":"(anonymous_20)","line":341,"loc":{"start":{"line":341,"column":23},"end":{"line":341,"column":35}}},"21":{"name":"(anonymous_21)","line":360,"loc":{"start":{"line":360,"column":40},"end":{"line":360,"column":61}}},"22":{"name":"(anonymous_22)","line":376,"loc":{"start":{"line":376,"column":45},"end":{"line":376,"column":62}}},"23":{"name":"(anonymous_23)","line":391,"loc":{"start":{"line":391,"column":51},"end":{"line":391,"column":65}}},"24":{"name":"(anonymous_24)","line":410,"loc":{"start":{"line":410,"column":28},"end":{"line":410,"column":50}}},"25":{"name":"(anonymous_25)","line":413,"loc":{"start":{"line":413,"column":21},"end":{"line":413,"column":39}}},"26":{"name":"(anonymous_26)","line":434,"loc":{"start":{"line":434,"column":37},"end":{"line":434,"column":49}}},"27":{"name":"(anonymous_27)","line":437,"loc":{"start":{"line":437,"column":14},"end":{"line":437,"column":28}}},"28":{"name":"(anonymous_28)","line":454,"loc":{"start":{"line":454,"column":39},"end":{"line":454,"column":68}}},"29":{"name":"(anonymous_29)","line":476,"loc":{"start":{"line":476,"column":40},"end":{"line":476,"column":69}}},"30":{"name":"(anonymous_30)","line":493,"loc":{"start":{"line":493,"column":40},"end":{"line":493,"column":54}}},"31":{"name":"(anonymous_31)","line":510,"loc":{"start":{"line":510,"column":37},"end":{"line":510,"column":55}}},"32":{"name":"(anonymous_32)","line":534,"loc":{"start":{"line":534,"column":39},"end":{"line":534,"column":51}}},"33":{"name":"(anonymous_33)","line":543,"loc":{"start":{"line":543,"column":38},"end":{"line":543,"column":50}}},"34":{"name":"(anonymous_34)","line":558,"loc":{"start":{"line":558,"column":40},"end":{"line":558,"column":52}}},"35":{"name":"(anonymous_35)","line":559,"loc":{"start":{"line":559,"column":25},"end":{"line":559,"column":39}}},"36":{"name":"(anonymous_36)","line":577,"loc":{"start":{"line":577,"column":20},"end":{"line":577,"column":32}}},"37":{"name":"(anonymous_37)","line":586,"loc":{"start":{"line":586,"column":38},"end":{"line":586,"column":50}}},"38":{"name":"(anonymous_38)","line":600,"loc":{"start":{"line":600,"column":33},"end":{"line":600,"column":45}}},"39":{"name":"(anonymous_39)","line":612,"loc":{"start":{"line":612,"column":34},"end":{"line":612,"column":54}}},"40":{"name":"(anonymous_40)","line":626,"loc":{"start":{"line":626,"column":25},"end":{"line":626,"column":51}}},"41":{"name":"(anonymous_41)","line":659,"loc":{"start":{"line":659,"column":39},"end":{"line":659,"column":60}}},"42":{"name":"(anonymous_42)","line":678,"loc":{"start":{"line":678,"column":37},"end":{"line":678,"column":56}}},"43":{"name":"(anonymous_43)","line":693,"loc":{"start":{"line":693,"column":43},"end":{"line":693,"column":59}}},"44":{"name":"(anonymous_44)","line":713,"loc":{"start":{"line":713,"column":37},"end":{"line":713,"column":63}}},"45":{"name":"(anonymous_45)","line":720,"loc":{"start":{"line":720,"column":23},"end":{"line":720,"column":40}}},"46":{"name":"(anonymous_46)","line":725,"loc":{"start":{"line":725,"column":24},"end":{"line":725,"column":41}}},"47":{"name":"(anonymous_47)","line":756,"loc":{"start":{"line":756,"column":45},"end":{"line":756,"column":74}}},"48":{"name":"(anonymous_48)","line":783,"loc":{"start":{"line":783,"column":40},"end":{"line":783,"column":66}}},"49":{"name":"(anonymous_49)","line":793,"loc":{"start":{"line":793,"column":23},"end":{"line":793,"column":40}}},"50":{"name":"(anonymous_50)","line":795,"loc":{"start":{"line":795,"column":24},"end":{"line":795,"column":41}}},"51":{"name":"(anonymous_51)","line":823,"loc":{"start":{"line":823,"column":40},"end":{"line":823,"column":66}}},"52":{"name":"(anonymous_52)","line":841,"loc":{"start":{"line":841,"column":34},"end":{"line":841,"column":57}}},"53":{"name":"(anonymous_53)","line":857,"loc":{"start":{"line":857,"column":40},"end":{"line":857,"column":52}}},"54":{"name":"(anonymous_54)","line":886,"loc":{"start":{"line":886,"column":37},"end":{"line":886,"column":66}}},"55":{"name":"(anonymous_55)","line":922,"loc":{"start":{"line":922,"column":15},"end":{"line":922,"column":31}}},"56":{"name":"(anonymous_56)","line":934,"loc":{"start":{"line":934,"column":42},"end":{"line":934,"column":84}}},"57":{"name":"(anonymous_57)","line":946,"loc":{"start":{"line":946,"column":22},"end":{"line":946,"column":39}}},"58":{"name":"(anonymous_58)","line":970,"loc":{"start":{"line":970,"column":19},"end":{"line":970,"column":34}}},"59":{"name":"(anonymous_59)","line":1040,"loc":{"start":{"line":1040,"column":42},"end":{"line":1040,"column":77}}},"60":{"name":"(anonymous_60)","line":1074,"loc":{"start":{"line":1074,"column":47},"end":{"line":1074,"column":81}}},"61":{"name":"(anonymous_61)","line":1096,"loc":{"start":{"line":1096,"column":40},"end":{"line":1096,"column":72}}},"62":{"name":"(anonymous_62)","line":1112,"loc":{"start":{"line":1112,"column":37},"end":{"line":1112,"column":49}}},"63":{"name":"(anonymous_63)","line":1114,"loc":{"start":{"line":1114,"column":23},"end":{"line":1114,"column":40}}},"64":{"name":"(anonymous_64)","line":1154,"loc":{"start":{"line":1154,"column":34},"end":{"line":1154,"column":52}}},"65":{"name":"(anonymous_65)","line":1178,"loc":{"start":{"line":1178,"column":28},"end":{"line":1178,"column":44}}},"66":{"name":"(anonymous_66)","line":1196,"loc":{"start":{"line":1196,"column":33},"end":{"line":1196,"column":59}}},"67":{"name":"(anonymous_67)","line":1212,"loc":{"start":{"line":1212,"column":50},"end":{"line":1212,"column":62}}},"68":{"name":"(anonymous_68)","line":1225,"loc":{"start":{"line":1225,"column":45},"end":{"line":1225,"column":68}}},"69":{"name":"(anonymous_69)","line":1245,"loc":{"start":{"line":1245,"column":45},"end":{"line":1245,"column":63}}},"70":{"name":"(anonymous_70)","line":1257,"loc":{"start":{"line":1257,"column":45},"end":{"line":1257,"column":63}}},"71":{"name":"(anonymous_71)","line":1267,"loc":{"start":{"line":1267,"column":48},"end":{"line":1267,"column":66}}},"72":{"name":"(anonymous_72)","line":1283,"loc":{"start":{"line":1283,"column":53},"end":{"line":1283,"column":90}}},"73":{"name":"(anonymous_73)","line":1299,"loc":{"start":{"line":1299,"column":56},"end":{"line":1299,"column":93}}},"74":{"name":"(anonymous_74)","line":1313,"loc":{"start":{"line":1313,"column":53},"end":{"line":1313,"column":82}}},"75":{"name":"(anonymous_75)","line":1327,"loc":{"start":{"line":1327,"column":45},"end":{"line":1327,"column":57}}},"76":{"name":"clone","line":1342,"loc":{"start":{"line":1342,"column":0},"end":{"line":1342,"column":20}}},"77":{"name":"(anonymous_77)","line":1369,"loc":{"start":{"line":1369,"column":23},"end":{"line":1369,"column":33}}},"78":{"name":"porterStemmer","line":1440,"loc":{"start":{"line":1440,"column":22},"end":{"line":1440,"column":48}}},"79":{"name":"(anonymous_79)","line":1591,"loc":{"start":{"line":1591,"column":29},"end":{"line":1591,"column":46}}},"80":{"name":"(anonymous_80)","line":1604,"loc":{"start":{"line":1604,"column":29},"end":{"line":1604,"column":41}}},"81":{"name":"(anonymous_81)","line":1615,"loc":{"start":{"line":1615,"column":27},"end":{"line":1615,"column":44}}},"82":{"name":"(anonymous_82)","line":1618,"loc":{"start":{"line":1618,"column":16},"end":{"line":1618,"column":32}}},"83":{"name":"(anonymous_83)","line":1629,"loc":{"start":{"line":1629,"column":29},"end":{"line":1629,"column":41}}},"84":{"name":"(anonymous_84)","line":1779,"loc":{"start":{"line":1779,"column":22},"end":{"line":1779,"column":39}}},"85":{"name":"(anonymous_85)","line":1802,"loc":{"start":{"line":1802,"column":28},"end":{"line":1802,"column":40}}},"86":{"name":"(anonymous_86)","line":1812,"loc":{"start":{"line":1812,"column":33},"end":{"line":1812,"column":59}}},"87":{"name":"(anonymous_87)","line":1837,"loc":{"start":{"line":1837,"column":47},"end":{"line":1837,"column":81}}},"88":{"name":"(anonymous_88)","line":1868,"loc":{"start":{"line":1868,"column":47},"end":{"line":1868,"column":64}}},"89":{"name":"(anonymous_89)","line":1891,"loc":{"start":{"line":1891,"column":46},"end":{"line":1891,"column":63}}},"90":{"name":"(anonymous_90)","line":1913,"loc":{"start":{"line":1913,"column":46},"end":{"line":1913,"column":63}}},"91":{"name":"(anonymous_91)","line":1932,"loc":{"start":{"line":1932,"column":55},"end":{"line":1932,"column":80}}},"92":{"name":"(anonymous_92)","line":1955,"loc":{"start":{"line":1955,"column":49},"end":{"line":1955,"column":66}}},"93":{"name":"(anonymous_93)","line":1973,"loc":{"start":{"line":1973,"column":50},"end":{"line":1973,"column":72}}},"94":{"name":"(anonymous_94)","line":1993,"loc":{"start":{"line":1993,"column":50},"end":{"line":1993,"column":79}}},"95":{"name":"(anonymous_95)","line":2019,"loc":{"start":{"line":2019,"column":45},"end":{"line":2019,"column":57}}},"96":{"name":"(anonymous_96)","line":2101,"loc":{"start":{"line":2101,"column":28},"end":{"line":2101,"column":54}}},"97":{"name":"(anonymous_97)","line":2125,"loc":{"start":{"line":2125,"column":57},"end":{"line":2125,"column":75}}},"98":{"name":"(anonymous_98)","line":2127,"loc":{"start":{"line":2127,"column":17},"end":{"line":2127,"column":34}}},"99":{"name":"(anonymous_99)","line":2142,"loc":{"start":{"line":2142,"column":54},"end":{"line":2142,"column":80}}},"100":{"name":"(anonymous_100)","line":2185,"loc":{"start":{"line":2185,"column":62},"end":{"line":2185,"column":94}}},"101":{"name":"(anonymous_101)","line":2186,"loc":{"start":{"line":2186,"column":17},"end":{"line":2186,"column":34}}},"102":{"name":"(anonymous_102)","line":2198,"loc":{"start":{"line":2198,"column":42},"end":{"line":2198,"column":54}}},"103":{"name":"(anonymous_103)","line":2205,"loc":{"start":{"line":2205,"column":44},"end":{"line":2205,"column":56}}},"104":{"name":"(anonymous_104)","line":2227,"loc":{"start":{"line":2227,"column":17},"end":{"line":2227,"column":29}}},"105":{"name":"(anonymous_105)","line":2239,"loc":{"start":{"line":2239,"column":22},"end":{"line":2239,"column":48}}},"106":{"name":"(anonymous_106)","line":2255,"loc":{"start":{"line":2255,"column":31},"end":{"line":2255,"column":43}}},"107":{"name":"(anonymous_107)","line":2273,"loc":{"start":{"line":2273,"column":35},"end":{"line":2273,"column":47}}},"108":{"name":"(anonymous_108)","line":2290,"loc":{"start":{"line":2290,"column":31},"end":{"line":2290,"column":50}}},"109":{"name":"(anonymous_109)","line":2305,"loc":{"start":{"line":2305,"column":35},"end":{"line":2305,"column":54}}},"110":{"name":"(anonymous_110)","line":2317,"loc":{"start":{"line":2317,"column":35},"end":{"line":2317,"column":51}}},"111":{"name":"(anonymous_111)","line":2351,"loc":{"start":{"line":2351,"column":39},"end":{"line":2351,"column":55}}},"112":{"name":"(anonymous_112)","line":2379,"loc":{"start":{"line":2379,"column":37},"end":{"line":2379,"column":57}}},"113":{"name":"(anonymous_113)","line":2414,"loc":{"start":{"line":2414,"column":33},"end":{"line":2414,"column":45}}},"114":{"name":"(anonymous_114)","line":2431,"loc":{"start":{"line":2431,"column":33},"end":{"line":2431,"column":53}}},"115":{"name":"(anonymous_115)","line":2455,"loc":{"start":{"line":2455,"column":34},"end":{"line":2455,"column":46}}},"116":{"name":"(anonymous_116)","line":2462,"loc":{"start":{"line":2462,"column":4},"end":{"line":2462,"column":29}}},"117":{"name":"(anonymous_117)","line":2477,"loc":{"start":{"line":2477,"column":10},"end":{"line":2477,"column":22}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":2485,"column":5}},"2":{"start":{"line":72,"column":0},"end":{"line":84,"column":2}},"3":{"start":{"line":73,"column":2},"end":{"line":73,"column":34}},"4":{"start":{"line":75,"column":2},"end":{"line":79,"column":4}},"5":{"start":{"line":81,"column":2},"end":{"line":81,"column":36}},"6":{"start":{"line":81,"column":14},"end":{"line":81,"column":36}},"7":{"start":{"line":83,"column":2},"end":{"line":83,"column":13}},"8":{"start":{"line":86,"column":0},"end":{"line":86,"column":30}},"9":{"start":{"line":90,"column":0},"end":{"line":90,"column":19}},"10":{"start":{"line":101,"column":0},"end":{"line":101,"column":23}},"11":{"start":{"line":109,"column":0},"end":{"line":115,"column":9}},"12":{"start":{"line":110,"column":2},"end":{"line":114,"column":4}},"13":{"start":{"line":111,"column":4},"end":{"line":113,"column":5}},"14":{"start":{"line":112,"column":6},"end":{"line":112,"column":28}},"15":{"start":{"line":128,"column":0},"end":{"line":134,"column":2}},"16":{"start":{"line":129,"column":2},"end":{"line":131,"column":3}},"17":{"start":{"line":130,"column":4},"end":{"line":130,"column":14}},"18":{"start":{"line":133,"column":2},"end":{"line":133,"column":24}},"19":{"start":{"line":150,"column":0},"end":{"line":152,"column":2}},"20":{"start":{"line":151,"column":2},"end":{"line":151,"column":19}},"21":{"start":{"line":163,"column":0},"end":{"line":174,"column":2}},"22":{"start":{"line":164,"column":2},"end":{"line":166,"column":19}},"23":{"start":{"line":168,"column":2},"end":{"line":168,"column":89}},"24":{"start":{"line":168,"column":32},"end":{"line":168,"column":89}},"25":{"start":{"line":170,"column":2},"end":{"line":173,"column":11}},"26":{"start":{"line":171,"column":4},"end":{"line":171,"column":55}},"27":{"start":{"line":171,"column":32},"end":{"line":171,"column":55}},"28":{"start":{"line":172,"column":4},"end":{"line":172,"column":31}},"29":{"start":{"line":183,"column":0},"end":{"line":192,"column":2}},"30":{"start":{"line":184,"column":2},"end":{"line":184,"column":37}},"31":{"start":{"line":184,"column":30},"end":{"line":184,"column":37}},"32":{"start":{"line":186,"column":2},"end":{"line":186,"column":46}},"33":{"start":{"line":187,"column":2},"end":{"line":187,"column":29}},"34":{"start":{"line":187,"column":22},"end":{"line":187,"column":29}},"35":{"start":{"line":189,"column":2},"end":{"line":189,"column":39}},"36":{"start":{"line":191,"column":2},"end":{"line":191,"column":62}},"37":{"start":{"line":191,"column":37},"end":{"line":191,"column":62}},"38":{"start":{"line":203,"column":0},"end":{"line":211,"column":2}},"39":{"start":{"line":204,"column":2},"end":{"line":204,"column":37}},"40":{"start":{"line":204,"column":30},"end":{"line":204,"column":37}},"41":{"start":{"line":206,"column":2},"end":{"line":206,"column":54}},"42":{"start":{"line":208,"column":2},"end":{"line":210,"column":11}},"43":{"start":{"line":209,"column":4},"end":{"line":209,"column":30}},"44":{"start":{"line":220,"column":0},"end":{"line":222,"column":2}},"45":{"start":{"line":221,"column":2},"end":{"line":221,"column":29}},"46":{"start":{"line":242,"column":0},"end":{"line":267,"column":2}},"47":{"start":{"line":243,"column":2},"end":{"line":243,"column":72}},"48":{"start":{"line":243,"column":62},"end":{"line":243,"column":72}},"49":{"start":{"line":244,"column":2},"end":{"line":264,"column":3}},"50":{"start":{"line":245,"column":4},"end":{"line":251,"column":7}},"51":{"start":{"line":246,"column":6},"end":{"line":248,"column":7}},"52":{"start":{"line":247,"column":8},"end":{"line":247,"column":21}},"53":{"start":{"line":250,"column":6},"end":{"line":250,"column":18}},"54":{"start":{"line":253,"column":4},"end":{"line":255,"column":7}},"55":{"start":{"line":254,"column":6},"end":{"line":254,"column":57}},"56":{"start":{"line":257,"column":4},"end":{"line":257,"column":17}},"57":{"start":{"line":258,"column":4},"end":{"line":261,"column":13}},"58":{"start":{"line":259,"column":6},"end":{"line":259,"column":63}},"59":{"start":{"line":260,"column":6},"end":{"line":260,"column":31}},"60":{"start":{"line":263,"column":4},"end":{"line":263,"column":15}},"61":{"start":{"line":266,"column":2},"end":{"line":266,"column":84}},"62":{"start":{"line":272,"column":0},"end":{"line":272,"column":51}},"63":{"start":{"line":281,"column":0},"end":{"line":281,"column":73}},"64":{"start":{"line":288,"column":0},"end":{"line":292,"column":1}},"65":{"start":{"line":289,"column":4},"end":{"line":291,"column":5}},"66":{"start":{"line":290,"column":8},"end":{"line":290,"column":46}},"67":{"start":{"line":298,"column":0},"end":{"line":300,"column":1}},"68":{"start":{"line":299,"column":4},"end":{"line":299,"column":77}},"69":{"start":{"line":306,"column":0},"end":{"line":308,"column":1}},"70":{"start":{"line":307,"column":4},"end":{"line":307,"column":43}},"71":{"start":{"line":341,"column":0},"end":{"line":343,"column":2}},"72":{"start":{"line":342,"column":2},"end":{"line":342,"column":19}},"73":{"start":{"line":345,"column":0},"end":{"line":345,"column":46}},"74":{"start":{"line":360,"column":0},"end":{"line":367,"column":2}},"75":{"start":{"line":361,"column":2},"end":{"line":363,"column":3}},"76":{"start":{"line":362,"column":4},"end":{"line":362,"column":81}},"77":{"start":{"line":365,"column":2},"end":{"line":365,"column":19}},"78":{"start":{"line":366,"column":2},"end":{"line":366,"column":55}},"79":{"start":{"line":376,"column":0},"end":{"line":382,"column":2}},"80":{"start":{"line":377,"column":2},"end":{"line":379,"column":3}},"81":{"start":{"line":378,"column":4},"end":{"line":378,"column":16}},"82":{"start":{"line":381,"column":2},"end":{"line":381,"column":57}},"83":{"start":{"line":391,"column":0},"end":{"line":397,"column":2}},"84":{"start":{"line":392,"column":2},"end":{"line":392,"column":72}},"85":{"start":{"line":394,"column":2},"end":{"line":396,"column":3}},"86":{"start":{"line":395,"column":4},"end":{"line":395,"column":130}},"87":{"start":{"line":410,"column":0},"end":{"line":424,"column":2}},"88":{"start":{"line":411,"column":2},"end":{"line":411,"column":42}},"89":{"start":{"line":413,"column":2},"end":{"line":421,"column":5}},"90":{"start":{"line":414,"column":4},"end":{"line":414,"column":64}},"91":{"start":{"line":416,"column":4},"end":{"line":420,"column":5}},"92":{"start":{"line":417,"column":6},"end":{"line":417,"column":23}},"93":{"start":{"line":419,"column":6},"end":{"line":419,"column":71}},"94":{"start":{"line":423,"column":2},"end":{"line":423,"column":18}},"95":{"start":{"line":434,"column":0},"end":{"line":441,"column":2}},"96":{"start":{"line":435,"column":2},"end":{"line":435,"column":50}},"97":{"start":{"line":437,"column":2},"end":{"line":440,"column":11}},"98":{"start":{"line":438,"column":4},"end":{"line":438,"column":57}},"99":{"start":{"line":439,"column":4},"end":{"line":439,"column":25}},"100":{"start":{"line":454,"column":0},"end":{"line":463,"column":2}},"101":{"start":{"line":455,"column":2},"end":{"line":455,"column":58}},"102":{"start":{"line":457,"column":2},"end":{"line":457,"column":44}},"103":{"start":{"line":458,"column":2},"end":{"line":460,"column":3}},"104":{"start":{"line":459,"column":4},"end":{"line":459,"column":46}},"105":{"start":{"line":462,"column":2},"end":{"line":462,"column":40}},"106":{"start":{"line":476,"column":0},"end":{"line":485,"column":2}},"107":{"start":{"line":477,"column":2},"end":{"line":477,"column":58}},"108":{"start":{"line":479,"column":2},"end":{"line":479,"column":44}},"109":{"start":{"line":480,"column":2},"end":{"line":482,"column":3}},"110":{"start":{"line":481,"column":4},"end":{"line":481,"column":46}},"111":{"start":{"line":484,"column":2},"end":{"line":484,"column":36}},"112":{"start":{"line":493,"column":0},"end":{"line":500,"column":2}},"113":{"start":{"line":494,"column":2},"end":{"line":494,"column":36}},"114":{"start":{"line":495,"column":2},"end":{"line":497,"column":3}},"115":{"start":{"line":496,"column":4},"end":{"line":496,"column":11}},"116":{"start":{"line":499,"column":2},"end":{"line":499,"column":29}},"117":{"start":{"line":510,"column":0},"end":{"line":527,"column":2}},"118":{"start":{"line":511,"column":2},"end":{"line":513,"column":42}},"119":{"start":{"line":515,"column":2},"end":{"line":524,"column":3}},"120":{"start":{"line":516,"column":4},"end":{"line":516,"column":26}},"121":{"start":{"line":518,"column":4},"end":{"line":521,"column":5}},"122":{"start":{"line":519,"column":6},"end":{"line":519,"column":47}},"123":{"start":{"line":520,"column":6},"end":{"line":520,"column":52}},"124":{"start":{"line":520,"column":46},"end":{"line":520,"column":52}},"125":{"start":{"line":523,"column":4},"end":{"line":523,"column":60}},"126":{"start":{"line":523,"column":44},"end":{"line":523,"column":60}},"127":{"start":{"line":526,"column":2},"end":{"line":526,"column":13}},"128":{"start":{"line":534,"column":0},"end":{"line":536,"column":2}},"129":{"start":{"line":535,"column":2},"end":{"line":535,"column":19}},"130":{"start":{"line":543,"column":1},"end":{"line":545,"column":3}},"131":{"start":{"line":544,"column":3},"end":{"line":544,"column":22}},"132":{"start":{"line":558,"column":0},"end":{"line":563,"column":2}},"133":{"start":{"line":559,"column":2},"end":{"line":562,"column":5}},"134":{"start":{"line":560,"column":4},"end":{"line":560,"column":57}},"135":{"start":{"line":561,"column":4},"end":{"line":561,"column":20}},"136":{"start":{"line":577,"column":0},"end":{"line":589,"column":2}},"137":{"start":{"line":578,"column":2},"end":{"line":578,"column":20}},"138":{"start":{"line":579,"column":2},"end":{"line":579,"column":19}},"139":{"start":{"line":580,"column":2},"end":{"line":580,"column":43}},"140":{"start":{"line":581,"column":2},"end":{"line":581,"column":53}},"141":{"start":{"line":582,"column":2},"end":{"line":582,"column":18}},"142":{"start":{"line":583,"column":2},"end":{"line":583,"column":51}},"143":{"start":{"line":584,"column":2},"end":{"line":584,"column":22}},"144":{"start":{"line":586,"column":2},"end":{"line":588,"column":17}},"145":{"start":{"line":587,"column":4},"end":{"line":587,"column":24}},"146":{"start":{"line":600,"column":0},"end":{"line":603,"column":2}},"147":{"start":{"line":601,"column":2},"end":{"line":601,"column":51}},"148":{"start":{"line":602,"column":2},"end":{"line":602,"column":70}},"149":{"start":{"line":612,"column":0},"end":{"line":614,"column":2}},"150":{"start":{"line":613,"column":2},"end":{"line":613,"column":52}},"151":{"start":{"line":626,"column":0},"end":{"line":644,"column":2}},"152":{"start":{"line":627,"column":2},"end":{"line":630,"column":3}},"153":{"start":{"line":628,"column":4},"end":{"line":629,"column":84}},"154":{"start":{"line":632,"column":2},"end":{"line":632,"column":21}},"155":{"start":{"line":634,"column":2},"end":{"line":634,"column":38}},"156":{"start":{"line":635,"column":2},"end":{"line":635,"column":32}},"157":{"start":{"line":636,"column":2},"end":{"line":636,"column":83}},"158":{"start":{"line":637,"column":2},"end":{"line":637,"column":68}},"159":{"start":{"line":638,"column":2},"end":{"line":638,"column":17}},"160":{"start":{"line":639,"column":2},"end":{"line":641,"column":3}},"161":{"start":{"line":640,"column":4},"end":{"line":640,"column":83}},"162":{"start":{"line":643,"column":2},"end":{"line":643,"column":13}},"163":{"start":{"line":659,"column":0},"end":{"line":663,"column":2}},"164":{"start":{"line":660,"column":2},"end":{"line":660,"column":31}},"165":{"start":{"line":661,"column":2},"end":{"line":661,"column":56}},"166":{"start":{"line":662,"column":2},"end":{"line":662,"column":14}},"167":{"start":{"line":678,"column":0},"end":{"line":681,"column":2}},"168":{"start":{"line":679,"column":2},"end":{"line":679,"column":22}},"169":{"start":{"line":680,"column":2},"end":{"line":680,"column":14}},"170":{"start":{"line":693,"column":0},"end":{"line":696,"column":2}},"171":{"start":{"line":694,"column":2},"end":{"line":694,"column":59}},"172":{"start":{"line":695,"column":2},"end":{"line":695,"column":14}},"173":{"start":{"line":713,"column":0},"end":{"line":738,"column":2}},"174":{"start":{"line":714,"column":2},"end":{"line":714,"column":19}},"175":{"start":{"line":714,"column":12},"end":{"line":714,"column":19}},"176":{"start":{"line":715,"column":2},"end":{"line":715,"column":61}},"177":{"start":{"line":717,"column":2},"end":{"line":717,"column":30}},"178":{"start":{"line":719,"column":2},"end":{"line":719,"column":41}},"179":{"start":{"line":720,"column":2},"end":{"line":735,"column":11}},"180":{"start":{"line":721,"column":4},"end":{"line":721,"column":75}},"181":{"start":{"line":722,"column":4},"end":{"line":722,"column":73}},"182":{"start":{"line":724,"column":4},"end":{"line":724,"column":24}},"183":{"start":{"line":725,"column":4},"end":{"line":728,"column":13}},"184":{"start":{"line":726,"column":6},"end":{"line":727,"column":33}},"185":{"start":{"line":726,"column":31},"end":{"line":726,"column":54}},"186":{"start":{"line":727,"column":11},"end":{"line":727,"column":33}},"187":{"start":{"line":730,"column":4},"end":{"line":734,"column":5}},"188":{"start":{"line":731,"column":6},"end":{"line":731,"column":44}},"189":{"start":{"line":732,"column":6},"end":{"line":732,"column":47}},"190":{"start":{"line":733,"column":6},"end":{"line":733,"column":76}},"191":{"start":{"line":737,"column":2},"end":{"line":737,"column":58}},"192":{"start":{"line":737,"column":17},"end":{"line":737,"column":58}},"193":{"start":{"line":756,"column":0},"end":{"line":765,"column":2}},"194":{"start":{"line":757,"column":2},"end":{"line":757,"column":22}},"195":{"start":{"line":757,"column":15},"end":{"line":757,"column":22}},"196":{"start":{"line":758,"column":2},"end":{"line":760,"column":3}},"197":{"start":{"line":759,"column":4},"end":{"line":759,"column":11}},"198":{"start":{"line":762,"column":2},"end":{"line":762,"column":49}},"199":{"start":{"line":762,"column":42},"end":{"line":762,"column":49}},"200":{"start":{"line":763,"column":2},"end":{"line":763,"column":46}},"201":{"start":{"line":764,"column":2},"end":{"line":764,"column":29}},"202":{"start":{"line":783,"column":0},"end":{"line":801,"column":2}},"203":{"start":{"line":784,"column":2},"end":{"line":784,"column":19}},"204":{"start":{"line":784,"column":12},"end":{"line":784,"column":19}},"205":{"start":{"line":786,"column":2},"end":{"line":786,"column":61}},"206":{"start":{"line":788,"column":2},"end":{"line":788,"column":30}},"207":{"start":{"line":789,"column":2},"end":{"line":789,"column":49}},"208":{"start":{"line":789,"column":42},"end":{"line":789,"column":49}},"209":{"start":{"line":791,"column":2},"end":{"line":791,"column":39}},"210":{"start":{"line":793,"column":2},"end":{"line":798,"column":11}},"211":{"start":{"line":794,"column":4},"end":{"line":794,"column":75}},"212":{"start":{"line":795,"column":4},"end":{"line":797,"column":13}},"213":{"start":{"line":796,"column":6},"end":{"line":796,"column":51}},"214":{"start":{"line":800,"column":2},"end":{"line":800,"column":61}},"215":{"start":{"line":800,"column":17},"end":{"line":800,"column":61}},"216":{"start":{"line":823,"column":0},"end":{"line":830,"column":2}},"217":{"start":{"line":824,"column":2},"end":{"line":824,"column":61}},"218":{"start":{"line":826,"column":2},"end":{"line":826,"column":45}},"219":{"start":{"line":827,"column":2},"end":{"line":827,"column":26}},"220":{"start":{"line":829,"column":2},"end":{"line":829,"column":61}},"221":{"start":{"line":829,"column":17},"end":{"line":829,"column":61}},"222":{"start":{"line":841,"column":0},"end":{"line":850,"column":2}},"223":{"start":{"line":842,"column":2},"end":{"line":842,"column":42}},"224":{"start":{"line":843,"column":2},"end":{"line":843,"column":102}},"225":{"start":{"line":843,"column":70},"end":{"line":843,"column":102}},"226":{"start":{"line":845,"column":2},"end":{"line":845,"column":46}},"227":{"start":{"line":846,"column":2},"end":{"line":846,"column":63}},"228":{"start":{"line":847,"column":2},"end":{"line":847,"column":33}},"229":{"start":{"line":849,"column":2},"end":{"line":849,"column":13}},"230":{"start":{"line":857,"column":0},"end":{"line":859,"column":2}},"231":{"start":{"line":858,"column":2},"end":{"line":858,"column":30}},"232":{"start":{"line":886,"column":0},"end":{"line":924,"column":2}},"233":{"start":{"line":887,"column":2},"end":{"line":887,"column":24}},"234":{"start":{"line":887,"column":14},"end":{"line":887,"column":24}},"235":{"start":{"line":889,"column":2},"end":{"line":889,"column":23}},"236":{"start":{"line":890,"column":2},"end":{"line":892,"column":3}},"237":{"start":{"line":891,"column":4},"end":{"line":891,"column":43}},"238":{"start":{"line":894,"column":2},"end":{"line":894,"column":80}},"239":{"start":{"line":896,"column":2},"end":{"line":896,"column":68}},"240":{"start":{"line":898,"column":2},"end":{"line":898,"column":24}},"241":{"start":{"line":900,"column":2},"end":{"line":915,"column":3}},"242":{"start":{"line":901,"column":4},"end":{"line":901,"column":74}},"243":{"start":{"line":902,"column":4},"end":{"line":902,"column":41}},"244":{"start":{"line":904,"column":4},"end":{"line":906,"column":5}},"245":{"start":{"line":905,"column":6},"end":{"line":905,"column":75}},"246":{"start":{"line":908,"column":4},"end":{"line":914,"column":5}},"247":{"start":{"line":909,"column":6},"end":{"line":913,"column":7}},"248":{"start":{"line":910,"column":8},"end":{"line":910,"column":59}},"249":{"start":{"line":912,"column":8},"end":{"line":912,"column":58}},"250":{"start":{"line":917,"column":2},"end":{"line":917,"column":19}},"251":{"start":{"line":918,"column":2},"end":{"line":920,"column":3}},"252":{"start":{"line":919,"column":4},"end":{"line":919,"column":61}},"253":{"start":{"line":922,"column":2},"end":{"line":922,"column":62}},"254":{"start":{"line":922,"column":33},"end":{"line":922,"column":58}},"255":{"start":{"line":923,"column":2},"end":{"line":923,"column":17}},"256":{"start":{"line":934,"column":0},"end":{"line":1026,"column":2}},"257":{"start":{"line":935,"column":2},"end":{"line":935,"column":43}},"258":{"start":{"line":936,"column":2},"end":{"line":936,"column":40}},"259":{"start":{"line":937,"column":2},"end":{"line":937,"column":38}},"260":{"start":{"line":938,"column":2},"end":{"line":938,"column":20}},"261":{"start":{"line":939,"column":2},"end":{"line":939,"column":21}},"262":{"start":{"line":942,"column":2},"end":{"line":944,"column":3}},"263":{"start":{"line":943,"column":4},"end":{"line":943,"column":11}},"264":{"start":{"line":946,"column":2},"end":{"line":1022,"column":11}},"265":{"start":{"line":947,"column":4},"end":{"line":947,"column":25}},"266":{"start":{"line":948,"column":4},"end":{"line":950,"column":5}},"267":{"start":{"line":949,"column":6},"end":{"line":949,"column":56}},"268":{"start":{"line":969,"column":4},"end":{"line":969,"column":30}},"269":{"start":{"line":970,"column":4},"end":{"line":1019,"column":13}},"270":{"start":{"line":971,"column":6},"end":{"line":971,"column":52}},"271":{"start":{"line":972,"column":6},"end":{"line":972,"column":41}},"272":{"start":{"line":974,"column":6},"end":{"line":985,"column":7}},"273":{"start":{"line":978,"column":10},"end":{"line":978,"column":32}},"274":{"start":{"line":979,"column":10},"end":{"line":983,"column":11}},"275":{"start":{"line":980,"column":14},"end":{"line":982,"column":15}},"276":{"start":{"line":981,"column":18},"end":{"line":981,"column":54}},"277":{"start":{"line":984,"column":10},"end":{"line":984,"column":30}},"278":{"start":{"line":992,"column":6},"end":{"line":994,"column":7}},"279":{"start":{"line":993,"column":8},"end":{"line":993,"column":52}},"280":{"start":{"line":996,"column":6},"end":{"line":1018,"column":7}},"281":{"start":{"line":997,"column":8},"end":{"line":997,"column":69}},"282":{"start":{"line":998,"column":8},"end":{"line":998,"column":79}},"283":{"start":{"line":999,"column":8},"end":{"line":999,"column":32}},"284":{"start":{"line":1000,"column":8},"end":{"line":1002,"column":9}},"285":{"start":{"line":1001,"column":10},"end":{"line":1001,"column":55}},"286":{"start":{"line":1004,"column":8},"end":{"line":1004,"column":25}},"287":{"start":{"line":1005,"column":8},"end":{"line":1009,"column":9}},"288":{"start":{"line":1008,"column":10},"end":{"line":1008,"column":75}},"289":{"start":{"line":1011,"column":8},"end":{"line":1011,"column":58}},"290":{"start":{"line":1013,"column":8},"end":{"line":1017,"column":9}},"291":{"start":{"line":1014,"column":10},"end":{"line":1014,"column":44}},"292":{"start":{"line":1016,"column":10},"end":{"line":1016,"column":43}},"293":{"start":{"line":1021,"column":4},"end":{"line":1021,"column":69}},"294":{"start":{"line":1024,"column":2},"end":{"line":1024,"column":65}},"295":{"start":{"line":1025,"column":2},"end":{"line":1025,"column":16}},"296":{"start":{"line":1040,"column":0},"end":{"line":1062,"column":2}},"297":{"start":{"line":1041,"column":4},"end":{"line":1043,"column":5}},"298":{"start":{"line":1042,"column":8},"end":{"line":1042,"column":22}},"299":{"start":{"line":1044,"column":4},"end":{"line":1061,"column":5}},"300":{"start":{"line":1045,"column":8},"end":{"line":1045,"column":30}},"301":{"start":{"line":1046,"column":8},"end":{"line":1050,"column":9}},"302":{"start":{"line":1047,"column":12},"end":{"line":1049,"column":13}},"303":{"start":{"line":1048,"column":16},"end":{"line":1048,"column":76}},"304":{"start":{"line":1051,"column":8},"end":{"line":1051,"column":28}},"305":{"start":{"line":1053,"column":8},"end":{"line":1059,"column":9}},"306":{"start":{"line":1054,"column":12},"end":{"line":1058,"column":13}},"307":{"start":{"line":1055,"column":16},"end":{"line":1055,"column":54}},"308":{"start":{"line":1057,"column":16},"end":{"line":1057,"column":53}},"309":{"start":{"line":1060,"column":8},"end":{"line":1060,"column":27}},"310":{"start":{"line":1074,"column":0},"end":{"line":1082,"column":2}},"311":{"start":{"line":1075,"column":2},"end":{"line":1081,"column":3}},"312":{"start":{"line":1076,"column":4},"end":{"line":1080,"column":5}},"313":{"start":{"line":1077,"column":6},"end":{"line":1077,"column":33}},"314":{"start":{"line":1079,"column":6},"end":{"line":1079,"column":31}},"315":{"start":{"line":1096,"column":0},"end":{"line":1104,"column":2}},"316":{"start":{"line":1097,"column":2},"end":{"line":1101,"column":3}},"317":{"start":{"line":1098,"column":4},"end":{"line":1098,"column":38}},"318":{"start":{"line":1098,"column":29},"end":{"line":1098,"column":38}},"319":{"start":{"line":1099,"column":4},"end":{"line":1099,"column":39}},"320":{"start":{"line":1100,"column":4},"end":{"line":1100,"column":43}},"321":{"start":{"line":1103,"column":2},"end":{"line":1103,"column":16}},"322":{"start":{"line":1112,"column":0},"end":{"line":1126,"column":2}},"323":{"start":{"line":1113,"column":2},"end":{"line":1113,"column":21}},"324":{"start":{"line":1114,"column":2},"end":{"line":1116,"column":11}},"325":{"start":{"line":1115,"column":4},"end":{"line":1115,"column":50}},"326":{"start":{"line":1118,"column":2},"end":{"line":1125,"column":4}},"327":{"start":{"line":1154,"column":0},"end":{"line":1158,"column":2}},"328":{"start":{"line":1155,"column":2},"end":{"line":1155,"column":54}},"329":{"start":{"line":1156,"column":2},"end":{"line":1156,"column":21}},"330":{"start":{"line":1157,"column":2},"end":{"line":1157,"column":27}},"331":{"start":{"line":1178,"column":0},"end":{"line":1188,"column":2}},"332":{"start":{"line":1179,"column":2},"end":{"line":1183,"column":3}},"333":{"start":{"line":1180,"column":4},"end":{"line":1180,"column":22}},"334":{"start":{"line":1182,"column":4},"end":{"line":1182,"column":22}},"335":{"start":{"line":1185,"column":2},"end":{"line":1185,"column":17}},"336":{"start":{"line":1186,"column":2},"end":{"line":1186,"column":20}},"337":{"start":{"line":1187,"column":2},"end":{"line":1187,"column":18}},"338":{"start":{"line":1196,"column":0},"end":{"line":1205,"column":2}},"339":{"start":{"line":1197,"column":2},"end":{"line":1197,"column":23}},"340":{"start":{"line":1199,"column":2},"end":{"line":1199,"column":39}},"341":{"start":{"line":1200,"column":2},"end":{"line":1200,"column":35}},"342":{"start":{"line":1201,"column":2},"end":{"line":1201,"column":41}},"343":{"start":{"line":1202,"column":2},"end":{"line":1202,"column":36}},"344":{"start":{"line":1204,"column":2},"end":{"line":1204,"column":15}},"345":{"start":{"line":1212,"column":0},"end":{"line":1214,"column":2}},"346":{"start":{"line":1213,"column":2},"end":{"line":1213,"column":20}},"347":{"start":{"line":1225,"column":0},"end":{"line":1233,"column":2}},"348":{"start":{"line":1226,"column":2},"end":{"line":1226,"column":42}},"349":{"start":{"line":1226,"column":28},"end":{"line":1226,"column":42}},"350":{"start":{"line":1228,"column":2},"end":{"line":1232,"column":3}},"351":{"start":{"line":1229,"column":4},"end":{"line":1229,"column":35}},"352":{"start":{"line":1231,"column":4},"end":{"line":1231,"column":29}},"353":{"start":{"line":1245,"column":0},"end":{"line":1248,"column":2}},"354":{"start":{"line":1246,"column":2},"end":{"line":1246,"column":49}},"355":{"start":{"line":1246,"column":37},"end":{"line":1246,"column":49}},"356":{"start":{"line":1247,"column":2},"end":{"line":1247,"column":27}},"357":{"start":{"line":1257,"column":0},"end":{"line":1259,"column":2}},"358":{"start":{"line":1258,"column":2},"end":{"line":1258,"column":29}},"359":{"start":{"line":1267,"column":0},"end":{"line":1273,"column":2}},"360":{"start":{"line":1268,"column":2},"end":{"line":1268,"column":35}},"361":{"start":{"line":1268,"column":28},"end":{"line":1268,"column":35}},"362":{"start":{"line":1270,"column":2},"end":{"line":1270,"column":27}},"363":{"start":{"line":1271,"column":2},"end":{"line":1271,"column":30}},"364":{"start":{"line":1272,"column":2},"end":{"line":1272,"column":16}},"365":{"start":{"line":1283,"column":0},"end":{"line":1289,"column":2}},"366":{"start":{"line":1284,"column":2},"end":{"line":1284,"column":54}},"367":{"start":{"line":1284,"column":47},"end":{"line":1284,"column":54}},"368":{"start":{"line":1285,"column":2},"end":{"line":1285,"column":43}},"369":{"start":{"line":1285,"column":36},"end":{"line":1285,"column":43}},"370":{"start":{"line":1287,"column":2},"end":{"line":1287,"column":55}},"371":{"start":{"line":1287,"column":29},"end":{"line":1287,"column":55}},"372":{"start":{"line":1288,"column":2},"end":{"line":1288,"column":43}},"373":{"start":{"line":1299,"column":0},"end":{"line":1304,"column":2}},"374":{"start":{"line":1300,"column":2},"end":{"line":1300,"column":54}},"375":{"start":{"line":1300,"column":47},"end":{"line":1300,"column":54}},"376":{"start":{"line":1301,"column":2},"end":{"line":1301,"column":43}},"377":{"start":{"line":1301,"column":36},"end":{"line":1301,"column":43}},"378":{"start":{"line":1303,"column":2},"end":{"line":1303,"column":49}},"379":{"start":{"line":1313,"column":0},"end":{"line":1319,"column":2}},"380":{"start":{"line":1314,"column":2},"end":{"line":1314,"column":56}},"381":{"start":{"line":1314,"column":47},"end":{"line":1314,"column":56}},"382":{"start":{"line":1316,"column":2},"end":{"line":1316,"column":39}},"383":{"start":{"line":1316,"column":30},"end":{"line":1316,"column":39}},"384":{"start":{"line":1317,"column":2},"end":{"line":1317,"column":53}},"385":{"start":{"line":1317,"column":44},"end":{"line":1317,"column":53}},"386":{"start":{"line":1318,"column":2},"end":{"line":1318,"column":41}},"387":{"start":{"line":1327,"column":0},"end":{"line":1334,"column":2}},"388":{"start":{"line":1328,"column":2},"end":{"line":1333,"column":4}},"389":{"start":{"line":1342,"column":0},"end":{"line":1352,"column":1}},"390":{"start":{"line":1343,"column":2},"end":{"line":1343,"column":58}},"391":{"start":{"line":1343,"column":47},"end":{"line":1343,"column":58}},"392":{"start":{"line":1345,"column":2},"end":{"line":1345,"column":31}},"393":{"start":{"line":1347,"column":2},"end":{"line":1349,"column":3}},"394":{"start":{"line":1348,"column":4},"end":{"line":1348,"column":57}},"395":{"start":{"line":1348,"column":34},"end":{"line":1348,"column":57}},"396":{"start":{"line":1351,"column":2},"end":{"line":1351,"column":14}},"397":{"start":{"line":1369,"column":0},"end":{"line":1569,"column":5}},"398":{"start":{"line":1370,"column":2},"end":{"line":1412,"column":30}},"399":{"start":{"line":1414,"column":2},"end":{"line":1414,"column":33}},"400":{"start":{"line":1415,"column":2},"end":{"line":1415,"column":33}},"401":{"start":{"line":1416,"column":2},"end":{"line":1416,"column":33}},"402":{"start":{"line":1417,"column":2},"end":{"line":1417,"column":31}},"403":{"start":{"line":1419,"column":2},"end":{"line":1419,"column":32}},"404":{"start":{"line":1420,"column":2},"end":{"line":1420,"column":32}},"405":{"start":{"line":1421,"column":2},"end":{"line":1421,"column":27}},"406":{"start":{"line":1422,"column":2},"end":{"line":1422,"column":33}},"407":{"start":{"line":1423,"column":2},"end":{"line":1423,"column":21}},"408":{"start":{"line":1424,"column":2},"end":{"line":1424,"column":31}},"409":{"start":{"line":1425,"column":2},"end":{"line":1425,"column":50}},"410":{"start":{"line":1426,"column":2},"end":{"line":1426,"column":58}},"411":{"start":{"line":1428,"column":2},"end":{"line":1428,"column":33}},"412":{"start":{"line":1429,"column":2},"end":{"line":1429,"column":152}},"413":{"start":{"line":1431,"column":2},"end":{"line":1431,"column":62}},"414":{"start":{"line":1433,"column":2},"end":{"line":1433,"column":99}},"415":{"start":{"line":1434,"column":2},"end":{"line":1434,"column":34}},"416":{"start":{"line":1436,"column":2},"end":{"line":1436,"column":24}},"417":{"start":{"line":1437,"column":2},"end":{"line":1437,"column":21}},"418":{"start":{"line":1438,"column":2},"end":{"line":1438,"column":55}},"419":{"start":{"line":1440,"column":2},"end":{"line":1566,"column":4}},"420":{"start":{"line":1441,"column":4},"end":{"line":1447,"column":10}},"421":{"start":{"line":1449,"column":4},"end":{"line":1449,"column":35}},"422":{"start":{"line":1449,"column":24},"end":{"line":1449,"column":33}},"423":{"start":{"line":1451,"column":4},"end":{"line":1451,"column":28}},"424":{"start":{"line":1452,"column":4},"end":{"line":1454,"column":5}},"425":{"start":{"line":1453,"column":6},"end":{"line":1453,"column":46}},"426":{"start":{"line":1457,"column":4},"end":{"line":1457,"column":14}},"427":{"start":{"line":1458,"column":4},"end":{"line":1458,"column":17}},"428":{"start":{"line":1460,"column":4},"end":{"line":1461,"column":56}},"429":{"start":{"line":1460,"column":22},"end":{"line":1460,"column":47}},"430":{"start":{"line":1461,"column":9},"end":{"line":1461,"column":56}},"431":{"start":{"line":1461,"column":28},"end":{"line":1461,"column":54}},"432":{"start":{"line":1464,"column":4},"end":{"line":1464,"column":15}},"433":{"start":{"line":1465,"column":4},"end":{"line":1465,"column":17}},"434":{"start":{"line":1466,"column":4},"end":{"line":1486,"column":5}},"435":{"start":{"line":1467,"column":6},"end":{"line":1467,"column":26}},"436":{"start":{"line":1468,"column":6},"end":{"line":1468,"column":19}},"437":{"start":{"line":1469,"column":6},"end":{"line":1472,"column":7}},"438":{"start":{"line":1470,"column":8},"end":{"line":1470,"column":21}},"439":{"start":{"line":1471,"column":8},"end":{"line":1471,"column":29}},"440":{"start":{"line":1473,"column":11},"end":{"line":1486,"column":5}},"441":{"start":{"line":1474,"column":6},"end":{"line":1474,"column":27}},"442":{"start":{"line":1475,"column":6},"end":{"line":1475,"column":19}},"443":{"start":{"line":1476,"column":6},"end":{"line":1476,"column":19}},"444":{"start":{"line":1477,"column":6},"end":{"line":1485,"column":7}},"445":{"start":{"line":1478,"column":8},"end":{"line":1478,"column":17}},"446":{"start":{"line":1479,"column":8},"end":{"line":1479,"column":23}},"447":{"start":{"line":1480,"column":8},"end":{"line":1480,"column":23}},"448":{"start":{"line":1481,"column":8},"end":{"line":1481,"column":23}},"449":{"start":{"line":1482,"column":8},"end":{"line":1484,"column":46}},"450":{"start":{"line":1482,"column":28},"end":{"line":1482,"column":40}},"451":{"start":{"line":1483,"column":13},"end":{"line":1484,"column":46}},"452":{"start":{"line":1483,"column":32},"end":{"line":1483,"column":45}},"453":{"start":{"line":1483,"column":46},"end":{"line":1483,"column":67}},"454":{"start":{"line":1484,"column":13},"end":{"line":1484,"column":46}},"455":{"start":{"line":1484,"column":32},"end":{"line":1484,"column":44}},"456":{"start":{"line":1489,"column":4},"end":{"line":1489,"column":15}},"457":{"start":{"line":1490,"column":4},"end":{"line":1494,"column":5}},"458":{"start":{"line":1491,"column":6},"end":{"line":1491,"column":26}},"459":{"start":{"line":1492,"column":6},"end":{"line":1492,"column":19}},"460":{"start":{"line":1493,"column":6},"end":{"line":1493,"column":21}},"461":{"start":{"line":1497,"column":4},"end":{"line":1497,"column":14}},"462":{"start":{"line":1498,"column":4},"end":{"line":1506,"column":5}},"463":{"start":{"line":1499,"column":6},"end":{"line":1499,"column":26}},"464":{"start":{"line":1500,"column":6},"end":{"line":1500,"column":19}},"465":{"start":{"line":1501,"column":6},"end":{"line":1501,"column":21}},"466":{"start":{"line":1502,"column":6},"end":{"line":1502,"column":19}},"467":{"start":{"line":1503,"column":6},"end":{"line":1505,"column":7}},"468":{"start":{"line":1504,"column":8},"end":{"line":1504,"column":37}},"469":{"start":{"line":1509,"column":4},"end":{"line":1509,"column":14}},"470":{"start":{"line":1510,"column":4},"end":{"line":1518,"column":5}},"471":{"start":{"line":1511,"column":6},"end":{"line":1511,"column":26}},"472":{"start":{"line":1512,"column":6},"end":{"line":1512,"column":19}},"473":{"start":{"line":1513,"column":6},"end":{"line":1513,"column":21}},"474":{"start":{"line":1514,"column":6},"end":{"line":1514,"column":19}},"475":{"start":{"line":1515,"column":6},"end":{"line":1517,"column":7}},"476":{"start":{"line":1516,"column":8},"end":{"line":1516,"column":37}},"477":{"start":{"line":1521,"column":4},"end":{"line":1521,"column":14}},"478":{"start":{"line":1522,"column":4},"end":{"line":1522,"column":16}},"479":{"start":{"line":1523,"column":4},"end":{"line":1537,"column":5}},"480":{"start":{"line":1524,"column":6},"end":{"line":1524,"column":26}},"481":{"start":{"line":1525,"column":6},"end":{"line":1525,"column":19}},"482":{"start":{"line":1526,"column":6},"end":{"line":1526,"column":19}},"483":{"start":{"line":1527,"column":6},"end":{"line":1529,"column":7}},"484":{"start":{"line":1528,"column":8},"end":{"line":1528,"column":17}},"485":{"start":{"line":1530,"column":11},"end":{"line":1537,"column":5}},"486":{"start":{"line":1531,"column":6},"end":{"line":1531,"column":27}},"487":{"start":{"line":1532,"column":6},"end":{"line":1532,"column":27}},"488":{"start":{"line":1533,"column":6},"end":{"line":1533,"column":20}},"489":{"start":{"line":1534,"column":6},"end":{"line":1536,"column":7}},"490":{"start":{"line":1535,"column":8},"end":{"line":1535,"column":17}},"491":{"start":{"line":1540,"column":4},"end":{"line":1540,"column":14}},"492":{"start":{"line":1541,"column":4},"end":{"line":1550,"column":5}},"493":{"start":{"line":1542,"column":6},"end":{"line":1542,"column":26}},"494":{"start":{"line":1543,"column":6},"end":{"line":1543,"column":19}},"495":{"start":{"line":1544,"column":6},"end":{"line":1544,"column":19}},"496":{"start":{"line":1545,"column":6},"end":{"line":1545,"column":20}},"497":{"start":{"line":1546,"column":6},"end":{"line":1546,"column":18}},"498":{"start":{"line":1547,"column":6},"end":{"line":1549,"column":7}},"499":{"start":{"line":1548,"column":8},"end":{"line":1548,"column":17}},"500":{"start":{"line":1552,"column":4},"end":{"line":1552,"column":16}},"501":{"start":{"line":1553,"column":4},"end":{"line":1553,"column":18}},"502":{"start":{"line":1554,"column":4},"end":{"line":1557,"column":5}},"503":{"start":{"line":1555,"column":6},"end":{"line":1555,"column":19}},"504":{"start":{"line":1556,"column":6},"end":{"line":1556,"column":27}},"505":{"start":{"line":1561,"column":4},"end":{"line":1563,"column":5}},"506":{"start":{"line":1562,"column":6},"end":{"line":1562,"column":46}},"507":{"start":{"line":1565,"column":4},"end":{"line":1565,"column":13}},"508":{"start":{"line":1568,"column":2},"end":{"line":1568,"column":23}},"509":{"start":{"line":1571,"column":0},"end":{"line":1571,"column":70}},"510":{"start":{"line":1591,"column":0},"end":{"line":1595,"column":2}},"511":{"start":{"line":1592,"column":2},"end":{"line":1594,"column":3}},"512":{"start":{"line":1593,"column":4},"end":{"line":1593,"column":17}},"513":{"start":{"line":1604,"column":0},"end":{"line":1606,"column":2}},"514":{"start":{"line":1605,"column":2},"end":{"line":1605,"column":44}},"515":{"start":{"line":1615,"column":0},"end":{"line":1621,"column":2}},"516":{"start":{"line":1616,"column":2},"end":{"line":1616,"column":62}},"517":{"start":{"line":1616,"column":55},"end":{"line":1616,"column":62}},"518":{"start":{"line":1618,"column":2},"end":{"line":1620,"column":11}},"519":{"start":{"line":1619,"column":4},"end":{"line":1619,"column":54}},"520":{"start":{"line":1629,"column":0},"end":{"line":1631,"column":2}},"521":{"start":{"line":1630,"column":2},"end":{"line":1630,"column":70}},"522":{"start":{"line":1633,"column":0},"end":{"line":1754,"column":2}},"523":{"start":{"line":1756,"column":0},"end":{"line":1756,"column":68}},"524":{"start":{"line":1758,"column":0},"end":{"line":1758,"column":84}},"525":{"start":{"line":1779,"column":0},"end":{"line":1787,"column":2}},"526":{"start":{"line":1780,"column":2},"end":{"line":1782,"column":3}},"527":{"start":{"line":1781,"column":4},"end":{"line":1781,"column":53}},"528":{"start":{"line":1784,"column":2},"end":{"line":1786,"column":25}},"529":{"start":{"line":1789,"column":0},"end":{"line":1789,"column":70}},"530":{"start":{"line":1802,"column":0},"end":{"line":1804,"column":2}},"531":{"start":{"line":1803,"column":2},"end":{"line":1803,"column":34}},"532":{"start":{"line":1812,"column":0},"end":{"line":1817,"column":2}},"533":{"start":{"line":1813,"column":2},"end":{"line":1813,"column":21}},"534":{"start":{"line":1814,"column":2},"end":{"line":1814,"column":33}},"535":{"start":{"line":1816,"column":2},"end":{"line":1816,"column":13}},"536":{"start":{"line":1837,"column":0},"end":{"line":1858,"column":2}},"537":{"start":{"line":1838,"column":2},"end":{"line":1839,"column":14}},"538":{"start":{"line":1841,"column":2},"end":{"line":1847,"column":3}},"539":{"start":{"line":1842,"column":4},"end":{"line":1842,"column":25}},"540":{"start":{"line":1844,"column":4},"end":{"line":1844,"column":54}},"541":{"start":{"line":1844,"column":24},"end":{"line":1844,"column":54}},"542":{"start":{"line":1845,"column":4},"end":{"line":1845,"column":13}},"543":{"start":{"line":1846,"column":4},"end":{"line":1846,"column":21}},"544":{"start":{"line":1849,"column":2},"end":{"line":1849,"column":29}},"545":{"start":{"line":1850,"column":2},"end":{"line":1857,"column":3}},"546":{"start":{"line":1852,"column":4},"end":{"line":1852,"column":43}},"547":{"start":{"line":1853,"column":4},"end":{"line":1853,"column":17}},"548":{"start":{"line":1856,"column":4},"end":{"line":1856,"column":43}},"549":{"start":{"line":1868,"column":0},"end":{"line":1879,"column":2}},"550":{"start":{"line":1869,"column":2},"end":{"line":1869,"column":27}},"551":{"start":{"line":1869,"column":14},"end":{"line":1869,"column":27}},"552":{"start":{"line":1871,"column":2},"end":{"line":1871,"column":23}},"553":{"start":{"line":1873,"column":2},"end":{"line":1876,"column":3}},"554":{"start":{"line":1874,"column":4},"end":{"line":1874,"column":38}},"555":{"start":{"line":1874,"column":25},"end":{"line":1874,"column":38}},"556":{"start":{"line":1875,"column":4},"end":{"line":1875,"column":26}},"557":{"start":{"line":1878,"column":2},"end":{"line":1878,"column":14}},"558":{"start":{"line":1891,"column":0},"end":{"line":1902,"column":2}},"559":{"start":{"line":1892,"column":2},"end":{"line":1892,"column":26}},"560":{"start":{"line":1892,"column":14},"end":{"line":1892,"column":26}},"561":{"start":{"line":1894,"column":2},"end":{"line":1894,"column":23}},"562":{"start":{"line":1896,"column":2},"end":{"line":1899,"column":3}},"563":{"start":{"line":1897,"column":4},"end":{"line":1897,"column":37}},"564":{"start":{"line":1897,"column":25},"end":{"line":1897,"column":37}},"565":{"start":{"line":1898,"column":4},"end":{"line":1898,"column":26}},"566":{"start":{"line":1901,"column":2},"end":{"line":1901,"column":14}},"567":{"start":{"line":1913,"column":0},"end":{"line":1920,"column":2}},"568":{"start":{"line":1914,"column":2},"end":{"line":1914,"column":33}},"569":{"start":{"line":1915,"column":2},"end":{"line":1917,"column":3}},"570":{"start":{"line":1916,"column":4},"end":{"line":1916,"column":14}},"571":{"start":{"line":1919,"column":2},"end":{"line":1919,"column":19}},"572":{"start":{"line":1932,"column":0},"end":{"line":1944,"column":2}},"573":{"start":{"line":1933,"column":2},"end":{"line":1933,"column":33}},"574":{"start":{"line":1935,"column":2},"end":{"line":1937,"column":3}},"575":{"start":{"line":1936,"column":4},"end":{"line":1936,"column":13}},"576":{"start":{"line":1939,"column":2},"end":{"line":1941,"column":3}},"577":{"start":{"line":1940,"column":4},"end":{"line":1940,"column":13}},"578":{"start":{"line":1943,"column":2},"end":{"line":1943,"column":30}},"579":{"start":{"line":1955,"column":0},"end":{"line":1963,"column":2}},"580":{"start":{"line":1956,"column":2},"end":{"line":1956,"column":33}},"581":{"start":{"line":1958,"column":2},"end":{"line":1960,"column":3}},"582":{"start":{"line":1959,"column":4},"end":{"line":1959,"column":13}},"583":{"start":{"line":1962,"column":2},"end":{"line":1962,"column":17}},"584":{"start":{"line":1973,"column":0},"end":{"line":1983,"column":2}},"585":{"start":{"line":1974,"column":2},"end":{"line":1974,"column":21}},"586":{"start":{"line":1974,"column":14},"end":{"line":1974,"column":21}},"587":{"start":{"line":1975,"column":2},"end":{"line":1975,"column":33}},"588":{"start":{"line":1977,"column":2},"end":{"line":1977,"column":27}},"589":{"start":{"line":1977,"column":20},"end":{"line":1977,"column":27}},"590":{"start":{"line":1979,"column":2},"end":{"line":1982,"column":3}},"591":{"start":{"line":1980,"column":4},"end":{"line":1980,"column":26}},"592":{"start":{"line":1981,"column":4},"end":{"line":1981,"column":17}},"593":{"start":{"line":1993,"column":0},"end":{"line":2011,"column":2}},"594":{"start":{"line":1994,"column":2},"end":{"line":1994,"column":46}},"595":{"start":{"line":1994,"column":36},"end":{"line":1994,"column":46}},"596":{"start":{"line":1995,"column":2},"end":{"line":1995,"column":24}},"597":{"start":{"line":1997,"column":2},"end":{"line":2000,"column":3}},"598":{"start":{"line":1998,"column":4},"end":{"line":1998,"column":31}},"599":{"start":{"line":1999,"column":4},"end":{"line":1999,"column":34}},"600":{"start":{"line":1999,"column":22},"end":{"line":1999,"column":34}},"601":{"start":{"line":2002,"column":2},"end":{"line":2002,"column":36}},"602":{"start":{"line":2002,"column":19},"end":{"line":2002,"column":36}},"603":{"start":{"line":2004,"column":2},"end":{"line":2008,"column":3}},"604":{"start":{"line":2005,"column":4},"end":{"line":2005,"column":33}},"605":{"start":{"line":2005,"column":24},"end":{"line":2005,"column":33}},"606":{"start":{"line":2006,"column":4},"end":{"line":2006,"column":31}},"607":{"start":{"line":2006,"column":22},"end":{"line":2006,"column":31}},"608":{"start":{"line":2007,"column":4},"end":{"line":2007,"column":51}},"609":{"start":{"line":2010,"column":2},"end":{"line":2010,"column":14}},"610":{"start":{"line":2019,"column":0},"end":{"line":2023,"column":2}},"611":{"start":{"line":2020,"column":2},"end":{"line":2022,"column":4}},"612":{"start":{"line":2101,"column":0},"end":{"line":2118,"column":2}},"613":{"start":{"line":2102,"column":2},"end":{"line":2102,"column":28}},"614":{"start":{"line":2104,"column":2},"end":{"line":2106,"column":3}},"615":{"start":{"line":2105,"column":4},"end":{"line":2105,"column":49}},"616":{"start":{"line":2108,"column":2},"end":{"line":2108,"column":19}},"617":{"start":{"line":2110,"column":2},"end":{"line":2110,"column":17}},"618":{"start":{"line":2111,"column":2},"end":{"line":2117,"column":3}},"619":{"start":{"line":2112,"column":4},"end":{"line":2112,"column":36}},"620":{"start":{"line":2113,"column":4},"end":{"line":2113,"column":45}},"621":{"start":{"line":2115,"column":4},"end":{"line":2115,"column":94}},"622":{"start":{"line":2116,"column":4},"end":{"line":2116,"column":36}},"623":{"start":{"line":2125,"column":0},"end":{"line":2134,"column":2}},"624":{"start":{"line":2126,"column":2},"end":{"line":2126,"column":15}},"625":{"start":{"line":2127,"column":2},"end":{"line":2133,"column":11}},"626":{"start":{"line":2128,"column":4},"end":{"line":2132,"column":6}},"627":{"start":{"line":2142,"column":0},"end":{"line":2176,"column":2}},"628":{"start":{"line":2143,"column":2},"end":{"line":2143,"column":25}},"629":{"start":{"line":2144,"column":2},"end":{"line":2144,"column":28}},"630":{"start":{"line":2146,"column":2},"end":{"line":2146,"column":15}},"631":{"start":{"line":2147,"column":2},"end":{"line":2149,"column":3}},"632":{"start":{"line":2148,"column":4},"end":{"line":2148,"column":48}},"633":{"start":{"line":2151,"column":2},"end":{"line":2153,"column":3}},"634":{"start":{"line":2152,"column":4},"end":{"line":2152,"column":54}},"635":{"start":{"line":2155,"column":2},"end":{"line":2175,"column":3}},"636":{"start":{"line":2156,"column":4},"end":{"line":2172,"column":5}},"637":{"start":{"line":2157,"column":6},"end":{"line":2171,"column":7}},"638":{"start":{"line":2158,"column":8},"end":{"line":2158,"column":51}},"639":{"start":{"line":2159,"column":8},"end":{"line":2159,"column":41}},"640":{"start":{"line":2160,"column":8},"end":{"line":2162,"column":9}},"641":{"start":{"line":2161,"column":10},"end":{"line":2161,"column":45}},"642":{"start":{"line":2164,"column":8},"end":{"line":2168,"column":10}},"643":{"start":{"line":2170,"column":8},"end":{"line":2170,"column":102}},"644":{"start":{"line":2174,"column":4},"end":{"line":2174,"column":69}},"645":{"start":{"line":2185,"column":0},"end":{"line":2193,"column":2}},"646":{"start":{"line":2186,"column":2},"end":{"line":2192,"column":11}},"647":{"start":{"line":2187,"column":4},"end":{"line":2191,"column":6}},"648":{"start":{"line":2198,"column":0},"end":{"line":2200,"column":2}},"649":{"start":{"line":2199,"column":2},"end":{"line":2199,"column":21}},"650":{"start":{"line":2205,"column":0},"end":{"line":2207,"column":2}},"651":{"start":{"line":2206,"column":2},"end":{"line":2206,"column":19}},"652":{"start":{"line":2227,"column":0},"end":{"line":2230,"column":1}},"653":{"start":{"line":2228,"column":2},"end":{"line":2228,"column":17}},"654":{"start":{"line":2229,"column":2},"end":{"line":2229,"column":20}},"655":{"start":{"line":2239,"column":0},"end":{"line":2246,"column":1}},"656":{"start":{"line":2240,"column":2},"end":{"line":2240,"column":20}},"657":{"start":{"line":2242,"column":2},"end":{"line":2242,"column":31}},"658":{"start":{"line":2243,"column":2},"end":{"line":2243,"column":36}},"659":{"start":{"line":2245,"column":2},"end":{"line":2245,"column":12}},"660":{"start":{"line":2255,"column":0},"end":{"line":2265,"column":1}},"661":{"start":{"line":2256,"column":2},"end":{"line":2256,"column":16}},"662":{"start":{"line":2258,"column":2},"end":{"line":2262,"column":3}},"663":{"start":{"line":2259,"column":4},"end":{"line":2259,"column":26}},"664":{"start":{"line":2260,"column":4},"end":{"line":2260,"column":40}},"665":{"start":{"line":2260,"column":32},"end":{"line":2260,"column":40}},"666":{"start":{"line":2261,"column":4},"end":{"line":2261,"column":63}},"667":{"start":{"line":2264,"column":2},"end":{"line":2264,"column":36}},"668":{"start":{"line":2273,"column":0},"end":{"line":2275,"column":1}},"669":{"start":{"line":2274,"column":2},"end":{"line":2274,"column":30}},"670":{"start":{"line":2290,"column":0},"end":{"line":2292,"column":1}},"671":{"start":{"line":2291,"column":2},"end":{"line":2291,"column":35}},"672":{"start":{"line":2305,"column":0},"end":{"line":2307,"column":1}},"673":{"start":{"line":2306,"column":2},"end":{"line":2306,"column":39}},"674":{"start":{"line":2317,"column":0},"end":{"line":2338,"column":1}},"675":{"start":{"line":2318,"column":2},"end":{"line":2322,"column":38}},"676":{"start":{"line":2324,"column":2},"end":{"line":2333,"column":3}},"677":{"start":{"line":2325,"column":4},"end":{"line":2325,"column":40}},"678":{"start":{"line":2325,"column":28},"end":{"line":2325,"column":40}},"679":{"start":{"line":2327,"column":4},"end":{"line":2327,"column":39}},"680":{"start":{"line":2327,"column":26},"end":{"line":2327,"column":39}},"681":{"start":{"line":2328,"column":4},"end":{"line":2328,"column":37}},"682":{"start":{"line":2328,"column":26},"end":{"line":2328,"column":37}},"683":{"start":{"line":2330,"column":4},"end":{"line":2330,"column":31}},"684":{"start":{"line":2331,"column":4},"end":{"line":2331,"column":49}},"685":{"start":{"line":2332,"column":4},"end":{"line":2332,"column":36}},"686":{"start":{"line":2335,"column":2},"end":{"line":2335,"column":38}},"687":{"start":{"line":2335,"column":26},"end":{"line":2335,"column":38}},"688":{"start":{"line":2337,"column":2},"end":{"line":2337,"column":11}},"689":{"start":{"line":2351,"column":0},"end":{"line":2369,"column":1}},"690":{"start":{"line":2352,"column":2},"end":{"line":2356,"column":38}},"691":{"start":{"line":2358,"column":2},"end":{"line":2365,"column":3}},"692":{"start":{"line":2359,"column":4},"end":{"line":2359,"column":39}},"693":{"start":{"line":2359,"column":26},"end":{"line":2359,"column":39}},"694":{"start":{"line":2360,"column":4},"end":{"line":2360,"column":37}},"695":{"start":{"line":2360,"column":26},"end":{"line":2360,"column":37}},"696":{"start":{"line":2362,"column":4},"end":{"line":2362,"column":31}},"697":{"start":{"line":2363,"column":4},"end":{"line":2363,"column":49}},"698":{"start":{"line":2364,"column":4},"end":{"line":2364,"column":36}},"699":{"start":{"line":2367,"column":2},"end":{"line":2367,"column":36}},"700":{"start":{"line":2367,"column":24},"end":{"line":2367,"column":36}},"701":{"start":{"line":2368,"column":2},"end":{"line":2368,"column":40}},"702":{"start":{"line":2368,"column":24},"end":{"line":2368,"column":40}},"703":{"start":{"line":2379,"column":0},"end":{"line":2406,"column":1}},"704":{"start":{"line":2380,"column":2},"end":{"line":2383,"column":46}},"705":{"start":{"line":2385,"column":2},"end":{"line":2403,"column":3}},"706":{"start":{"line":2386,"column":4},"end":{"line":2386,"column":45}},"707":{"start":{"line":2386,"column":40},"end":{"line":2386,"column":45}},"708":{"start":{"line":2388,"column":4},"end":{"line":2392,"column":5}},"709":{"start":{"line":2389,"column":6},"end":{"line":2389,"column":28}},"710":{"start":{"line":2390,"column":6},"end":{"line":2390,"column":14}},"711":{"start":{"line":2391,"column":6},"end":{"line":2391,"column":14}},"712":{"start":{"line":2394,"column":4},"end":{"line":2397,"column":5}},"713":{"start":{"line":2395,"column":6},"end":{"line":2395,"column":9}},"714":{"start":{"line":2396,"column":6},"end":{"line":2396,"column":14}},"715":{"start":{"line":2399,"column":4},"end":{"line":2402,"column":5}},"716":{"start":{"line":2400,"column":6},"end":{"line":2400,"column":9}},"717":{"start":{"line":2401,"column":6},"end":{"line":2401,"column":14}},"718":{"start":{"line":2405,"column":2},"end":{"line":2405,"column":21}},"719":{"start":{"line":2414,"column":0},"end":{"line":2421,"column":1}},"720":{"start":{"line":2415,"column":2},"end":{"line":2415,"column":32}},"721":{"start":{"line":2417,"column":2},"end":{"line":2417,"column":33}},"722":{"start":{"line":2418,"column":2},"end":{"line":2418,"column":38}},"723":{"start":{"line":2420,"column":2},"end":{"line":2420,"column":14}},"724":{"start":{"line":2431,"column":0},"end":{"line":2447,"column":1}},"725":{"start":{"line":2432,"column":2},"end":{"line":2432,"column":33}},"726":{"start":{"line":2434,"column":2},"end":{"line":2438,"column":3}},"727":{"start":{"line":2435,"column":4},"end":{"line":2435,"column":39}},"728":{"start":{"line":2437,"column":4},"end":{"line":2437,"column":39}},"729":{"start":{"line":2440,"column":2},"end":{"line":2440,"column":28}},"730":{"start":{"line":2442,"column":2},"end":{"line":2444,"column":3}},"731":{"start":{"line":2443,"column":4},"end":{"line":2443,"column":37}},"732":{"start":{"line":2446,"column":2},"end":{"line":2446,"column":17}},"733":{"start":{"line":2455,"column":0},"end":{"line":2462,"column":3}},"734":{"start":{"line":2456,"column":2},"end":{"line":2456,"column":23}},"735":{"start":{"line":2462,"column":3},"end":{"line":2484,"column":5}},"736":{"start":{"line":2463,"column":4},"end":{"line":2476,"column":5}},"737":{"start":{"line":2465,"column":6},"end":{"line":2465,"column":21}},"738":{"start":{"line":2466,"column":11},"end":{"line":2476,"column":5}},"739":{"start":{"line":2472,"column":6},"end":{"line":2472,"column":32}},"740":{"start":{"line":2475,"column":6},"end":{"line":2475,"column":34}},"741":{"start":{"line":2483,"column":4},"end":{"line":2483,"column":22}}},"branchMap":{"1":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"2":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"3":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":22}},{"start":{"line":111,"column":26},"end":{"line":111,"column":38}}]},"4":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"5":{"line":129,"type":"binary-expr","locations":[{"start":{"line":129,"column":6},"end":{"line":129,"column":20}},{"start":{"line":129,"column":24},"end":{"line":129,"column":36}}]},"6":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":2},"end":{"line":168,"column":2}},{"start":{"line":168,"column":2},"end":{"line":168,"column":2}}]},"7":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"8":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":184,"column":2}},{"start":{"line":184,"column":2},"end":{"line":184,"column":2}}]},"9":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":2},"end":{"line":187,"column":2}},{"start":{"line":187,"column":2},"end":{"line":187,"column":2}}]},"10":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"11":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":2},"end":{"line":204,"column":2}},{"start":{"line":204,"column":2},"end":{"line":204,"column":2}}]},"12":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":2},"end":{"line":243,"column":2}},{"start":{"line":243,"column":2},"end":{"line":243,"column":2}}]},"13":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":6},"end":{"line":243,"column":23}},{"start":{"line":243,"column":27},"end":{"line":243,"column":39}},{"start":{"line":243,"column":43},"end":{"line":243,"column":60}}]},"14":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":2},"end":{"line":244,"column":2}},{"start":{"line":244,"column":2},"end":{"line":244,"column":2}}]},"15":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":6},"end":{"line":246,"column":6}},{"start":{"line":246,"column":6},"end":{"line":246,"column":6}}]},"16":{"line":246,"type":"binary-expr","locations":[{"start":{"line":246,"column":10},"end":{"line":246,"column":24}},{"start":{"line":246,"column":28},"end":{"line":246,"column":47}}]},"17":{"line":289,"type":"if","locations":[{"start":{"line":289,"column":4},"end":{"line":289,"column":4}},{"start":{"line":289,"column":4},"end":{"line":289,"column":4}}]},"18":{"line":289,"type":"binary-expr","locations":[{"start":{"line":289,"column":8},"end":{"line":289,"column":20}},{"start":{"line":289,"column":24},"end":{"line":289,"column":41}},{"start":{"line":289,"column":45},"end":{"line":289,"column":69}}]},"19":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":2},"end":{"line":361,"column":2}},{"start":{"line":361,"column":2},"end":{"line":361,"column":2}}]},"20":{"line":377,"type":"if","locations":[{"start":{"line":377,"column":2},"end":{"line":377,"column":2}},{"start":{"line":377,"column":2},"end":{"line":377,"column":2}}]},"21":{"line":392,"type":"binary-expr","locations":[{"start":{"line":392,"column":21},"end":{"line":392,"column":29}},{"start":{"line":392,"column":34},"end":{"line":392,"column":70}}]},"22":{"line":394,"type":"if","locations":[{"start":{"line":394,"column":2},"end":{"line":394,"column":2}},{"start":{"line":394,"column":2},"end":{"line":394,"column":2}}]},"23":{"line":416,"type":"if","locations":[{"start":{"line":416,"column":4},"end":{"line":416,"column":4}},{"start":{"line":416,"column":4},"end":{"line":416,"column":4}}]},"24":{"line":458,"type":"if","locations":[{"start":{"line":458,"column":2},"end":{"line":458,"column":2}},{"start":{"line":458,"column":2},"end":{"line":458,"column":2}}]},"25":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":2},"end":{"line":480,"column":2}},{"start":{"line":480,"column":2},"end":{"line":480,"column":2}}]},"26":{"line":495,"type":"if","locations":[{"start":{"line":495,"column":2},"end":{"line":495,"column":2}},{"start":{"line":495,"column":2},"end":{"line":495,"column":2}}]},"27":{"line":520,"type":"if","locations":[{"start":{"line":520,"column":6},"end":{"line":520,"column":6}},{"start":{"line":520,"column":6},"end":{"line":520,"column":6}}]},"28":{"line":520,"type":"binary-expr","locations":[{"start":{"line":520,"column":10},"end":{"line":520,"column":26}},{"start":{"line":520,"column":30},"end":{"line":520,"column":44}}]},"29":{"line":523,"type":"if","locations":[{"start":{"line":523,"column":4},"end":{"line":523,"column":4}},{"start":{"line":523,"column":4},"end":{"line":523,"column":4}}]},"30":{"line":523,"type":"binary-expr","locations":[{"start":{"line":523,"column":8},"end":{"line":523,"column":24}},{"start":{"line":523,"column":28},"end":{"line":523,"column":42}}]},"31":{"line":627,"type":"if","locations":[{"start":{"line":627,"column":2},"end":{"line":627,"column":2}},{"start":{"line":627,"column":2},"end":{"line":627,"column":2}}]},"32":{"line":714,"type":"if","locations":[{"start":{"line":714,"column":2},"end":{"line":714,"column":2}},{"start":{"line":714,"column":2},"end":{"line":714,"column":2}}]},"33":{"line":715,"type":"cond-expr","locations":[{"start":{"line":715,"column":44},"end":{"line":715,"column":48}},{"start":{"line":715,"column":51},"end":{"line":715,"column":60}}]},"34":{"line":726,"type":"if","locations":[{"start":{"line":726,"column":6},"end":{"line":726,"column":6}},{"start":{"line":726,"column":6},"end":{"line":726,"column":6}}]},"35":{"line":737,"type":"if","locations":[{"start":{"line":737,"column":2},"end":{"line":737,"column":2}},{"start":{"line":737,"column":2},"end":{"line":737,"column":2}}]},"36":{"line":757,"type":"if","locations":[{"start":{"line":757,"column":2},"end":{"line":757,"column":2}},{"start":{"line":757,"column":2},"end":{"line":757,"column":2}}]},"37":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":2},"end":{"line":758,"column":2}},{"start":{"line":758,"column":2},"end":{"line":758,"column":2}}]},"38":{"line":762,"type":"if","locations":[{"start":{"line":762,"column":2},"end":{"line":762,"column":2}},{"start":{"line":762,"column":2},"end":{"line":762,"column":2}}]},"39":{"line":784,"type":"if","locations":[{"start":{"line":784,"column":2},"end":{"line":784,"column":2}},{"start":{"line":784,"column":2},"end":{"line":784,"column":2}}]},"40":{"line":786,"type":"cond-expr","locations":[{"start":{"line":786,"column":44},"end":{"line":786,"column":48}},{"start":{"line":786,"column":51},"end":{"line":786,"column":60}}]},"41":{"line":789,"type":"if","locations":[{"start":{"line":789,"column":2},"end":{"line":789,"column":2}},{"start":{"line":789,"column":2},"end":{"line":789,"column":2}}]},"42":{"line":800,"type":"if","locations":[{"start":{"line":800,"column":2},"end":{"line":800,"column":2}},{"start":{"line":800,"column":2},"end":{"line":800,"column":2}}]},"43":{"line":824,"type":"cond-expr","locations":[{"start":{"line":824,"column":44},"end":{"line":824,"column":48}},{"start":{"line":824,"column":51},"end":{"line":824,"column":60}}]},"44":{"line":829,"type":"if","locations":[{"start":{"line":829,"column":2},"end":{"line":829,"column":2}},{"start":{"line":829,"column":2},"end":{"line":829,"column":2}}]},"45":{"line":843,"type":"if","locations":[{"start":{"line":843,"column":2},"end":{"line":843,"column":2}},{"start":{"line":843,"column":2},"end":{"line":843,"column":2}}]},"46":{"line":887,"type":"if","locations":[{"start":{"line":887,"column":2},"end":{"line":887,"column":2}},{"start":{"line":887,"column":2},"end":{"line":887,"column":2}}]},"47":{"line":890,"type":"if","locations":[{"start":{"line":890,"column":2},"end":{"line":890,"column":2}},{"start":{"line":890,"column":2},"end":{"line":890,"column":2}}]},"48":{"line":909,"type":"if","locations":[{"start":{"line":909,"column":6},"end":{"line":909,"column":6}},{"start":{"line":909,"column":6},"end":{"line":909,"column":6}}]},"49":{"line":942,"type":"if","locations":[{"start":{"line":942,"column":2},"end":{"line":942,"column":2}},{"start":{"line":942,"column":2},"end":{"line":942,"column":2}}]},"50":{"line":948,"type":"if","locations":[{"start":{"line":948,"column":4},"end":{"line":948,"column":4}},{"start":{"line":948,"column":4},"end":{"line":948,"column":4}}]},"51":{"line":974,"type":"if","locations":[{"start":{"line":974,"column":6},"end":{"line":974,"column":6}},{"start":{"line":974,"column":6},"end":{"line":974,"column":6}}]},"52":{"line":974,"type":"binary-expr","locations":[{"start":{"line":974,"column":10},"end":{"line":974,"column":16}},{"start":{"line":974,"column":20},"end":{"line":974,"column":40}}]},"53":{"line":980,"type":"if","locations":[{"start":{"line":980,"column":14},"end":{"line":980,"column":14}},{"start":{"line":980,"column":14},"end":{"line":980,"column":14}}]},"54":{"line":992,"type":"if","locations":[{"start":{"line":992,"column":6},"end":{"line":992,"column":6}},{"start":{"line":992,"column":6},"end":{"line":992,"column":6}}]},"55":{"line":1000,"type":"if","locations":[{"start":{"line":1000,"column":8},"end":{"line":1000,"column":8}},{"start":{"line":1000,"column":8},"end":{"line":1000,"column":8}}]},"56":{"line":1005,"type":"if","locations":[{"start":{"line":1005,"column":8},"end":{"line":1005,"column":8}},{"start":{"line":1005,"column":8},"end":{"line":1005,"column":8}}]},"57":{"line":1013,"type":"if","locations":[{"start":{"line":1013,"column":8},"end":{"line":1013,"column":8}},{"start":{"line":1013,"column":8},"end":{"line":1013,"column":8}}]},"58":{"line":1041,"type":"if","locations":[{"start":{"line":1041,"column":4},"end":{"line":1041,"column":4}},{"start":{"line":1041,"column":4},"end":{"line":1041,"column":4}}]},"59":{"line":1044,"type":"if","locations":[{"start":{"line":1044,"column":4},"end":{"line":1044,"column":4}},{"start":{"line":1044,"column":4},"end":{"line":1044,"column":4}}]},"60":{"line":1047,"type":"if","locations":[{"start":{"line":1047,"column":12},"end":{"line":1047,"column":12}},{"start":{"line":1047,"column":12},"end":{"line":1047,"column":12}}]},"61":{"line":1054,"type":"if","locations":[{"start":{"line":1054,"column":12},"end":{"line":1054,"column":12}},{"start":{"line":1054,"column":12},"end":{"line":1054,"column":12}}]},"62":{"line":1076,"type":"if","locations":[{"start":{"line":1076,"column":4},"end":{"line":1076,"column":4}},{"start":{"line":1076,"column":4},"end":{"line":1076,"column":4}}]},"63":{"line":1098,"type":"if","locations":[{"start":{"line":1098,"column":4},"end":{"line":1098,"column":4}},{"start":{"line":1098,"column":4},"end":{"line":1098,"column":4}}]},"64":{"line":1179,"type":"if","locations":[{"start":{"line":1179,"column":2},"end":{"line":1179,"column":2}},{"start":{"line":1179,"column":2},"end":{"line":1179,"column":2}}]},"65":{"line":1179,"type":"binary-expr","locations":[{"start":{"line":1179,"column":6},"end":{"line":1179,"column":19}},{"start":{"line":1179,"column":23},"end":{"line":1179,"column":41}}]},"66":{"line":1226,"type":"if","locations":[{"start":{"line":1226,"column":2},"end":{"line":1226,"column":2}},{"start":{"line":1226,"column":2},"end":{"line":1226,"column":2}}]},"67":{"line":1228,"type":"if","locations":[{"start":{"line":1228,"column":2},"end":{"line":1228,"column":2}},{"start":{"line":1228,"column":2},"end":{"line":1228,"column":2}}]},"68":{"line":1246,"type":"if","locations":[{"start":{"line":1246,"column":2},"end":{"line":1246,"column":2}},{"start":{"line":1246,"column":2},"end":{"line":1246,"column":2}}]},"69":{"line":1268,"type":"if","locations":[{"start":{"line":1268,"column":2},"end":{"line":1268,"column":2}},{"start":{"line":1268,"column":2},"end":{"line":1268,"column":2}}]},"70":{"line":1284,"type":"if","locations":[{"start":{"line":1284,"column":2},"end":{"line":1284,"column":2}},{"start":{"line":1284,"column":2},"end":{"line":1284,"column":2}}]},"71":{"line":1284,"type":"binary-expr","locations":[{"start":{"line":1284,"column":6},"end":{"line":1284,"column":21}},{"start":{"line":1284,"column":25},"end":{"line":1284,"column":45}}]},"72":{"line":1285,"type":"if","locations":[{"start":{"line":1285,"column":2},"end":{"line":1285,"column":2}},{"start":{"line":1285,"column":2},"end":{"line":1285,"column":2}}]},"73":{"line":1287,"type":"if","locations":[{"start":{"line":1287,"column":2},"end":{"line":1287,"column":2}},{"start":{"line":1287,"column":2},"end":{"line":1287,"column":2}}]},"74":{"line":1300,"type":"if","locations":[{"start":{"line":1300,"column":2},"end":{"line":1300,"column":2}},{"start":{"line":1300,"column":2},"end":{"line":1300,"column":2}}]},"75":{"line":1300,"type":"binary-expr","locations":[{"start":{"line":1300,"column":6},"end":{"line":1300,"column":21}},{"start":{"line":1300,"column":25},"end":{"line":1300,"column":45}}]},"76":{"line":1301,"type":"if","locations":[{"start":{"line":1301,"column":2},"end":{"line":1301,"column":2}},{"start":{"line":1301,"column":2},"end":{"line":1301,"column":2}}]},"77":{"line":1314,"type":"if","locations":[{"start":{"line":1314,"column":2},"end":{"line":1314,"column":2}},{"start":{"line":1314,"column":2},"end":{"line":1314,"column":2}}]},"78":{"line":1314,"type":"binary-expr","locations":[{"start":{"line":1314,"column":6},"end":{"line":1314,"column":21}},{"start":{"line":1314,"column":25},"end":{"line":1314,"column":45}}]},"79":{"line":1316,"type":"if","locations":[{"start":{"line":1316,"column":2},"end":{"line":1316,"column":2}},{"start":{"line":1316,"column":2},"end":{"line":1316,"column":2}}]},"80":{"line":1317,"type":"if","locations":[{"start":{"line":1317,"column":2},"end":{"line":1317,"column":2}},{"start":{"line":1317,"column":2},"end":{"line":1317,"column":2}}]},"81":{"line":1343,"type":"if","locations":[{"start":{"line":1343,"column":2},"end":{"line":1343,"column":2}},{"start":{"line":1343,"column":2},"end":{"line":1343,"column":2}}]},"82":{"line":1343,"type":"binary-expr","locations":[{"start":{"line":1343,"column":6},"end":{"line":1343,"column":18}},{"start":{"line":1343,"column":22},"end":{"line":1343,"column":45}}]},"83":{"line":1348,"type":"if","locations":[{"start":{"line":1348,"column":4},"end":{"line":1348,"column":4}},{"start":{"line":1348,"column":4},"end":{"line":1348,"column":4}}]},"84":{"line":1449,"type":"if","locations":[{"start":{"line":1449,"column":4},"end":{"line":1449,"column":4}},{"start":{"line":1449,"column":4},"end":{"line":1449,"column":4}}]},"85":{"line":1452,"type":"if","locations":[{"start":{"line":1452,"column":4},"end":{"line":1452,"column":4}},{"start":{"line":1452,"column":4},"end":{"line":1452,"column":4}}]},"86":{"line":1460,"type":"if","locations":[{"start":{"line":1460,"column":4},"end":{"line":1460,"column":4}},{"start":{"line":1460,"column":4},"end":{"line":1460,"column":4}}]},"87":{"line":1461,"type":"if","locations":[{"start":{"line":1461,"column":9},"end":{"line":1461,"column":9}},{"start":{"line":1461,"column":9},"end":{"line":1461,"column":9}}]},"88":{"line":1466,"type":"if","locations":[{"start":{"line":1466,"column":4},"end":{"line":1466,"column":4}},{"start":{"line":1466,"column":4},"end":{"line":1466,"column":4}}]},"89":{"line":1469,"type":"if","locations":[{"start":{"line":1469,"column":6},"end":{"line":1469,"column":6}},{"start":{"line":1469,"column":6},"end":{"line":1469,"column":6}}]},"90":{"line":1473,"type":"if","locations":[{"start":{"line":1473,"column":11},"end":{"line":1473,"column":11}},{"start":{"line":1473,"column":11},"end":{"line":1473,"column":11}}]},"91":{"line":1477,"type":"if","locations":[{"start":{"line":1477,"column":6},"end":{"line":1477,"column":6}},{"start":{"line":1477,"column":6},"end":{"line":1477,"column":6}}]},"92":{"line":1482,"type":"if","locations":[{"start":{"line":1482,"column":8},"end":{"line":1482,"column":8}},{"start":{"line":1482,"column":8},"end":{"line":1482,"column":8}}]},"93":{"line":1483,"type":"if","locations":[{"start":{"line":1483,"column":13},"end":{"line":1483,"column":13}},{"start":{"line":1483,"column":13},"end":{"line":1483,"column":13}}]},"94":{"line":1484,"type":"if","locations":[{"start":{"line":1484,"column":13},"end":{"line":1484,"column":13}},{"start":{"line":1484,"column":13},"end":{"line":1484,"column":13}}]},"95":{"line":1490,"type":"if","locations":[{"start":{"line":1490,"column":4},"end":{"line":1490,"column":4}},{"start":{"line":1490,"column":4},"end":{"line":1490,"column":4}}]},"96":{"line":1498,"type":"if","locations":[{"start":{"line":1498,"column":4},"end":{"line":1498,"column":4}},{"start":{"line":1498,"column":4},"end":{"line":1498,"column":4}}]},"97":{"line":1503,"type":"if","locations":[{"start":{"line":1503,"column":6},"end":{"line":1503,"column":6}},{"start":{"line":1503,"column":6},"end":{"line":1503,"column":6}}]},"98":{"line":1510,"type":"if","locations":[{"start":{"line":1510,"column":4},"end":{"line":1510,"column":4}},{"start":{"line":1510,"column":4},"end":{"line":1510,"column":4}}]},"99":{"line":1515,"type":"if","locations":[{"start":{"line":1515,"column":6},"end":{"line":1515,"column":6}},{"start":{"line":1515,"column":6},"end":{"line":1515,"column":6}}]},"100":{"line":1523,"type":"if","locations":[{"start":{"line":1523,"column":4},"end":{"line":1523,"column":4}},{"start":{"line":1523,"column":4},"end":{"line":1523,"column":4}}]},"101":{"line":1527,"type":"if","locations":[{"start":{"line":1527,"column":6},"end":{"line":1527,"column":6}},{"start":{"line":1527,"column":6},"end":{"line":1527,"column":6}}]},"102":{"line":1530,"type":"if","locations":[{"start":{"line":1530,"column":11},"end":{"line":1530,"column":11}},{"start":{"line":1530,"column":11},"end":{"line":1530,"column":11}}]},"103":{"line":1534,"type":"if","locations":[{"start":{"line":1534,"column":6},"end":{"line":1534,"column":6}},{"start":{"line":1534,"column":6},"end":{"line":1534,"column":6}}]},"104":{"line":1541,"type":"if","locations":[{"start":{"line":1541,"column":4},"end":{"line":1541,"column":4}},{"start":{"line":1541,"column":4},"end":{"line":1541,"column":4}}]},"105":{"line":1547,"type":"if","locations":[{"start":{"line":1547,"column":6},"end":{"line":1547,"column":6}},{"start":{"line":1547,"column":6},"end":{"line":1547,"column":6}}]},"106":{"line":1547,"type":"binary-expr","locations":[{"start":{"line":1547,"column":10},"end":{"line":1547,"column":23}},{"start":{"line":1547,"column":28},"end":{"line":1547,"column":42}},{"start":{"line":1547,"column":46},"end":{"line":1547,"column":63}}]},"107":{"line":1554,"type":"if","locations":[{"start":{"line":1554,"column":4},"end":{"line":1554,"column":4}},{"start":{"line":1554,"column":4},"end":{"line":1554,"column":4}}]},"108":{"line":1554,"type":"binary-expr","locations":[{"start":{"line":1554,"column":8},"end":{"line":1554,"column":18}},{"start":{"line":1554,"column":22},"end":{"line":1554,"column":33}}]},"109":{"line":1561,"type":"if","locations":[{"start":{"line":1561,"column":4},"end":{"line":1561,"column":4}},{"start":{"line":1561,"column":4},"end":{"line":1561,"column":4}}]},"110":{"line":1592,"type":"if","locations":[{"start":{"line":1592,"column":2},"end":{"line":1592,"column":2}},{"start":{"line":1592,"column":2},"end":{"line":1592,"column":2}}]},"111":{"line":1592,"type":"binary-expr","locations":[{"start":{"line":1592,"column":6},"end":{"line":1592,"column":11}},{"start":{"line":1592,"column":15},"end":{"line":1592,"column":67}}]},"112":{"line":1616,"type":"if","locations":[{"start":{"line":1616,"column":2},"end":{"line":1616,"column":2}},{"start":{"line":1616,"column":2},"end":{"line":1616,"column":2}}]},"113":{"line":1616,"type":"binary-expr","locations":[{"start":{"line":1616,"column":6},"end":{"line":1616,"column":19}},{"start":{"line":1616,"column":23},"end":{"line":1616,"column":53}}]},"114":{"line":1780,"type":"if","locations":[{"start":{"line":1780,"column":2},"end":{"line":1780,"column":2}},{"start":{"line":1780,"column":2},"end":{"line":1780,"column":2}}]},"115":{"line":1780,"type":"binary-expr","locations":[{"start":{"line":1780,"column":6},"end":{"line":1780,"column":20}},{"start":{"line":1780,"column":24},"end":{"line":1780,"column":43}}]},"116":{"line":1838,"type":"binary-expr","locations":[{"start":{"line":1838,"column":13},"end":{"line":1838,"column":17}},{"start":{"line":1838,"column":21},"end":{"line":1838,"column":30}}]},"117":{"line":1844,"type":"if","locations":[{"start":{"line":1844,"column":4},"end":{"line":1844,"column":4}},{"start":{"line":1844,"column":4},"end":{"line":1844,"column":4}}]},"118":{"line":1850,"type":"if","locations":[{"start":{"line":1850,"column":2},"end":{"line":1850,"column":2}},{"start":{"line":1850,"column":2},"end":{"line":1850,"column":2}}]},"119":{"line":1869,"type":"if","locations":[{"start":{"line":1869,"column":2},"end":{"line":1869,"column":2}},{"start":{"line":1869,"column":2},"end":{"line":1869,"column":2}}]},"120":{"line":1874,"type":"if","locations":[{"start":{"line":1874,"column":4},"end":{"line":1874,"column":4}},{"start":{"line":1874,"column":4},"end":{"line":1874,"column":4}}]},"121":{"line":1892,"type":"if","locations":[{"start":{"line":1892,"column":2},"end":{"line":1892,"column":2}},{"start":{"line":1892,"column":2},"end":{"line":1892,"column":2}}]},"122":{"line":1897,"type":"if","locations":[{"start":{"line":1897,"column":4},"end":{"line":1897,"column":4}},{"start":{"line":1897,"column":4},"end":{"line":1897,"column":4}}]},"123":{"line":1915,"type":"if","locations":[{"start":{"line":1915,"column":2},"end":{"line":1915,"column":2}},{"start":{"line":1915,"column":2},"end":{"line":1915,"column":2}}]},"124":{"line":1935,"type":"if","locations":[{"start":{"line":1935,"column":2},"end":{"line":1935,"column":2}},{"start":{"line":1935,"column":2},"end":{"line":1935,"column":2}}]},"125":{"line":1939,"type":"if","locations":[{"start":{"line":1939,"column":2},"end":{"line":1939,"column":2}},{"start":{"line":1939,"column":2},"end":{"line":1939,"column":2}}]},"126":{"line":1958,"type":"if","locations":[{"start":{"line":1958,"column":2},"end":{"line":1958,"column":2}},{"start":{"line":1958,"column":2},"end":{"line":1958,"column":2}}]},"127":{"line":1974,"type":"if","locations":[{"start":{"line":1974,"column":2},"end":{"line":1974,"column":2}},{"start":{"line":1974,"column":2},"end":{"line":1974,"column":2}}]},"128":{"line":1977,"type":"if","locations":[{"start":{"line":1977,"column":2},"end":{"line":1977,"column":2}},{"start":{"line":1977,"column":2},"end":{"line":1977,"column":2}}]},"129":{"line":1979,"type":"if","locations":[{"start":{"line":1979,"column":2},"end":{"line":1979,"column":2}},{"start":{"line":1979,"column":2},"end":{"line":1979,"column":2}}]},"130":{"line":1994,"type":"if","locations":[{"start":{"line":1994,"column":2},"end":{"line":1994,"column":2}},{"start":{"line":1994,"column":2},"end":{"line":1994,"column":2}}]},"131":{"line":1994,"type":"binary-expr","locations":[{"start":{"line":1994,"column":6},"end":{"line":1994,"column":19}},{"start":{"line":1994,"column":23},"end":{"line":1994,"column":34}}]},"132":{"line":1995,"type":"binary-expr","locations":[{"start":{"line":1995,"column":13},"end":{"line":1995,"column":17}},{"start":{"line":1995,"column":21},"end":{"line":1995,"column":23}}]},"133":{"line":1997,"type":"if","locations":[{"start":{"line":1997,"column":2},"end":{"line":1997,"column":2}},{"start":{"line":1997,"column":2},"end":{"line":1997,"column":2}}]},"134":{"line":1999,"type":"if","locations":[{"start":{"line":1999,"column":4},"end":{"line":1999,"column":4}},{"start":{"line":1999,"column":4},"end":{"line":1999,"column":4}}]},"135":{"line":2002,"type":"if","locations":[{"start":{"line":2002,"column":2},"end":{"line":2002,"column":2}},{"start":{"line":2002,"column":2},"end":{"line":2002,"column":2}}]},"136":{"line":2005,"type":"if","locations":[{"start":{"line":2005,"column":4},"end":{"line":2005,"column":4}},{"start":{"line":2005,"column":4},"end":{"line":2005,"column":4}}]},"137":{"line":2006,"type":"if","locations":[{"start":{"line":2006,"column":4},"end":{"line":2006,"column":4}},{"start":{"line":2006,"column":4},"end":{"line":2006,"column":4}}]},"138":{"line":2102,"type":"binary-expr","locations":[{"start":{"line":2102,"column":15},"end":{"line":2102,"column":21}},{"start":{"line":2102,"column":25},"end":{"line":2102,"column":27}}]},"139":{"line":2104,"type":"if","locations":[{"start":{"line":2104,"column":2},"end":{"line":2104,"column":2}},{"start":{"line":2104,"column":2},"end":{"line":2104,"column":2}}]},"140":{"line":2104,"type":"binary-expr","locations":[{"start":{"line":2104,"column":6},"end":{"line":2104,"column":25}},{"start":{"line":2104,"column":29},"end":{"line":2104,"column":43}}]},"141":{"line":2147,"type":"if","locations":[{"start":{"line":2147,"column":2},"end":{"line":2147,"column":2}},{"start":{"line":2147,"column":2},"end":{"line":2147,"column":2}}]},"142":{"line":2148,"type":"binary-expr","locations":[{"start":{"line":2148,"column":18},"end":{"line":2148,"column":32}},{"start":{"line":2148,"column":36},"end":{"line":2148,"column":47}}]},"143":{"line":2151,"type":"if","locations":[{"start":{"line":2151,"column":2},"end":{"line":2151,"column":2}},{"start":{"line":2151,"column":2},"end":{"line":2151,"column":2}}]},"144":{"line":2152,"type":"binary-expr","locations":[{"start":{"line":2152,"column":20},"end":{"line":2152,"column":36}},{"start":{"line":2152,"column":40},"end":{"line":2152,"column":53}}]},"145":{"line":2155,"type":"if","locations":[{"start":{"line":2155,"column":2},"end":{"line":2155,"column":2}},{"start":{"line":2155,"column":2},"end":{"line":2155,"column":2}}]},"146":{"line":2157,"type":"if","locations":[{"start":{"line":2157,"column":6},"end":{"line":2157,"column":6}},{"start":{"line":2157,"column":6},"end":{"line":2157,"column":6}}]},"147":{"line":2160,"type":"if","locations":[{"start":{"line":2160,"column":8},"end":{"line":2160,"column":8}},{"start":{"line":2160,"column":8},"end":{"line":2160,"column":8}}]},"148":{"line":2165,"type":"cond-expr","locations":[{"start":{"line":2165,"column":68},"end":{"line":2165,"column":86}},{"start":{"line":2165,"column":89},"end":{"line":2165,"column":90}}]},"149":{"line":2165,"type":"binary-expr","locations":[{"start":{"line":2165,"column":18},"end":{"line":2165,"column":36}},{"start":{"line":2165,"column":40},"end":{"line":2165,"column":64}}]},"150":{"line":2166,"type":"binary-expr","locations":[{"start":{"line":2166,"column":16},"end":{"line":2166,"column":33}},{"start":{"line":2166,"column":37},"end":{"line":2166,"column":48}}]},"151":{"line":2260,"type":"if","locations":[{"start":{"line":2260,"column":4},"end":{"line":2260,"column":4}},{"start":{"line":2260,"column":4},"end":{"line":2260,"column":4}}]},"152":{"line":2325,"type":"if","locations":[{"start":{"line":2325,"column":4},"end":{"line":2325,"column":4}},{"start":{"line":2325,"column":4},"end":{"line":2325,"column":4}}]},"153":{"line":2327,"type":"if","locations":[{"start":{"line":2327,"column":4},"end":{"line":2327,"column":4}},{"start":{"line":2327,"column":4},"end":{"line":2327,"column":4}}]},"154":{"line":2328,"type":"if","locations":[{"start":{"line":2328,"column":4},"end":{"line":2328,"column":4}},{"start":{"line":2328,"column":4},"end":{"line":2328,"column":4}}]},"155":{"line":2335,"type":"if","locations":[{"start":{"line":2335,"column":2},"end":{"line":2335,"column":2}},{"start":{"line":2335,"column":2},"end":{"line":2335,"column":2}}]},"156":{"line":2359,"type":"if","locations":[{"start":{"line":2359,"column":4},"end":{"line":2359,"column":4}},{"start":{"line":2359,"column":4},"end":{"line":2359,"column":4}}]},"157":{"line":2360,"type":"if","locations":[{"start":{"line":2360,"column":4},"end":{"line":2360,"column":4}},{"start":{"line":2360,"column":4},"end":{"line":2360,"column":4}}]},"158":{"line":2367,"type":"if","locations":[{"start":{"line":2367,"column":2},"end":{"line":2367,"column":2}},{"start":{"line":2367,"column":2},"end":{"line":2367,"column":2}}]},"159":{"line":2368,"type":"if","locations":[{"start":{"line":2368,"column":2},"end":{"line":2368,"column":2}},{"start":{"line":2368,"column":2},"end":{"line":2368,"column":2}}]},"160":{"line":2386,"type":"if","locations":[{"start":{"line":2386,"column":4},"end":{"line":2386,"column":4}},{"start":{"line":2386,"column":4},"end":{"line":2386,"column":4}}]},"161":{"line":2386,"type":"binary-expr","locations":[{"start":{"line":2386,"column":8},"end":{"line":2386,"column":21}},{"start":{"line":2386,"column":25},"end":{"line":2386,"column":38}}]},"162":{"line":2388,"type":"if","locations":[{"start":{"line":2388,"column":4},"end":{"line":2388,"column":4}},{"start":{"line":2388,"column":4},"end":{"line":2388,"column":4}}]},"163":{"line":2394,"type":"if","locations":[{"start":{"line":2394,"column":4},"end":{"line":2394,"column":4}},{"start":{"line":2394,"column":4},"end":{"line":2394,"column":4}}]},"164":{"line":2399,"type":"if","locations":[{"start":{"line":2399,"column":4},"end":{"line":2399,"column":4}},{"start":{"line":2399,"column":4},"end":{"line":2399,"column":4}}]},"165":{"line":2434,"type":"if","locations":[{"start":{"line":2434,"column":2},"end":{"line":2434,"column":2}},{"start":{"line":2434,"column":2},"end":{"line":2434,"column":2}}]},"166":{"line":2463,"type":"if","locations":[{"start":{"line":2463,"column":4},"end":{"line":2463,"column":4}},{"start":{"line":2463,"column":4},"end":{"line":2463,"column":4}}]},"167":{"line":2463,"type":"binary-expr","locations":[{"start":{"line":2463,"column":8},"end":{"line":2463,"column":36}},{"start":{"line":2463,"column":40},"end":{"line":2463,"column":50}}]},"168":{"line":2466,"type":"if","locations":[{"start":{"line":2466,"column":11},"end":{"line":2466,"column":11}},{"start":{"line":2466,"column":11},"end":{"line":2466,"column":11}}]}},"code":["/**"," * elasticlunr - http://weixsong.github.io"," * Lightweight full-text search engine in Javascript for browser search and offline search. - 0.9.5"," *"," * Copyright (C) 2016 Oliver Nightingale"," * Copyright (C) 2016 Wei Song"," * MIT Licensed"," * @license"," */","","(function(){","","/*!"," * elasticlunr.js"," * Copyright (C) 2016 Oliver Nightingale"," * Copyright (C) 2016 Wei Song"," */","","/**"," * Convenience function for instantiating a new elasticlunr index and configuring it"," * with the default pipeline functions and the passed config function."," *"," * When using this convenience function a new index will be created with the"," * following functions already in the pipeline:"," * "," * 1. elasticlunr.trimmer - trim non-word character"," * 2. elasticlunr.StopWordFilter - filters out any stop words before they enter the"," * index"," * 3. elasticlunr.stemmer - stems the tokens before entering the index."," *"," *"," * Example:"," *"," *     var idx = elasticlunr(function () {"," *       this.addField('id');"," *       this.addField('title');"," *       this.addField('body');"," *       "," *       //this.setRef('id'); // default ref is 'id'"," *"," *       this.pipeline.add(function () {"," *         // some custom pipeline function"," *       });"," *     });"," * "," *    idx.addDoc({"," *      id: 1, "," *      title: 'Oracle released database 12g',"," *      body: 'Yestaday, Oracle has released their latest database, named 12g, more robust. this product will increase Oracle profit.'"," *    });"," * "," *    idx.addDoc({"," *      id: 2, "," *      title: 'Oracle released annual profit report',"," *      body: 'Yestaday, Oracle has released their annual profit report of 2015, total profit is 12.5 Billion.'"," *    });"," * "," *    # simple search"," *    idx.search('oracle database');"," * "," *    # search with query-time boosting"," *    idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});"," *"," * @param {Function} config A function that will be called with the new instance"," * of the elasticlunr.Index as both its context and first parameter. It can be used to"," * customize the instance of new elasticlunr.Index."," * @namespace"," * @module"," * @return {elasticlunr.Index}"," *"," */","var elasticlunr = function (config) {","  var idx = new elasticlunr.Index;","","  idx.pipeline.add(","    elasticlunr.trimmer,","    elasticlunr.stopWordFilter,","    elasticlunr.stemmer","  );","","  if (config) config.call(idx, idx);","","  return idx;","};","","elasticlunr.version = \"0.9.5\";","","// only used this to make elasticlunr.js compatible with lunr-languages","// this is a trick to define a global alias of elasticlunr","lunr = elasticlunr;","","/*!"," * elasticlunr.utils"," * Copyright (C) 2016 Oliver Nightingale"," * Copyright (C) 2016 Wei Song"," */","","/**"," * A namespace containing utils for the rest of the elasticlunr library"," */","elasticlunr.utils = {};","","/**"," * Print a warning message to the console."," *"," * @param {String} message The message to be printed."," * @memberOf Utils"," */","elasticlunr.utils.warn = (function (global) {","  return function (message) {","    if (global.console && console.warn) {","      console.warn(message);","    }","  };","})(this);","","/**"," * Convert an object to string."," *"," * In the case of `null` and `undefined` the function returns"," * an empty string, in all other cases the result of calling"," * `toString` on the passed object is returned."," *"," * @param {object} obj The object to convert to a string."," * @return {String} string representation of the passed object."," * @memberOf Utils"," */","elasticlunr.utils.toString = function (obj) {","  if (obj === void 0 || obj === null) {","    return \"\";","  }","","  return obj.toString();","};","/*!"," * elasticlunr.EventEmitter"," * Copyright (C) 2016 Oliver Nightingale"," * Copyright (C) 2016 Wei Song"," */","","/**"," * elasticlunr.EventEmitter is an event emitter for elasticlunr."," * It manages adding and removing event handlers and triggering events and their handlers."," *"," * Each event could has multiple corresponding functions,"," * these functions will be called as the sequence that they are added into the event."," * "," * @constructor"," */","elasticlunr.EventEmitter = function () {","  this.events = {};","};","","/**"," * Binds a handler function to a specific event(s)."," *"," * Can bind a single function to many different events in one call."," *"," * @param {String} [eventName] The name(s) of events to bind this function to."," * @param {Function} fn The function to call when an event is fired."," * @memberOf EventEmitter"," */","elasticlunr.EventEmitter.prototype.addListener = function () {","  var args = Array.prototype.slice.call(arguments),","      fn = args.pop(),","      names = args;","","  if (typeof fn !== \"function\") throw new TypeError (\"last argument must be a function\");","","  names.forEach(function (name) {","    if (!this.hasHandler(name)) this.events[name] = [];","    this.events[name].push(fn);","  }, this);","};","","/**"," * Removes a handler function from a specific event."," *"," * @param {String} eventName The name of the event to remove this function from."," * @param {Function} fn The function to remove from an event."," * @memberOf EventEmitter"," */","elasticlunr.EventEmitter.prototype.removeListener = function (name, fn) {","  if (!this.hasHandler(name)) return;","","  var fnIndex = this.events[name].indexOf(fn);","  if (fnIndex === -1) return;","","  this.events[name].splice(fnIndex, 1);","","  if (this.events[name].length == 0) delete this.events[name];","};","","/**"," * Call all functions that bounded to the given event."," *"," * Additional data can be passed to the event handler as arguments to `emit`"," * after the event name."," *"," * @param {String} eventName The name of the event to emit."," * @memberOf EventEmitter"," */","elasticlunr.EventEmitter.prototype.emit = function (name) {","  if (!this.hasHandler(name)) return;","","  var args = Array.prototype.slice.call(arguments, 1);","","  this.events[name].forEach(function (fn) {","    fn.apply(undefined, args);","  }, this);","};","","/**"," * Checks whether a handler has ever been stored against an event."," *"," * @param {String} eventName The name of the event to check."," * @private"," * @memberOf EventEmitter"," */","elasticlunr.EventEmitter.prototype.hasHandler = function (name) {","  return name in this.events;","};","/*!"," * elasticlunr.tokenizer"," * Copyright (C) 2016 Oliver Nightingale"," * Copyright (C) 2016 Wei Song"," */","","/**"," * A function for splitting a string into tokens."," * Currently English is supported as default."," * Uses `elasticlunr.tokenizer.seperator` to split strings, you could change"," * the value of this property to set how you want strings are split into tokens."," * IMPORTANT: use elasticlunr.tokenizer.seperator carefully, if you are not familiar with"," * text process, then you'd better not change it."," *"," * @module"," * @param {String} str The string that you want to tokenize."," * @see elasticlunr.tokenizer.seperator"," * @return {Array}"," */","elasticlunr.tokenizer = function (str) {","  if (!arguments.length || str === null || str === undefined) return [];","  if (Array.isArray(str)) {","    var arr = str.filter(function(token) {","      if (token === null || token === undefined) {","        return false;","      }","","      return true;","    });","","    arr = arr.map(function (t) {","      return elasticlunr.utils.toString(t).toLowerCase();","    });","","    var out = [];","    arr.forEach(function(item) {","      var tokens = item.split(elasticlunr.tokenizer.seperator);","      out = out.concat(tokens);","    }, this);","","    return out;","  }","","  return str.toString().trim().toLowerCase().split(elasticlunr.tokenizer.seperator);","};","","/**"," * Default string seperator."," */","elasticlunr.tokenizer.defaultSeperator = /[\\s\\-]+/;","","/**"," * The sperator used to split a string into tokens. Override this property to change the behaviour of"," * `elasticlunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens."," *"," * @static"," * @see elasticlunr.tokenizer"," */","elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;","","/**"," * Set up customized string seperator"," *"," * @param {Object} sep The customized seperator that you want to use to tokenize a string."," */","elasticlunr.tokenizer.setSeperator = function(sep) {","    if (sep !== null && sep !== undefined && typeof(sep) === 'object') {","        elasticlunr.tokenizer.seperator = sep;","    }","}","","/**"," * Reset string seperator"," *"," */","elasticlunr.tokenizer.resetSeperator = function() {","    elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;","}","","/**"," * Get string seperator"," *"," */","elasticlunr.tokenizer.getSeperator = function() {","    return elasticlunr.tokenizer.seperator;","}","/*!"," * elasticlunr.Pipeline"," * Copyright (C) 2016 Oliver Nightingale"," * Copyright (C) 2016 Wei Song"," */","","/**"," * elasticlunr.Pipelines maintain an ordered list of functions to be applied to "," * both documents tokens and query tokens."," *"," * An instance of elasticlunr.Index will contain a pipeline"," * with a trimmer, a stop word filter, an English stemmer. Extra"," * functions can be added before or after either of these functions or these"," * default functions can be removed."," *"," * When run the pipeline, it will call each function in turn."," *"," * The output of the functions in the pipeline will be passed to the next function"," * in the pipeline. To exclude a token from entering the index the function"," * should return undefined, the rest of the pipeline will not be called with"," * this token."," *"," * For serialisation of pipelines to work, all functions used in an instance of"," * a pipeline should be registered with elasticlunr.Pipeline. Registered functions can"," * then be loaded. If trying to load a serialised pipeline that uses functions"," * that are not registered an error will be thrown."," *"," * If not planning on serialising the pipeline then registering pipeline functions"," * is not necessary."," *"," * @constructor"," */","elasticlunr.Pipeline = function () {","  this._queue = [];","};","","elasticlunr.Pipeline.registeredFunctions = {};","","/**"," * Register a function in the pipeline."," *"," * Functions that are used in the pipeline should be registered if the pipeline"," * needs to be serialised, or a serialised pipeline needs to be loaded."," *"," * Registering a function does not add it to a pipeline, functions must still be"," * added to instances of the pipeline for them to be used when running a pipeline."," *"," * @param {Function} fn The function to register."," * @param {String} label The label to register this function with"," * @memberOf Pipeline"," */","elasticlunr.Pipeline.registerFunction = function (fn, label) {","  if (label in elasticlunr.Pipeline.registeredFunctions) {","    elasticlunr.utils.warn('Overwriting existing registered function: ' + label);","  }","","  fn.label = label;","  elasticlunr.Pipeline.registeredFunctions[label] = fn;","};","","/**"," * Get a registered function in the pipeline."," *"," * @param {String} label The label of registered function."," * @return {Function}"," * @memberOf Pipeline"," */","elasticlunr.Pipeline.getRegisteredFunction = function (label) {","  if ((label in elasticlunr.Pipeline.registeredFunctions) !== true) {","    return null;","  }","","  return elasticlunr.Pipeline.registeredFunctions[label];","};","","/**"," * Warns if the function is not registered as a Pipeline function."," *"," * @param {Function} fn The function to check for."," * @private"," * @memberOf Pipeline"," */","elasticlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {","  var isRegistered = fn.label && (fn.label in this.registeredFunctions);","","  if (!isRegistered) {","    elasticlunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn);","  }","};","","/**"," * Loads a previously serialised pipeline."," *"," * All functions to be loaded must already be registered with elasticlunr.Pipeline."," * If any function from the serialised data has not been registered then an"," * error will be thrown."," *"," * @param {Object} serialised The serialised pipeline to load."," * @return {elasticlunr.Pipeline}"," * @memberOf Pipeline"," */","elasticlunr.Pipeline.load = function (serialised) {","  var pipeline = new elasticlunr.Pipeline;","","  serialised.forEach(function (fnName) {","    var fn = elasticlunr.Pipeline.getRegisteredFunction(fnName);","","    if (fn) {","      pipeline.add(fn);","    } else {","      throw new Error('Cannot load un-registered function: ' + fnName);","    }","  });","","  return pipeline;","};","","/**"," * Adds new functions to the end of the pipeline."," *"," * Logs a warning if the function has not been registered."," *"," * @param {Function} functions Any number of functions to add to the pipeline."," * @memberOf Pipeline"," */","elasticlunr.Pipeline.prototype.add = function () {","  var fns = Array.prototype.slice.call(arguments);","","  fns.forEach(function (fn) {","    elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);","    this._queue.push(fn);","  }, this);","};","","/**"," * Adds a single function after a function that already exists in the"," * pipeline."," *"," * Logs a warning if the function has not been registered."," * If existingFn is not found, throw an Exception."," *"," * @param {Function} existingFn A function that already exists in the pipeline."," * @param {Function} newFn The new function to add to the pipeline."," * @memberOf Pipeline"," */","elasticlunr.Pipeline.prototype.after = function (existingFn, newFn) {","  elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);","","  var pos = this._queue.indexOf(existingFn);","  if (pos === -1) {","    throw new Error('Cannot find existingFn');","  }","","  this._queue.splice(pos + 1, 0, newFn);","};","","/**"," * Adds a single function before a function that already exists in the"," * pipeline."," *"," * Logs a warning if the function has not been registered."," * If existingFn is not found, throw an Exception."," *"," * @param {Function} existingFn A function that already exists in the pipeline."," * @param {Function} newFn The new function to add to the pipeline."," * @memberOf Pipeline"," */","elasticlunr.Pipeline.prototype.before = function (existingFn, newFn) {","  elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);","","  var pos = this._queue.indexOf(existingFn);","  if (pos === -1) {","    throw new Error('Cannot find existingFn');","  }","","  this._queue.splice(pos, 0, newFn);","};","","/**"," * Removes a function from the pipeline."," *"," * @param {Function} fn The function to remove from the pipeline."," * @memberOf Pipeline"," */","elasticlunr.Pipeline.prototype.remove = function (fn) {","  var pos = this._queue.indexOf(fn);","  if (pos === -1) {","    return;","  }","","  this._queue.splice(pos, 1);","};","","/**"," * Runs the current list of functions that registered in the pipeline against the"," * input tokens."," *"," * @param {Array} tokens The tokens to run through the pipeline."," * @return {Array}"," * @memberOf Pipeline"," */","elasticlunr.Pipeline.prototype.run = function (tokens) {","  var out = [],","      tokenLength = tokens.length,","      pipelineLength = this._queue.length;","","  for (var i = 0; i < tokenLength; i++) {","    var token = tokens[i];","","    for (var j = 0; j < pipelineLength; j++) {","      token = this._queue[j](token, i, tokens);","      if (token === void 0 || token === null) break;","    };","","    if (token !== void 0 && token !== null) out.push(token);","  };","","  return out;","};","","/**"," * Resets the pipeline by removing any existing processors."," *"," * @memberOf Pipeline"," */","elasticlunr.Pipeline.prototype.reset = function () {","  this._queue = [];","};",""," /**","  * Get the pipeline if user want to check the pipeline.","  *","  * @memberOf Pipeline","  */"," elasticlunr.Pipeline.prototype.get = function () {","   return this._queue;"," };","","/**"," * Returns a representation of the pipeline ready for serialisation."," * Only serialize pipeline function's name. Not storing function, so when"," * loading the archived JSON index file, corresponding pipeline function is "," * added by registered function of elasticlunr.Pipeline.registeredFunctions"," *"," * Logs a warning if the function has not been registered."," *"," * @return {Array}"," * @memberOf Pipeline"," */","elasticlunr.Pipeline.prototype.toJSON = function () {","  return this._queue.map(function (fn) {","    elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);","    return fn.label;","  });","};","/*!"," * elasticlunr.Index"," * Copyright (C) 2016 Oliver Nightingale"," * Copyright (C) 2016 Wei Song"," */","","/**"," * elasticlunr.Index is object that manages a search index.  It contains the indexes"," * and stores all the tokens and document lookups.  It also provides the main"," * user facing API for the library."," *"," * @constructor"," */","elasticlunr.Index = function () {","  this._fields = [];","  this._ref = 'id';","  this.pipeline = new elasticlunr.Pipeline;","  this.documentStore = new elasticlunr.DocumentStore;","  this.index = {};","  this.eventEmitter = new elasticlunr.EventEmitter;","  this._idfCache = {};","","  this.on('add', 'remove', 'update', (function () {","    this._idfCache = {};","  }).bind(this));","};","","/**"," * Bind a handler to events being emitted by the index."," *"," * The handler can be bound to many events at the same time."," *"," * @param {String} [eventName] The name(s) of events to bind the function to."," * @param {Function} fn The serialised set to load."," * @memberOf Index"," */","elasticlunr.Index.prototype.on = function () {","  var args = Array.prototype.slice.call(arguments);","  return this.eventEmitter.addListener.apply(this.eventEmitter, args);","};","","/**"," * Removes a handler from an event being emitted by the index."," *"," * @param {String} eventName The name of events to remove the function from."," * @param {Function} fn The serialised set to load."," * @memberOf Index"," */","elasticlunr.Index.prototype.off = function (name, fn) {","  return this.eventEmitter.removeListener(name, fn);","};","","/**"," * Loads a previously serialised index."," *"," * Issues a warning if the index being imported was serialised"," * by a different version of elasticlunr."," *"," * @param {Object} serialisedData The serialised set to load."," * @return {elasticlunr.Index}"," * @memberOf Index"," */","elasticlunr.Index.load = function (serialisedData) {","  if (serialisedData.version !== elasticlunr.version) {","    elasticlunr.utils.warn('version mismatch: current '","                    + elasticlunr.version + ' importing ' + serialisedData.version);","  }","","  var idx = new this;","","  idx._fields = serialisedData.fields;","  idx._ref = serialisedData.ref;","  idx.documentStore = elasticlunr.DocumentStore.load(serialisedData.documentStore);","  idx.pipeline = elasticlunr.Pipeline.load(serialisedData.pipeline);","  idx.index = {};","  for (var field in serialisedData.index) {","    idx.index[field] = elasticlunr.InvertedIndex.load(serialisedData.index[field]);","  }","","  return idx;","};","","/**"," * Adds a field to the list of fields that will be searchable within documents in the index."," *"," * Remember that inner index is build based on field, which means each field has one inverted index."," *"," * Fields should be added before any documents are added to the index, fields"," * that are added after documents are added to the index will only apply to new"," * documents added to the index."," *"," * @param {String} fieldName The name of the field within the document that should be indexed"," * @return {elasticlunr.Index}"," * @memberOf Index"," */","elasticlunr.Index.prototype.addField = function (fieldName) {","  this._fields.push(fieldName);","  this.index[fieldName] = new elasticlunr.InvertedIndex;","  return this;","};","","/**"," * Sets the property used to uniquely identify documents added to the index,"," * by default this property is 'id'."," *"," * This should only be changed before adding documents to the index, changing"," * the ref property without resetting the index can lead to unexpected results."," *"," * @param {String} refName The property to use to uniquely identify the"," * documents in the index."," * @param {Boolean} emitEvent Whether to emit add events, defaults to true"," * @return {elasticlunr.Index}"," * @memberOf Index"," */","elasticlunr.Index.prototype.setRef = function (refName) {","  this._ref = refName;","  return this;","};","","/**"," *"," * Set if the JSON format original documents are save into elasticlunr.DocumentStore"," *"," * Defaultly save all the original JSON documents."," *"," * @param {Boolean} save Whether to save the original JSON documents."," * @return {elasticlunr.Index}"," * @memberOf Index"," */","elasticlunr.Index.prototype.saveDocument = function (save) {","  this.documentStore = new elasticlunr.DocumentStore(save);","  return this;","};","","/**"," * Add a JSON format document to the index."," *"," * This is the way new documents enter the index, this function will run the"," * fields from the document through the index's pipeline and then add it to"," * the index, it will then show up in search results."," *"," * An 'add' event is emitted with the document that has been added and the index"," * the document has been added to. This event can be silenced by passing false"," * as the second argument to add."," *"," * @param {Object} doc The JSON format document to add to the index."," * @param {Boolean} emitEvent Whether or not to emit events, default true."," * @memberOf Index"," */","elasticlunr.Index.prototype.addDoc = function (doc, emitEvent) {","  if (!doc) return;","  var emitEvent = emitEvent === undefined ? true : emitEvent;","","  var docRef = doc[this._ref];","","  this.documentStore.addDoc(docRef, doc);","  this._fields.forEach(function (field) {","    var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));","    this.documentStore.addFieldLength(docRef, field, fieldTokens.length);","","    var tokenCount = {};","    fieldTokens.forEach(function (token) {","      if (token in tokenCount) tokenCount[token] += 1;","      else tokenCount[token] = 1;","    }, this);","","    for (var token in tokenCount) {","      var termFrequency = tokenCount[token];","      termFrequency = Math.sqrt(termFrequency);","      this.index[field].addToken(token, { ref: docRef, tf: termFrequency });","    }","  }, this);","","  if (emitEvent) this.eventEmitter.emit('add', doc, this);","};","","/**"," * Removes a document from the index by doc ref."," *"," * To make sure documents no longer show up in search results they can be"," * removed from the index using this method."," *"," * A 'remove' event is emitted with the document that has been removed and the index"," * the document has been removed from. This event can be silenced by passing false"," * as the second argument to remove."," *"," * If user setting DocumentStore not storing the documents, then remove doc by docRef is not allowed."," *"," * @param {String|Integer} docRef The document ref to remove from the index."," * @param {Boolean} emitEvent Whether to emit remove events, defaults to true"," * @memberOf Index"," */","elasticlunr.Index.prototype.removeDocByRef = function (docRef, emitEvent) {","  if (!docRef) return;","  if (this.documentStore.isDocStored() === false) {","    return;","  }","","  if (!this.documentStore.hasDoc(docRef)) return;","  var doc = this.documentStore.getDoc(docRef);","  this.removeDoc(doc, false);","};","","/**"," * Removes a document from the index."," * This remove operation could work even the original doc is not store in the DocumentStore."," *"," * To make sure documents no longer show up in search results they can be"," * removed from the index using this method."," *"," * A 'remove' event is emitted with the document that has been removed and the index"," * the document has been removed from. This event can be silenced by passing false"," * as the second argument to remove."," *"," *"," * @param {Object} doc The document ref to remove from the index."," * @param {Boolean} emitEvent Whether to emit remove events, defaults to true"," * @memberOf Index"," */","elasticlunr.Index.prototype.removeDoc = function (doc, emitEvent) {","  if (!doc) return;","","  var emitEvent = emitEvent === undefined ? true : emitEvent;","","  var docRef = doc[this._ref];","  if (!this.documentStore.hasDoc(docRef)) return;","","  this.documentStore.removeDoc(docRef);","","  this._fields.forEach(function (field) {","    var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));","    fieldTokens.forEach(function (token) {","      this.index[field].removeToken(token, docRef);","    }, this);","  }, this);","","  if (emitEvent) this.eventEmitter.emit('remove', doc, this);","};","","/**"," * Updates a document in the index."," *"," * When a document contained within the index gets updated, fields changed,"," * added or removed, to make sure it correctly matched against search queries,"," * it should be updated in the index."," *"," * This method is just a wrapper around `remove` and `add`"," *"," * An 'update' event is emitted with the document that has been updated and the index."," * This event can be silenced by passing false as the second argument to update. Only"," * an update event will be fired, the 'add' and 'remove' events of the underlying calls"," * are silenced."," *"," * @param {Object} doc The document to update in the index."," * @param {Boolean} emitEvent Whether to emit update events, defaults to true"," * @see Index.prototype.remove"," * @see Index.prototype.add"," * @memberOf Index"," */","elasticlunr.Index.prototype.updateDoc = function (doc, emitEvent) {","  var emitEvent = emitEvent === undefined ? true : emitEvent;","","  this.removeDocByRef(doc[this._ref], false);","  this.addDoc(doc, false);","","  if (emitEvent) this.eventEmitter.emit('update', doc, this);","};","","/**"," * Calculates the inverse document frequency for a token within the index of a field."," *"," * @param {String} token The token to calculate the idf of."," * @param {String} field The field to compute idf."," * @see Index.prototype.idf"," * @private"," * @memberOf Index"," */","elasticlunr.Index.prototype.idf = function (term, field) {","  var cacheKey = \"@\" + field + '/' + term;","  if (Object.prototype.hasOwnProperty.call(this._idfCache, cacheKey)) return this._idfCache[cacheKey];","","  var df = this.index[field].getDocFreq(term);","  var idf = 1 + Math.log(this.documentStore.length / (df + 1));","  this._idfCache[cacheKey] = idf;","","  return idf;","};","","/**"," * get fields of current index instance"," *"," * @return {Array}"," */","elasticlunr.Index.prototype.getFields = function () {","  return this._fields.slice();","};","","/**"," * Searches the index using the passed query."," * Queries should be a string, multiple words are allowed."," *"," * If config is null, will search all fields defaultly, and lead to OR based query."," * If config is specified, will search specified with query time boosting."," *"," * All query tokens are passed through the same pipeline that document tokens"," * are passed through, so any language processing involved will be run on every"," * query term."," *"," * Each query term is expanded, so that the term 'he' might be expanded to"," * 'hello' and 'help' if those terms were already included in the index."," *"," * Matching documents are returned as an array of objects, each object contains"," * the matching document ref, as set for this index, and the similarity score"," * for this document against the query."," *"," * @param {String} query The query to search the index with."," * @param {JSON} userConfig The user query config, JSON format."," * @return {Object}"," * @see Index.prototype.idf"," * @see Index.prototype.documentVector"," * @memberOf Index"," */","elasticlunr.Index.prototype.search = function (query, userConfig) {","  if (!query) return [];","","  var configStr = null;","  if (userConfig != null) {","    configStr = JSON.stringify(userConfig);","  }","","  var config = new elasticlunr.Configuration(configStr, this.getFields()).get();","","  var queryTokens = this.pipeline.run(elasticlunr.tokenizer(query));","","  var queryResults = {};","","  for (var field in config) {","    var fieldSearchResults = this.fieldSearch(queryTokens, field, config);","    var fieldBoost = config[field].boost;","","    for (var docRef in fieldSearchResults) {","      fieldSearchResults[docRef] = fieldSearchResults[docRef] * fieldBoost;","    }","","    for (var docRef in fieldSearchResults) {","      if (docRef in queryResults) {","        queryResults[docRef] += fieldSearchResults[docRef];","      } else {","        queryResults[docRef] = fieldSearchResults[docRef];","      }","    }","  }","","  var results = [];","  for (var docRef in queryResults) {","    results.push({ref: docRef, score: queryResults[docRef]});","  }","","  results.sort(function (a, b) { return b.score - a.score; });","  return results;","};","","/**"," * search queryTokens in specified field."," *"," * @param {Array} queryTokens The query tokens to query in this field."," * @param {String} field Field to query in."," * @param {elasticlunr.Configuration} config The user query config, JSON format."," * @return {Object}"," */","elasticlunr.Index.prototype.fieldSearch = function (queryTokens, fieldName, config) {","  var booleanType = config[fieldName].bool;","  var expand = config[fieldName].expand;","  var boost = config[fieldName].boost;","  var scores = null;","  var docTokens = {};","","  // Do nothing if the boost is 0","  if (boost === 0) {","    return;","  }","","  queryTokens.forEach(function (token) {","    var tokens = [token];","    if (expand == true) {","      tokens = this.index[fieldName].expandToken(token);","    }","    // Consider every query token in turn. If expanded, each query token","    // corresponds to a set of tokens, which is all tokens in the ","    // index matching the pattern queryToken* .","    // For the set of tokens corresponding to a query token, find and score","    // all matching documents. Store those scores in queryTokenScores, ","    // keyed by docRef.","    // Then, depending on the value of booleanType, combine the scores","    // for this query token with previous scores.  If booleanType is OR,","    // then merge the scores by summing into the accumulated total, adding","    // new document scores are required (effectively a union operator). ","    // If booleanType is AND, accumulate scores only if the document ","    // has previously been scored by another query token (an intersection","    // operation0. ","    // Furthermore, since when booleanType is AND, additional ","    // query tokens can't add new documents to the result set, use the","    // current document set to limit the processing of each new query ","    // token for efficiency (i.e., incremental intersection).","    ","    var queryTokenScores = {};","    tokens.forEach(function (key) {","      var docs = this.index[fieldName].getDocs(key);","      var idf = this.idf(key, fieldName);","      ","      if (scores && booleanType == 'AND') {","          // special case, we can rule out documents that have been","          // already been filtered out because they weren't scored","          // by previous query token passes.","          var filteredDocs = {};","          for (var docRef in scores) {","              if (docRef in docs) {","                  filteredDocs[docRef] = docs[docRef];","              }","          }","          docs = filteredDocs;","      }","      // only record appeared token for retrieved documents for the","      // original token, not for expaned token.","      // beause for doing coordNorm for a retrieved document, coordNorm only care how many","      // query token appear in that document.","      // so expanded token should not be added into docTokens, if added, this will pollute the","      // coordNorm","      if (key == token) {","        this.fieldSearchStats(docTokens, key, docs);","      }","","      for (var docRef in docs) {","        var tf = this.index[fieldName].getTermFrequency(key, docRef);","        var fieldLength = this.documentStore.getFieldLength(docRef, fieldName);","        var fieldLengthNorm = 1;","        if (fieldLength != 0) {","          fieldLengthNorm = 1 / Math.sqrt(fieldLength);","        }","","        var penality = 1;","        if (key != token) {","          // currently I'm not sure if this penality is enough,","          // need to do verification","          penality = (1 - (key.length - token.length) / key.length) * 0.15;","        }","","        var score = tf * idf * fieldLengthNorm * penality;","","        if (docRef in queryTokenScores) {","          queryTokenScores[docRef] += score;","        } else {","          queryTokenScores[docRef] = score;","        }","      }","    }, this);","    ","    scores = this.mergeScores(scores, queryTokenScores, booleanType);","  }, this);","","  scores = this.coordNorm(scores, docTokens, queryTokens.length);","  return scores;","};","","/**"," * Merge the scores from one set of tokens into an accumulated score table."," * Exact operation depends on the op parameter. If op is 'AND', then only the"," * intersection of the two score lists is retained. Otherwise, the union of"," * the two score lists is returned. For internal use only."," *"," * @param {Object} bool accumulated scores. Should be null on first call."," * @param {String} scores new scores to merge into accumScores."," * @param {Object} op merge operation (should be 'AND' or 'OR')."," *"," */","","elasticlunr.Index.prototype.mergeScores = function (accumScores, scores, op) {","    if (!accumScores) {","        return scores; ","    }","    if (op == 'AND') {","        var intersection = {};","        for (var docRef in scores) {","            if (docRef in accumScores) {","                intersection[docRef] = accumScores[docRef] + scores[docRef];","            }","        }","        return intersection;","    } else {","        for (var docRef in scores) {","            if (docRef in accumScores) {","                accumScores[docRef] += scores[docRef];","            } else {","                accumScores[docRef] = scores[docRef];","            }","        }","        return accumScores;","    }","};","","","/**"," * Record the occuring query token of retrieved doc specified by doc field."," * Only for inner user."," *"," * @param {Object} docTokens a data structure stores which token appears in the retrieved doc."," * @param {String} token query token"," * @param {Object} docs the retrieved documents of the query token"," *"," */","elasticlunr.Index.prototype.fieldSearchStats = function (docTokens, token, docs) {","  for (var doc in docs) {","    if (doc in docTokens) {","      docTokens[doc].push(token);","    } else {","      docTokens[doc] = [token];","    }","  }","};","","/**"," * coord norm the score of a doc."," * if a doc contain more query tokens, then the score will larger than the doc"," * contains less query tokens."," *"," * only for inner use."," *"," * @param {Object} results first results"," * @param {Object} docs field search results of a token"," * @param {Integer} n query token number"," * @return {Object}"," */","elasticlunr.Index.prototype.coordNorm = function (scores, docTokens, n) {","  for (var doc in scores) {","    if (!(doc in docTokens)) continue;","    var tokens = docTokens[doc].length;","    scores[doc] = scores[doc] * tokens / n;","  }","","  return scores;","};","","/**"," * Returns a representation of the index ready for serialisation."," *"," * @return {Object}"," * @memberOf Index"," */","elasticlunr.Index.prototype.toJSON = function () {","  var indexJson = {};","  this._fields.forEach(function (field) {","    indexJson[field] = this.index[field].toJSON();","  }, this);","","  return {","    version: elasticlunr.version,","    fields: this._fields,","    ref: this._ref,","    documentStore: this.documentStore.toJSON(),","    index: indexJson,","    pipeline: this.pipeline.toJSON()","  };","};","","/**"," * Applies a plugin to the current index."," *"," * A plugin is a function that is called with the index as its context."," * Plugins can be used to customise or extend the behaviour the index"," * in some way. A plugin is just a function, that encapsulated the custom"," * behaviour that should be applied to the index."," *"," * The plugin function will be called with the index as its argument, additional"," * arguments can also be passed when calling use. The function will be called"," * with the index as its context."," *"," * Example:"," *"," *     var myPlugin = function (idx, arg1, arg2) {"," *       // `this` is the index to be extended"," *       // apply any extensions etc here."," *     }"," *"," *     var idx = elasticlunr(function () {"," *       this.use(myPlugin, 'arg1', 'arg2')"," *     })"," *"," * @param {Function} plugin The plugin to apply."," * @memberOf Index"," */","elasticlunr.Index.prototype.use = function (plugin) {","  var args = Array.prototype.slice.call(arguments, 1);","  args.unshift(this);","  plugin.apply(this, args);","};","/*!"," * elasticlunr.DocumentStore"," * Copyright (C) 2016 Wei Song"," */","","/**"," * elasticlunr.DocumentStore is a simple key-value document store used for storing sets of tokens for"," * documents stored in index."," *"," * elasticlunr.DocumentStore store original JSON format documents that you could build search snippet by this original JSON document."," *"," * user could choose whether original JSON format document should be store, if no configuration then document will be stored defaultly."," * If user care more about the index size, user could select not store JSON documents, then this will has some defects, such as user"," * could not use JSON document to generate snippets of search results."," *"," * @param {Boolean} save If the original JSON document should be stored."," * @constructor"," * @module"," */","elasticlunr.DocumentStore = function (save) {","  if (save === null || save === undefined) {","    this._save = true;","  } else {","    this._save = save;","  }","","  this.docs = {};","  this.docInfo = {};","  this.length = 0;","};","","/**"," * Loads a previously serialised document store"," *"," * @param {Object} serialisedData The serialised document store to load."," * @return {elasticlunr.DocumentStore}"," */","elasticlunr.DocumentStore.load = function (serialisedData) {","  var store = new this;","","  store.length = serialisedData.length;","  store.docs = serialisedData.docs;","  store.docInfo = serialisedData.docInfo;","  store._save = serialisedData.save;","","  return store;","};","","/**"," * check if current instance store the original doc"," *"," * @return {Boolean}"," */","elasticlunr.DocumentStore.prototype.isDocStored = function () {","  return this._save;","};","","/**"," * Stores the given doc in the document store against the given id."," * If docRef already exist, then update doc."," *"," * Document is store by original JSON format, then you could use original document to generate search snippets."," *"," * @param {Integer|String} docRef The key used to store the JSON format doc."," * @param {Object} doc The JSON format doc."," */","elasticlunr.DocumentStore.prototype.addDoc = function (docRef, doc) {","  if (!this.hasDoc(docRef)) this.length++;","","  if (this._save === true) {","    this.docs[docRef] = clone(doc);","  } else {","    this.docs[docRef] = null;","  }","};","","/**"," * Retrieves the JSON doc from the document store for a given key."," *"," * If docRef not found, return null."," * If user set not storing the documents, return null."," *"," * @param {Integer|String} docRef The key to lookup and retrieve from the document store."," * @return {Object}"," * @memberOf DocumentStore"," */","elasticlunr.DocumentStore.prototype.getDoc = function (docRef) {","  if (this.hasDoc(docRef) === false) return null;","  return this.docs[docRef];","};","","/**"," * Checks whether the document store contains a key (docRef)."," *"," * @param {Integer|String} docRef The id to look up in the document store."," * @return {Boolean}"," * @memberOf DocumentStore"," */","elasticlunr.DocumentStore.prototype.hasDoc = function (docRef) {","  return docRef in this.docs;","};","","/**"," * Removes the value for a key in the document store."," *"," * @param {Integer|String} docRef The id to remove from the document store."," * @memberOf DocumentStore"," */","elasticlunr.DocumentStore.prototype.removeDoc = function (docRef) {","  if (!this.hasDoc(docRef)) return;","","  delete this.docs[docRef];","  delete this.docInfo[docRef];","  this.length--;","};","","/**"," * Add field length of a document's field tokens from pipeline results."," * The field length of a document is used to do field length normalization even without the original JSON document stored."," *"," * @param {Integer|String} docRef document's id or reference"," * @param {String} fieldName field name"," * @param {Integer} length field length"," */","elasticlunr.DocumentStore.prototype.addFieldLength = function (docRef, fieldName, length) {","  if (docRef === null || docRef === undefined) return;","  if (this.hasDoc(docRef) == false) return;","","  if (!this.docInfo[docRef]) this.docInfo[docRef] = {};","  this.docInfo[docRef][fieldName] = length;","};","","/**"," * Update field length of a document's field tokens from pipeline results."," * The field length of a document is used to do field length normalization even without the original JSON document stored."," *"," * @param {Integer|String} docRef document's id or reference"," * @param {String} fieldName field name"," * @param {Integer} length field length"," */","elasticlunr.DocumentStore.prototype.updateFieldLength = function (docRef, fieldName, length) {","  if (docRef === null || docRef === undefined) return;","  if (this.hasDoc(docRef) == false) return;","","  this.addFieldLength(docRef, fieldName, length);","};","","/**"," * get field length of a document by docRef"," *"," * @param {Integer|String} docRef document id or reference"," * @param {String} fieldName field name"," * @return {Integer} field length"," */","elasticlunr.DocumentStore.prototype.getFieldLength = function (docRef, fieldName) {","  if (docRef === null || docRef === undefined) return 0;","","  if (!(docRef in this.docs)) return 0;","  if (!(fieldName in this.docInfo[docRef])) return 0;","  return this.docInfo[docRef][fieldName];","};","","/**"," * Returns a JSON representation of the document store used for serialisation."," *"," * @return {Object} JSON format"," * @memberOf DocumentStore"," */","elasticlunr.DocumentStore.prototype.toJSON = function () {","  return {","    docs: this.docs,","    docInfo: this.docInfo,","    length: this.length,","    save: this._save","  };","};","","/**"," * Cloning object"," *"," * @param {Object} object in JSON format"," * @return {Object} copied object"," */","function clone(obj) {","  if (null === obj || \"object\" !== typeof obj) return obj;","","  var copy = obj.constructor();","","  for (var attr in obj) {","    if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];","  }","","  return copy;","}","/*!"," * elasticlunr.stemmer"," * Copyright (C) 2016 Oliver Nightingale"," * Copyright (C) 2016 Wei Song"," * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt"," */","","/**"," * elasticlunr.stemmer is an english language stemmer, this is a JavaScript"," * implementation of the PorterStemmer taken from http://tartarus.org/~martin"," *"," * @module"," * @param {String} str The string to stem"," * @return {String}"," * @see elasticlunr.Pipeline"," */","elasticlunr.stemmer = (function(){","  var step2list = {","      \"ational\" : \"ate\",","      \"tional\" : \"tion\",","      \"enci\" : \"ence\",","      \"anci\" : \"ance\",","      \"izer\" : \"ize\",","      \"bli\" : \"ble\",","      \"alli\" : \"al\",","      \"entli\" : \"ent\",","      \"eli\" : \"e\",","      \"ousli\" : \"ous\",","      \"ization\" : \"ize\",","      \"ation\" : \"ate\",","      \"ator\" : \"ate\",","      \"alism\" : \"al\",","      \"iveness\" : \"ive\",","      \"fulness\" : \"ful\",","      \"ousness\" : \"ous\",","      \"aliti\" : \"al\",","      \"iviti\" : \"ive\",","      \"biliti\" : \"ble\",","      \"logi\" : \"log\"","    },","","    step3list = {","      \"icate\" : \"ic\",","      \"ative\" : \"\",","      \"alize\" : \"al\",","      \"iciti\" : \"ic\",","      \"ical\" : \"ic\",","      \"ful\" : \"\",","      \"ness\" : \"\"","    },","","    c = \"[^aeiou]\",          // consonant","    v = \"[aeiouy]\",          // vowel","    C = c + \"[^aeiouy]*\",    // consonant sequence","    V = v + \"[aeiou]*\",      // vowel sequence","","    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0","    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1","    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1","    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem","","  var re_mgr0 = new RegExp(mgr0);","  var re_mgr1 = new RegExp(mgr1);","  var re_meq1 = new RegExp(meq1);","  var re_s_v = new RegExp(s_v);","","  var re_1a = /^(.+?)(ss|i)es$/;","  var re2_1a = /^(.+?)([^s])s$/;","  var re_1b = /^(.+?)eed$/;","  var re2_1b = /^(.+?)(ed|ing)$/;","  var re_1b_2 = /.$/;","  var re2_1b_2 = /(at|bl|iz)$/;","  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");","  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");","","  var re_1c = /^(.+?[^aeiou])y$/;","  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;","","  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;","","  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;","  var re2_4 = /^(.+?)(s|t)(ion)$/;","","  var re_5 = /^(.+?)e$/;","  var re_5_1 = /ll$/;","  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");","","  var porterStemmer = function porterStemmer(w) {","    var   stem,","      suffix,","      firstch,","      re,","      re2,","      re3,","      re4;","","    if (w.length < 3) { return w; }","","    firstch = w.substr(0,1);","    if (firstch == \"y\") {","      w = firstch.toUpperCase() + w.substr(1);","    }","","    // Step 1a","    re = re_1a","    re2 = re2_1a;","","    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }","    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }","","    // Step 1b","    re = re_1b;","    re2 = re2_1b;","    if (re.test(w)) {","      var fp = re.exec(w);","      re = re_mgr0;","      if (re.test(fp[1])) {","        re = re_1b_2;","        w = w.replace(re,\"\");","      }","    } else if (re2.test(w)) {","      var fp = re2.exec(w);","      stem = fp[1];","      re2 = re_s_v;","      if (re2.test(stem)) {","        w = stem;","        re2 = re2_1b_2;","        re3 = re3_1b_2;","        re4 = re4_1b_2;","        if (re2.test(w)) {  w = w + \"e\"; }","        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }","        else if (re4.test(w)) { w = w + \"e\"; }","      }","    }","","    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)","    re = re_1c;","    if (re.test(w)) {","      var fp = re.exec(w);","      stem = fp[1];","      w = stem + \"i\";","    }","","    // Step 2","    re = re_2;","    if (re.test(w)) {","      var fp = re.exec(w);","      stem = fp[1];","      suffix = fp[2];","      re = re_mgr0;","      if (re.test(stem)) {","        w = stem + step2list[suffix];","      }","    }","","    // Step 3","    re = re_3;","    if (re.test(w)) {","      var fp = re.exec(w);","      stem = fp[1];","      suffix = fp[2];","      re = re_mgr0;","      if (re.test(stem)) {","        w = stem + step3list[suffix];","      }","    }","","    // Step 4","    re = re_4;","    re2 = re2_4;","    if (re.test(w)) {","      var fp = re.exec(w);","      stem = fp[1];","      re = re_mgr1;","      if (re.test(stem)) {","        w = stem;","      }","    } else if (re2.test(w)) {","      var fp = re2.exec(w);","      stem = fp[1] + fp[2];","      re2 = re_mgr1;","      if (re2.test(stem)) {","        w = stem;","      }","    }","","    // Step 5","    re = re_5;","    if (re.test(w)) {","      var fp = re.exec(w);","      stem = fp[1];","      re = re_mgr1;","      re2 = re_meq1;","      re3 = re3_5;","      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {","        w = stem;","      }","    }","","    re = re_5_1;","    re2 = re_mgr1;","    if (re.test(w) && re2.test(w)) {","      re = re_1b_2;","      w = w.replace(re,\"\");","    }","","    // and turn initial Y back to y","","    if (firstch == \"y\") {","      w = firstch.toLowerCase() + w.substr(1);","    }","","    return w;","  };","","  return porterStemmer;","})();","","elasticlunr.Pipeline.registerFunction(elasticlunr.stemmer, 'stemmer');","/*!"," * elasticlunr.stopWordFilter"," * Copyright (C) 2016 Oliver Nightingale"," * Copyright (C) 2016 Wei Song"," */","","/**"," * elasticlunr.stopWordFilter is an English language stop words filter, any words"," * contained in the stop word list will not be passed through the filter."," *"," * This is intended to be used in the Pipeline. If the token does not pass the"," * filter then undefined will be returned."," * Currently this StopwordFilter using dictionary to do O(1) time complexity stop word filtering."," *"," * @module"," * @param {String} token The token to pass through the filter"," * @return {String}"," * @see elasticlunr.Pipeline"," */","elasticlunr.stopWordFilter = function (token) {","  if (token && elasticlunr.stopWordFilter.stopWords[token] !== true) {","    return token;","  }","};","","/**"," * Remove predefined stop words"," * if user want to use customized stop words, user could use this function to delete"," * all predefined stopwords."," *"," * @return {null}"," */","elasticlunr.clearStopWords = function () {","  elasticlunr.stopWordFilter.stopWords = {};","};","","/**"," * Add customized stop words"," * user could use this function to add customized stop words"," * "," * @params {Array} words customized stop words"," * @return {null}"," */","elasticlunr.addStopWords = function (words) {","  if (words == null || Array.isArray(words) === false) return;","","  words.forEach(function (word) {","    elasticlunr.stopWordFilter.stopWords[word] = true;","  }, this);","};","","/**"," * Reset to default stop words"," * user could use this function to restore default stop words"," *"," * @return {null}"," */","elasticlunr.resetStopWords = function () {","  elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;","};","","elasticlunr.defaultStopWords = {","  \"\": true,","  \"a\": true,","  \"able\": true,","  \"about\": true,","  \"across\": true,","  \"after\": true,","  \"all\": true,","  \"almost\": true,","  \"also\": true,","  \"am\": true,","  \"among\": true,","  \"an\": true,","  \"and\": true,","  \"any\": true,","  \"are\": true,","  \"as\": true,","  \"at\": true,","  \"be\": true,","  \"because\": true,","  \"been\": true,","  \"but\": true,","  \"by\": true,","  \"can\": true,","  \"cannot\": true,","  \"could\": true,","  \"dear\": true,","  \"did\": true,","  \"do\": true,","  \"does\": true,","  \"either\": true,","  \"else\": true,","  \"ever\": true,","  \"every\": true,","  \"for\": true,","  \"from\": true,","  \"get\": true,","  \"got\": true,","  \"had\": true,","  \"has\": true,","  \"have\": true,","  \"he\": true,","  \"her\": true,","  \"hers\": true,","  \"him\": true,","  \"his\": true,","  \"how\": true,","  \"however\": true,","  \"i\": true,","  \"if\": true,","  \"in\": true,","  \"into\": true,","  \"is\": true,","  \"it\": true,","  \"its\": true,","  \"just\": true,","  \"least\": true,","  \"let\": true,","  \"like\": true,","  \"likely\": true,","  \"may\": true,","  \"me\": true,","  \"might\": true,","  \"most\": true,","  \"must\": true,","  \"my\": true,","  \"neither\": true,","  \"no\": true,","  \"nor\": true,","  \"not\": true,","  \"of\": true,","  \"off\": true,","  \"often\": true,","  \"on\": true,","  \"only\": true,","  \"or\": true,","  \"other\": true,","  \"our\": true,","  \"own\": true,","  \"rather\": true,","  \"said\": true,","  \"say\": true,","  \"says\": true,","  \"she\": true,","  \"should\": true,","  \"since\": true,","  \"so\": true,","  \"some\": true,","  \"than\": true,","  \"that\": true,","  \"the\": true,","  \"their\": true,","  \"them\": true,","  \"then\": true,","  \"there\": true,","  \"these\": true,","  \"they\": true,","  \"this\": true,","  \"tis\": true,","  \"to\": true,","  \"too\": true,","  \"twas\": true,","  \"us\": true,","  \"wants\": true,","  \"was\": true,","  \"we\": true,","  \"were\": true,","  \"what\": true,","  \"when\": true,","  \"where\": true,","  \"which\": true,","  \"while\": true,","  \"who\": true,","  \"whom\": true,","  \"why\": true,","  \"will\": true,","  \"with\": true,","  \"would\": true,","  \"yet\": true,","  \"you\": true,","  \"your\": true","};","","elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;","","elasticlunr.Pipeline.registerFunction(elasticlunr.stopWordFilter, 'stopWordFilter');","/*!"," * elasticlunr.trimmer"," * Copyright (C) 2016 Oliver Nightingale"," * Copyright (C) 2016 Wei Song"," */","","/**"," * elasticlunr.trimmer is a pipeline function for trimming non word"," * characters from the begining and end of tokens before they"," * enter the index."," *"," * This implementation may not work correctly for non latin"," * characters and should either be removed or adapted for use"," * with languages with non-latin characters."," *"," * @module"," * @param {String} token The token to pass through the filter"," * @return {String}"," * @see elasticlunr.Pipeline"," */","elasticlunr.trimmer = function (token) {","  if (token === null || token === undefined) {","    throw new Error('token should not be undefined');","  }","","  return token","    .replace(/^\\W+/, '')","    .replace(/\\W+$/, '');","};","","elasticlunr.Pipeline.registerFunction(elasticlunr.trimmer, 'trimmer');","/*!"," * elasticlunr.InvertedIndex"," * Copyright (C) 2016 Wei Song"," * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt"," */","","/**"," * elasticlunr.InvertedIndex is used for efficiently storing and"," * lookup of documents that contain a given token."," *"," * @constructor"," */","elasticlunr.InvertedIndex = function () {","  this.root = { docs: {}, df: 0 };","};","","/**"," * Loads a previously serialised inverted index."," *"," * @param {Object} serialisedData The serialised inverted index to load."," * @return {elasticlunr.InvertedIndex}"," */","elasticlunr.InvertedIndex.load = function (serialisedData) {","  var idx = new this;","  idx.root = serialisedData.root;","","  return idx;","};","","/**"," * Adds a {token: tokenInfo} pair to the inverted index."," * If the token already exist, then update the tokenInfo."," *"," * tokenInfo format: { ref: 1, tf: 2}"," * tokenInfor should contains the document's ref and the tf(token frequency) of that token in"," * the document."," *"," * By default this function starts at the root of the current inverted index, however"," * it can start at any node of the inverted index if required."," *"," * @param {String} token "," * @param {Object} tokenInfo format: { ref: 1, tf: 2}"," * @param {Object} root An optional node at which to start looking for the"," * correct place to enter the doc, by default the root of this elasticlunr.InvertedIndex"," * is used."," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.addToken = function (token, tokenInfo, root) {","  var root = root || this.root,","      idx = 0;","","  while (idx <= token.length - 1) {","    var key = token[idx];","","    if (!(key in root)) root[key] = {docs: {}, df: 0};","    idx += 1;","    root = root[key];","  }","","  var docRef = tokenInfo.ref;","  if (!root.docs[docRef]) {","    // if this doc not exist, then add this doc","    root.docs[docRef] = {tf: tokenInfo.tf};","    root.df += 1;","  } else {","    // if this doc already exist, then update tokenInfo","    root.docs[docRef] = {tf: tokenInfo.tf};","  }","};","","/**"," * Checks whether a token is in this elasticlunr.InvertedIndex."," * "," *"," * @param {String} token The token to be checked"," * @return {Boolean}"," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.hasToken = function (token) {","  if (!token) return false;","","  var node = this.root;","","  for (var i = 0; i < token.length; i++) {","    if (!node[token[i]]) return false;","    node = node[token[i]];","  }","","  return true;","};","","/**"," * Retrieve a node from the inverted index for a given token."," * If token not found in this InvertedIndex, return null."," * "," *"," * @param {String} token The token to get the node for."," * @return {Object}"," * @see InvertedIndex.prototype.get"," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.getNode = function (token) {","  if (!token) return null;","","  var node = this.root;","","  for (var i = 0; i < token.length; i++) {","    if (!node[token[i]]) return null;","    node = node[token[i]];","  }","","  return node;","};","","/**"," * Retrieve the documents of a given token."," * If token not found, return {}."," *"," *"," * @param {String} token The token to get the documents for."," * @return {Object}"," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.getDocs = function (token) {","  var node = this.getNode(token);","  if (node == null) {","    return {};","  }","","  return node.docs;","};","","/**"," * Retrieve term frequency of given token in given docRef."," * If token or docRef not found, return 0."," *"," *"," * @param {String} token The token to get the documents for."," * @param {String|Integer} docRef"," * @return {Integer}"," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.getTermFrequency = function (token, docRef) {","  var node = this.getNode(token);","","  if (node == null) {","    return 0;","  }","","  if (!(docRef in node.docs)) {","    return 0;","  }","","  return node.docs[docRef].tf;","};","","/**"," * Retrieve the document frequency of given token."," * If token not found, return 0."," *"," *"," * @param {String} token The token to get the documents for."," * @return {Object}"," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.getDocFreq = function (token) {","  var node = this.getNode(token);","","  if (node == null) {","    return 0;","  }","","  return node.df;","};","","/**"," * Remove the document identified by document's ref from the token in the inverted index."," *"," *"," * @param {String} token Remove the document from which token."," * @param {String} ref The ref of the document to remove from given token."," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.removeToken = function (token, ref) {","  if (!token) return;","  var node = this.getNode(token);","","  if (node == null) return;","","  if (ref in node.docs) {","    delete node.docs[ref];","    node.df -= 1;","  }","};","","/**"," * Find all the possible suffixes of given token using tokens currently in the inverted index."," * If token not found, return empty Array."," *"," * @param {String} token The token to expand."," * @return {Array}"," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.expandToken = function (token, memo, root) {","  if (token == null || token == '') return [];","  var memo = memo || [];","","  if (root == void 0) {","    root = this.getNode(token);","    if (root == null) return memo;","  }","","  if (root.df > 0) memo.push(token);","","  for (var key in root) {","    if (key === 'docs') continue;","    if (key === 'df') continue;","    this.expandToken(token + key, memo, root[key]);","  }","","  return memo;","};","","/**"," * Returns a representation of the inverted index ready for serialisation."," *"," * @return {Object}"," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.toJSON = function () {","  return {","    root: this.root","  };","};","","/*!"," * elasticlunr.Configuration"," * Copyright (C) 2016 Wei Song"," */"," "," /** ","  * elasticlunr.Configuration is used to analyze the user search configuration.","  * ","  * By elasticlunr.Configuration user could set query-time boosting, boolean model in each field.","  * ","  * Currently configuration supports:","  * 1. query-time boosting, user could set how to boost each field.","  * 2. boolean model chosing, user could choose which boolean model to use for each field.","  * 3. token expandation, user could set token expand to True to improve Recall. Default is False.","  * ","  * Query time boosting must be configured by field category, \"boolean\" model could be configured ","  * by both field category or globally as the following example. Field configuration for \"boolean\"","  * will overwrite global configuration.","  * Token expand could be configured both by field category or golbally. Local field configuration will","  * overwrite global configuration.","  * ","  * configuration example:","  * {","  *   fields:{ ","  *     title: {boost: 2},","  *     body: {boost: 1}","  *   },","  *   bool: \"OR\"","  * }","  * ","  * \"bool\" field configuation overwrite global configuation example:","  * {","  *   fields:{ ","  *     title: {boost: 2, bool: \"AND\"},","  *     body: {boost: 1}","  *   },","  *   bool: \"OR\"","  * }","  * ","  * \"expand\" example:","  * {","  *   fields:{ ","  *     title: {boost: 2, bool: \"AND\"},","  *     body: {boost: 1}","  *   },","  *   bool: \"OR\",","  *   expand: true","  * }","  * ","  * \"expand\" example for field category:","  * {","  *   fields:{ ","  *     title: {boost: 2, bool: \"AND\", expand: true},","  *     body: {boost: 1}","  *   },","  *   bool: \"OR\"","  * }","  * ","  * setting the boost to 0 ignores the field (this will only search the title):","  * {","  *   fields:{","  *     title: {boost: 1},","  *     body: {boost: 0}","  *   }","  * }","  *","  * then, user could search with configuration to do query-time boosting.","  * idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});","  * ","  * ","  * @constructor","  * ","  * @param {String} config user configuration","  * @param {Array} fields fields of index instance","  * @module","  */","elasticlunr.Configuration = function (config, fields) {","  var config = config || '';","","  if (fields == undefined || fields == null) {","    throw new Error('fields should not be null');","  }","","  this.config = {};","","  var userConfig;","  try {","    userConfig = JSON.parse(config);","    this.buildUserConfig(userConfig, fields);","  } catch (error) {","    elasticlunr.utils.warn('user configuration parse failed, will use default configuration');","    this.buildDefaultConfig(fields);","  }","};","","/**"," * Build default search configuration."," * "," * @param {Array} fields fields of index instance"," */","elasticlunr.Configuration.prototype.buildDefaultConfig = function (fields) {","  this.reset();","  fields.forEach(function (field) {","    this.config[field] = {","      boost: 1,","      bool: \"OR\",","      expand: false","    };","  }, this);","};","","/**"," * Build user configuration."," * "," * @param {JSON} config User JSON configuratoin"," * @param {Array} fields fields of index instance"," */","elasticlunr.Configuration.prototype.buildUserConfig = function (config, fields) {","  var global_bool = \"OR\";","  var global_expand = false;","","  this.reset();","  if ('bool' in config) {","    global_bool = config['bool'] || global_bool;","  }","","  if ('expand' in config) {","    global_expand = config['expand'] || global_expand;","  }","","  if ('fields' in config) {","    for (var field in config['fields']) {","      if (fields.indexOf(field) > -1) {","        var field_config = config['fields'][field];","        var field_expand = global_expand;","        if (field_config.expand != undefined) {","          field_expand = field_config.expand;","        }","","        this.config[field] = {","          boost: (field_config.boost || field_config.boost === 0) ? field_config.boost : 1,","          bool: field_config.bool || global_bool,","          expand: field_expand","        };","      } else {","        elasticlunr.utils.warn('field name in user configuration not found in index instance fields');","      }","    }","  } else {","    this.addAllFields2UserConfig(global_bool, global_expand, fields);","  }","};","","/**"," * Add all fields to user search configuration."," * "," * @param {String} bool Boolean model"," * @param {String} expand Expand model"," * @param {Array} fields fields of index instance"," */","elasticlunr.Configuration.prototype.addAllFields2UserConfig = function (bool, expand, fields) {","  fields.forEach(function (field) {","    this.config[field] = {","      boost: 1,","      bool: bool,","      expand: expand","    };","  }, this);","};","","/**"," * get current user configuration"," */","elasticlunr.Configuration.prototype.get = function () {","  return this.config;","};","","/**"," * reset user search configuration."," */","elasticlunr.Configuration.prototype.reset = function () {","  this.config = {};","};","/**"," * sorted_set.js is added only to make elasticlunr.js compatible with lunr-languages."," * if elasticlunr.js support different languages by default, this will make elasticlunr.js"," * much bigger that not good for browser usage."," *"," */","","","/*!"," * lunr.SortedSet"," * Copyright (C) 2016 Oliver Nightingale"," */","","/**"," * lunr.SortedSets are used to maintain an array of uniq values in a sorted"," * order."," *"," * @constructor"," */","lunr.SortedSet = function () {","  this.length = 0","  this.elements = []","}","","/**"," * Loads a previously serialised sorted set."," *"," * @param {Array} serialisedData The serialised set to load."," * @returns {lunr.SortedSet}"," * @memberOf SortedSet"," */","lunr.SortedSet.load = function (serialisedData) {","  var set = new this","","  set.elements = serialisedData","  set.length = serialisedData.length","","  return set","}","","/**"," * Inserts new items into the set in the correct position to maintain the"," * order."," *"," * @param {Object} The objects to add to this set."," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.add = function () {","  var i, element","","  for (i = 0; i < arguments.length; i++) {","    element = arguments[i]","    if (~this.indexOf(element)) continue","    this.elements.splice(this.locationFor(element), 0, element)","  }","","  this.length = this.elements.length","}","","/**"," * Converts this sorted set into an array."," *"," * @returns {Array}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.toArray = function () {","  return this.elements.slice()","}","","/**"," * Creates a new array with the results of calling a provided function on every"," * element in this sorted set."," *"," * Delegates to Array.prototype.map and has the same signature."," *"," * @param {Function} fn The function that is called on each element of the"," * set."," * @param {Object} ctx An optional object that can be used as the context"," * for the function fn."," * @returns {Array}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.map = function (fn, ctx) {","  return this.elements.map(fn, ctx)","}","","/**"," * Executes a provided function once per sorted set element."," *"," * Delegates to Array.prototype.forEach and has the same signature."," *"," * @param {Function} fn The function that is called on each element of the"," * set."," * @param {Object} ctx An optional object that can be used as the context"," * @memberOf SortedSet"," * for the function fn."," */","lunr.SortedSet.prototype.forEach = function (fn, ctx) {","  return this.elements.forEach(fn, ctx)","}","","/**"," * Returns the index at which a given element can be found in the"," * sorted set, or -1 if it is not present."," *"," * @param {Object} elem The object to locate in the sorted set."," * @returns {Number}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.indexOf = function (elem) {","  var start = 0,","      end = this.elements.length,","      sectionLength = end - start,","      pivot = start + Math.floor(sectionLength / 2),","      pivotElem = this.elements[pivot]","","  while (sectionLength > 1) {","    if (pivotElem === elem) return pivot","","    if (pivotElem < elem) start = pivot","    if (pivotElem > elem) end = pivot","","    sectionLength = end - start","    pivot = start + Math.floor(sectionLength / 2)","    pivotElem = this.elements[pivot]","  }","","  if (pivotElem === elem) return pivot","","  return -1","}","","/**"," * Returns the position within the sorted set that an element should be"," * inserted at to maintain the current order of the set."," *"," * This function assumes that the element to search for does not already exist"," * in the sorted set."," *"," * @param {Object} elem The elem to find the position for in the set"," * @returns {Number}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.locationFor = function (elem) {","  var start = 0,","      end = this.elements.length,","      sectionLength = end - start,","      pivot = start + Math.floor(sectionLength / 2),","      pivotElem = this.elements[pivot]","","  while (sectionLength > 1) {","    if (pivotElem < elem) start = pivot","    if (pivotElem > elem) end = pivot","","    sectionLength = end - start","    pivot = start + Math.floor(sectionLength / 2)","    pivotElem = this.elements[pivot]","  }","","  if (pivotElem > elem) return pivot","  if (pivotElem < elem) return pivot + 1","}","","/**"," * Creates a new lunr.SortedSet that contains the elements in the intersection"," * of this set and the passed set."," *"," * @param {lunr.SortedSet} otherSet The set to intersect with this set."," * @returns {lunr.SortedSet}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.intersect = function (otherSet) {","  var intersectSet = new lunr.SortedSet,","      i = 0, j = 0,","      a_len = this.length, b_len = otherSet.length,","      a = this.elements, b = otherSet.elements","","  while (true) {","    if (i > a_len - 1 || j > b_len - 1) break","","    if (a[i] === b[j]) {","      intersectSet.add(a[i])","      i++, j++","      continue","    }","","    if (a[i] < b[j]) {","      i++","      continue","    }","","    if (a[i] > b[j]) {","      j++","      continue","    }","  };","","  return intersectSet","}","","/**"," * Makes a copy of this set"," *"," * @returns {lunr.SortedSet}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.clone = function () {","  var clone = new lunr.SortedSet","","  clone.elements = this.toArray()","  clone.length = clone.elements.length","","  return clone","}","","/**"," * Creates a new lunr.SortedSet that contains the elements in the union"," * of this set and the passed set."," *"," * @param {lunr.SortedSet} otherSet The set to union with this set."," * @returns {lunr.SortedSet}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.union = function (otherSet) {","  var longSet, shortSet, unionSet","","  if (this.length >= otherSet.length) {","    longSet = this, shortSet = otherSet","  } else {","    longSet = otherSet, shortSet = this","  }","","  unionSet = longSet.clone()","","  for(var i = 0, shortSetElements = shortSet.toArray(); i < shortSetElements.length; i++){","    unionSet.add(shortSetElements[i])","  }","","  return unionSet","}","","/**"," * Returns a representation of the sorted set ready for serialisation."," *"," * @returns {Array}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.toJSON = function () {","  return this.toArray()","}","  /**","   * export the module via AMD, CommonJS or as a browser global","   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js","   */","  ;(function (root, factory) {","    if (typeof define === 'function' && define.amd) {","      // AMD. Register as an anonymous module.","      define(factory)","    } else if (typeof exports === 'object') {","      /**","       * Node. Does not work with strict CommonJS, but","       * only CommonJS-like enviroments that support module.exports,","       * like Node.","       */","      module.exports = factory()","    } else {","      // Browser globals (root is window)","      root.elasticlunr = factory()","    }","  }(this, function () {","    /**","     * Just return a value to define the module export.","     * This example returns an object, but the module","     * can return a function as the exported value.","     */","    return elasticlunr","  }))","})();",""],"l":{"11":1,"72":1,"73":0,"75":0,"81":0,"83":0,"86":1,"90":1,"101":1,"109":1,"110":1,"111":0,"112":0,"128":1,"129":0,"130":0,"133":0,"150":1,"151":0,"163":1,"164":0,"168":0,"170":0,"171":0,"172":0,"183":1,"184":0,"186":0,"187":0,"189":0,"191":0,"203":1,"204":0,"206":0,"208":0,"209":0,"220":1,"221":0,"242":1,"243":0,"244":0,"245":0,"246":0,"247":0,"250":0,"253":0,"254":0,"257":0,"258":0,"259":0,"260":0,"263":0,"266":0,"272":1,"281":1,"288":1,"289":0,"290":0,"298":1,"299":0,"306":1,"307":0,"341":1,"342":0,"345":1,"360":1,"361":3,"362":0,"365":3,"366":3,"376":1,"377":0,"378":0,"381":0,"391":1,"392":0,"394":0,"395":0,"410":1,"411":0,"413":0,"414":0,"416":0,"417":0,"419":0,"423":0,"434":1,"435":0,"437":0,"438":0,"439":0,"454":1,"455":0,"457":0,"458":0,"459":0,"462":0,"476":1,"477":0,"479":0,"480":0,"481":0,"484":0,"493":1,"494":0,"495":0,"496":0,"499":0,"510":1,"511":0,"515":0,"516":0,"518":0,"519":0,"520":0,"523":0,"526":0,"534":1,"535":0,"543":1,"544":0,"558":1,"559":0,"560":0,"561":0,"577":1,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"586":0,"587":0,"600":1,"601":0,"602":0,"612":1,"613":0,"626":1,"627":0,"628":0,"632":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"643":0,"659":1,"660":0,"661":0,"662":0,"678":1,"679":0,"680":0,"693":1,"694":0,"695":0,"713":1,"714":0,"715":0,"717":0,"719":0,"720":0,"721":0,"722":0,"724":0,"725":0,"726":0,"727":0,"730":0,"731":0,"732":0,"733":0,"737":0,"756":1,"757":0,"758":0,"759":0,"762":0,"763":0,"764":0,"783":1,"784":0,"786":0,"788":0,"789":0,"791":0,"793":0,"794":0,"795":0,"796":0,"800":0,"823":1,"824":0,"826":0,"827":0,"829":0,"841":1,"842":0,"843":0,"845":0,"846":0,"847":0,"849":0,"857":1,"858":0,"886":1,"887":0,"889":0,"890":0,"891":0,"894":0,"896":0,"898":0,"900":0,"901":0,"902":0,"904":0,"905":0,"908":0,"909":0,"910":0,"912":0,"917":0,"918":0,"919":0,"922":0,"923":0,"934":1,"935":0,"936":0,"937":0,"938":0,"939":0,"942":0,"943":0,"946":0,"947":0,"948":0,"949":0,"969":0,"970":0,"971":0,"972":0,"974":0,"978":0,"979":0,"980":0,"981":0,"984":0,"992":0,"993":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1004":0,"1005":0,"1008":0,"1011":0,"1013":0,"1014":0,"1016":0,"1021":0,"1024":0,"1025":0,"1040":1,"1041":0,"1042":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1051":0,"1053":0,"1054":0,"1055":0,"1057":0,"1060":0,"1074":1,"1075":0,"1076":0,"1077":0,"1079":0,"1096":1,"1097":0,"1098":0,"1099":0,"1100":0,"1103":0,"1112":1,"1113":0,"1114":0,"1115":0,"1118":0,"1154":1,"1155":0,"1156":0,"1157":0,"1178":1,"1179":0,"1180":0,"1182":0,"1185":0,"1186":0,"1187":0,"1196":1,"1197":0,"1199":0,"1200":0,"1201":0,"1202":0,"1204":0,"1212":1,"1213":0,"1225":1,"1226":0,"1228":0,"1229":0,"1231":0,"1245":1,"1246":0,"1247":0,"1257":1,"1258":0,"1267":1,"1268":0,"1270":0,"1271":0,"1272":0,"1283":1,"1284":0,"1285":0,"1287":0,"1288":0,"1299":1,"1300":0,"1301":0,"1303":0,"1313":1,"1314":0,"1316":0,"1317":0,"1318":0,"1327":1,"1328":0,"1342":1,"1343":0,"1345":0,"1347":0,"1348":0,"1351":0,"1369":1,"1370":1,"1414":1,"1415":1,"1416":1,"1417":1,"1419":1,"1420":1,"1421":1,"1422":1,"1423":1,"1424":1,"1425":1,"1426":1,"1428":1,"1429":1,"1431":1,"1433":1,"1434":1,"1436":1,"1437":1,"1438":1,"1440":1,"1441":0,"1449":0,"1451":0,"1452":0,"1453":0,"1457":0,"1458":0,"1460":0,"1461":0,"1464":0,"1465":0,"1466":0,"1467":0,"1468":0,"1469":0,"1470":0,"1471":0,"1473":0,"1474":0,"1475":0,"1476":0,"1477":0,"1478":0,"1479":0,"1480":0,"1481":0,"1482":0,"1483":0,"1484":0,"1489":0,"1490":0,"1491":0,"1492":0,"1493":0,"1497":0,"1498":0,"1499":0,"1500":0,"1501":0,"1502":0,"1503":0,"1504":0,"1509":0,"1510":0,"1511":0,"1512":0,"1513":0,"1514":0,"1515":0,"1516":0,"1521":0,"1522":0,"1523":0,"1524":0,"1525":0,"1526":0,"1527":0,"1528":0,"1530":0,"1531":0,"1532":0,"1533":0,"1534":0,"1535":0,"1540":0,"1541":0,"1542":0,"1543":0,"1544":0,"1545":0,"1546":0,"1547":0,"1548":0,"1552":0,"1553":0,"1554":0,"1555":0,"1556":0,"1561":0,"1562":0,"1565":0,"1568":1,"1571":1,"1591":1,"1592":0,"1593":0,"1604":1,"1605":0,"1615":1,"1616":0,"1618":0,"1619":0,"1629":1,"1630":0,"1633":1,"1756":1,"1758":1,"1779":1,"1780":0,"1781":0,"1784":0,"1789":1,"1802":1,"1803":0,"1812":1,"1813":0,"1814":0,"1816":0,"1837":1,"1838":0,"1841":0,"1842":0,"1844":0,"1845":0,"1846":0,"1849":0,"1850":0,"1852":0,"1853":0,"1856":0,"1868":1,"1869":0,"1871":0,"1873":0,"1874":0,"1875":0,"1878":0,"1891":1,"1892":0,"1894":0,"1896":0,"1897":0,"1898":0,"1901":0,"1913":1,"1914":0,"1915":0,"1916":0,"1919":0,"1932":1,"1933":0,"1935":0,"1936":0,"1939":0,"1940":0,"1943":0,"1955":1,"1956":0,"1958":0,"1959":0,"1962":0,"1973":1,"1974":0,"1975":0,"1977":0,"1979":0,"1980":0,"1981":0,"1993":1,"1994":0,"1995":0,"1997":0,"1998":0,"1999":0,"2002":0,"2004":0,"2005":0,"2006":0,"2007":0,"2010":0,"2019":1,"2020":0,"2101":1,"2102":0,"2104":0,"2105":0,"2108":0,"2110":0,"2111":0,"2112":0,"2113":0,"2115":0,"2116":0,"2125":1,"2126":0,"2127":0,"2128":0,"2142":1,"2143":0,"2144":0,"2146":0,"2147":0,"2148":0,"2151":0,"2152":0,"2155":0,"2156":0,"2157":0,"2158":0,"2159":0,"2160":0,"2161":0,"2164":0,"2170":0,"2174":0,"2185":1,"2186":0,"2187":0,"2198":1,"2199":0,"2205":1,"2206":0,"2227":1,"2228":0,"2229":0,"2239":1,"2240":0,"2242":0,"2243":0,"2245":0,"2255":1,"2256":0,"2258":0,"2259":0,"2260":0,"2261":0,"2264":0,"2273":1,"2274":0,"2290":1,"2291":0,"2305":1,"2306":0,"2317":1,"2318":0,"2324":0,"2325":0,"2327":0,"2328":0,"2330":0,"2331":0,"2332":0,"2335":0,"2337":0,"2351":1,"2352":0,"2358":0,"2359":0,"2360":0,"2362":0,"2363":0,"2364":0,"2367":0,"2368":0,"2379":1,"2380":0,"2385":0,"2386":0,"2388":0,"2389":0,"2390":0,"2391":0,"2394":0,"2395":0,"2396":0,"2399":0,"2400":0,"2401":0,"2405":0,"2414":1,"2415":0,"2417":0,"2418":0,"2420":0,"2431":1,"2432":0,"2434":0,"2435":0,"2437":0,"2440":0,"2442":0,"2443":0,"2446":0,"2455":1,"2456":0,"2462":1,"2463":1,"2465":0,"2466":1,"2472":1,"2475":0,"2483":1}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/server.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/server.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1},"b":{"1":[1,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":18},"end":{"line":15,"column":36}}},"2":{"name":"notFound","line":21,"loc":{"start":{"line":21,"column":2},"end":{"line":21,"column":22}}},"3":{"name":"error","line":26,"loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":22}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":18},"end":{"line":31,"column":34}}},"5":{"name":"(anonymous_5)","line":34,"loc":{"start":{"line":34,"column":18},"end":{"line":34,"column":37}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":7,"column":34}},"2":{"start":{"line":9,"column":0},"end":{"line":13,"column":1}},"3":{"start":{"line":15,"column":0},"end":{"line":42,"column":15}},"4":{"start":{"line":16,"column":2},"end":{"line":16,"column":67}},"5":{"start":{"line":18,"column":2},"end":{"line":19,"column":42}},"6":{"start":{"line":21,"column":2},"end":{"line":24,"column":3}},"7":{"start":{"line":22,"column":4},"end":{"line":22,"column":24}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":30}},"9":{"start":{"line":26,"column":2},"end":{"line":29,"column":3}},"10":{"start":{"line":27,"column":4},"end":{"line":27,"column":24}},"11":{"start":{"line":28,"column":4},"end":{"line":28,"column":31}},"12":{"start":{"line":31,"column":2},"end":{"line":41,"column":4}},"13":{"start":{"line":32,"column":4},"end":{"line":32,"column":34}},"14":{"start":{"line":32,"column":17},"end":{"line":32,"column":34}},"15":{"start":{"line":34,"column":4},"end":{"line":40,"column":6}},"16":{"start":{"line":35,"column":6},"end":{"line":35,"column":29}},"17":{"start":{"line":35,"column":15},"end":{"line":35,"column":29}},"18":{"start":{"line":36,"column":6},"end":{"line":36,"column":61}},"19":{"start":{"line":36,"column":30},"end":{"line":36,"column":61}},"20":{"start":{"line":37,"column":6},"end":{"line":37,"column":48}},"21":{"start":{"line":38,"column":6},"end":{"line":38,"column":98}},"22":{"start":{"line":39,"column":6},"end":{"line":39,"column":41}},"23":{"start":{"line":44,"column":0},"end":{"line":44,"column":49}}},"branchMap":{"1":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":11},"end":{"line":7,"column":26}},{"start":{"line":7,"column":30},"end":{"line":7,"column":34}}]},"2":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":4},"end":{"line":32,"column":4}},{"start":{"line":32,"column":4},"end":{"line":32,"column":4}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":6}},{"start":{"line":35,"column":6},"end":{"line":35,"column":6}}]},"4":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":6}},{"start":{"line":36,"column":6},"end":{"line":36,"column":6}}]},"5":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":36},"end":{"line":38,"column":67}},{"start":{"line":38,"column":71},"end":{"line":38,"column":97}}]}},"code":["var http = require('http'),","    url = require('url'),","    join = require('path').join,","    extname = require('path').extname,","    join = require('path').join,","    fs = require('fs'),","    port = process.argv[2] || 3000","","var mime = {","    'html': 'text/html',","    'css': 'text/css',","    'js': 'application/javascript',","}","","http.createServer(function(req, res){","  console.log('  \\033[90m%s \\033[36m%s\\033[m', req.method, req.url)","","  var pathname = url.parse(req.url).pathname,","      path = join(process.cwd(), pathname)","","  function notFound() {","    res.statusCode = 404","    res.end(\"404 Not Found\\n\")","  }","","  function error(err) {","    res.statusCode = 500","    res.end(err.message + \"\\n\")","  }","","  fs.exists(path, function(exists){","    if (!exists) return notFound()","","    fs.stat(path, function(err, stat){","      if (err) return error()","      if (stat.isDirectory()) path = join(path, 'index.html')","      res.setHeader('Cache-Control', 'no-cache')","      res.setHeader('Content-Type', mime[path.split('.').slice(-1)] || 'application/octet-stream')","      fs.createReadStream(path).pipe(res)","    })","  })","}).listen(port)","","console.log('\\n  Server listening on %d\\n', port)",""],"l":{"1":1,"9":1,"15":1,"16":0,"18":0,"21":1,"22":0,"23":0,"26":1,"27":0,"28":0,"31":0,"32":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"44":1}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/configuration.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/configuration.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":77,"loc":{"start":{"line":77,"column":28},"end":{"line":77,"column":54}}},"2":{"name":"(anonymous_2)","line":101,"loc":{"start":{"line":101,"column":57},"end":{"line":101,"column":75}}},"3":{"name":"(anonymous_3)","line":103,"loc":{"start":{"line":103,"column":17},"end":{"line":103,"column":34}}},"4":{"name":"(anonymous_4)","line":118,"loc":{"start":{"line":118,"column":54},"end":{"line":118,"column":80}}},"5":{"name":"(anonymous_5)","line":161,"loc":{"start":{"line":161,"column":62},"end":{"line":161,"column":94}}},"6":{"name":"(anonymous_6)","line":162,"loc":{"start":{"line":162,"column":17},"end":{"line":162,"column":34}}},"7":{"name":"(anonymous_7)","line":174,"loc":{"start":{"line":174,"column":42},"end":{"line":174,"column":54}}},"8":{"name":"(anonymous_8)","line":181,"loc":{"start":{"line":181,"column":44},"end":{"line":181,"column":56}}}},"statementMap":{"1":{"start":{"line":77,"column":0},"end":{"line":94,"column":2}},"2":{"start":{"line":78,"column":2},"end":{"line":78,"column":28}},"3":{"start":{"line":80,"column":2},"end":{"line":82,"column":3}},"4":{"start":{"line":81,"column":4},"end":{"line":81,"column":49}},"5":{"start":{"line":84,"column":2},"end":{"line":84,"column":19}},"6":{"start":{"line":86,"column":2},"end":{"line":86,"column":17}},"7":{"start":{"line":87,"column":2},"end":{"line":93,"column":3}},"8":{"start":{"line":88,"column":4},"end":{"line":88,"column":36}},"9":{"start":{"line":89,"column":4},"end":{"line":89,"column":45}},"10":{"start":{"line":91,"column":4},"end":{"line":91,"column":94}},"11":{"start":{"line":92,"column":4},"end":{"line":92,"column":36}},"12":{"start":{"line":101,"column":0},"end":{"line":110,"column":2}},"13":{"start":{"line":102,"column":2},"end":{"line":102,"column":15}},"14":{"start":{"line":103,"column":2},"end":{"line":109,"column":11}},"15":{"start":{"line":104,"column":4},"end":{"line":108,"column":6}},"16":{"start":{"line":118,"column":0},"end":{"line":152,"column":2}},"17":{"start":{"line":119,"column":2},"end":{"line":119,"column":25}},"18":{"start":{"line":120,"column":2},"end":{"line":120,"column":28}},"19":{"start":{"line":122,"column":2},"end":{"line":122,"column":15}},"20":{"start":{"line":123,"column":2},"end":{"line":125,"column":3}},"21":{"start":{"line":124,"column":4},"end":{"line":124,"column":48}},"22":{"start":{"line":127,"column":2},"end":{"line":129,"column":3}},"23":{"start":{"line":128,"column":4},"end":{"line":128,"column":54}},"24":{"start":{"line":131,"column":2},"end":{"line":151,"column":3}},"25":{"start":{"line":132,"column":4},"end":{"line":148,"column":5}},"26":{"start":{"line":133,"column":6},"end":{"line":147,"column":7}},"27":{"start":{"line":134,"column":8},"end":{"line":134,"column":51}},"28":{"start":{"line":135,"column":8},"end":{"line":135,"column":41}},"29":{"start":{"line":136,"column":8},"end":{"line":138,"column":9}},"30":{"start":{"line":137,"column":10},"end":{"line":137,"column":45}},"31":{"start":{"line":140,"column":8},"end":{"line":144,"column":10}},"32":{"start":{"line":146,"column":8},"end":{"line":146,"column":102}},"33":{"start":{"line":150,"column":4},"end":{"line":150,"column":69}},"34":{"start":{"line":161,"column":0},"end":{"line":169,"column":2}},"35":{"start":{"line":162,"column":2},"end":{"line":168,"column":11}},"36":{"start":{"line":163,"column":4},"end":{"line":167,"column":6}},"37":{"start":{"line":174,"column":0},"end":{"line":176,"column":2}},"38":{"start":{"line":175,"column":2},"end":{"line":175,"column":21}},"39":{"start":{"line":181,"column":0},"end":{"line":183,"column":2}},"40":{"start":{"line":182,"column":2},"end":{"line":182,"column":19}}},"branchMap":{"1":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":15},"end":{"line":78,"column":21}},{"start":{"line":78,"column":25},"end":{"line":78,"column":27}}]},"2":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"3":{"line":80,"type":"binary-expr","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":25}},{"start":{"line":80,"column":29},"end":{"line":80,"column":43}}]},"4":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"5":{"line":124,"type":"binary-expr","locations":[{"start":{"line":124,"column":18},"end":{"line":124,"column":32}},{"start":{"line":124,"column":36},"end":{"line":124,"column":47}}]},"6":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"7":{"line":128,"type":"binary-expr","locations":[{"start":{"line":128,"column":20},"end":{"line":128,"column":36}},{"start":{"line":128,"column":40},"end":{"line":128,"column":53}}]},"8":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":2},"end":{"line":131,"column":2}},{"start":{"line":131,"column":2},"end":{"line":131,"column":2}}]},"9":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":6}},{"start":{"line":133,"column":6},"end":{"line":133,"column":6}}]},"10":{"line":136,"type":"if","locations":[{"start":{"line":136,"column":8},"end":{"line":136,"column":8}},{"start":{"line":136,"column":8},"end":{"line":136,"column":8}}]},"11":{"line":141,"type":"cond-expr","locations":[{"start":{"line":141,"column":68},"end":{"line":141,"column":86}},{"start":{"line":141,"column":89},"end":{"line":141,"column":90}}]},"12":{"line":141,"type":"binary-expr","locations":[{"start":{"line":141,"column":18},"end":{"line":141,"column":36}},{"start":{"line":141,"column":40},"end":{"line":141,"column":64}}]},"13":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":16},"end":{"line":142,"column":33}},{"start":{"line":142,"column":37},"end":{"line":142,"column":48}}]}},"code":["/*!"," * elasticlunr.Configuration"," * Copyright (C) @YEAR Wei Song"," */"," "," /** ","  * elasticlunr.Configuration is used to analyze the user search configuration.","  * ","  * By elasticlunr.Configuration user could set query-time boosting, boolean model in each field.","  * ","  * Currently configuration supports:","  * 1. query-time boosting, user could set how to boost each field.","  * 2. boolean model chosing, user could choose which boolean model to use for each field.","  * 3. token expandation, user could set token expand to True to improve Recall. Default is False.","  * ","  * Query time boosting must be configured by field category, \"boolean\" model could be configured ","  * by both field category or globally as the following example. Field configuration for \"boolean\"","  * will overwrite global configuration.","  * Token expand could be configured both by field category or golbally. Local field configuration will","  * overwrite global configuration.","  * ","  * configuration example:","  * {","  *   fields:{ ","  *     title: {boost: 2},","  *     body: {boost: 1}","  *   },","  *   bool: \"OR\"","  * }","  * ","  * \"bool\" field configuation overwrite global configuation example:","  * {","  *   fields:{ ","  *     title: {boost: 2, bool: \"AND\"},","  *     body: {boost: 1}","  *   },","  *   bool: \"OR\"","  * }","  * ","  * \"expand\" example:","  * {","  *   fields:{ ","  *     title: {boost: 2, bool: \"AND\"},","  *     body: {boost: 1}","  *   },","  *   bool: \"OR\",","  *   expand: true","  * }","  * ","  * \"expand\" example for field category:","  * {","  *   fields:{ ","  *     title: {boost: 2, bool: \"AND\", expand: true},","  *     body: {boost: 1}","  *   },","  *   bool: \"OR\"","  * }","  * ","  * setting the boost to 0 ignores the field (this will only search the title):","  * {","  *   fields:{","  *     title: {boost: 1},","  *     body: {boost: 0}","  *   }","  * }","  *","  * then, user could search with configuration to do query-time boosting.","  * idx.search('oracle database', {fields: {title: {boost: 2}, body: {boost: 1}}});","  * ","  * ","  * @constructor","  * ","  * @param {String} config user configuration","  * @param {Array} fields fields of index instance","  * @module","  */","elasticlunr.Configuration = function (config, fields) {","  var config = config || '';","","  if (fields == undefined || fields == null) {","    throw new Error('fields should not be null');","  }","","  this.config = {};","","  var userConfig;","  try {","    userConfig = JSON.parse(config);","    this.buildUserConfig(userConfig, fields);","  } catch (error) {","    elasticlunr.utils.warn('user configuration parse failed, will use default configuration');","    this.buildDefaultConfig(fields);","  }","};","","/**"," * Build default search configuration."," * "," * @param {Array} fields fields of index instance"," */","elasticlunr.Configuration.prototype.buildDefaultConfig = function (fields) {","  this.reset();","  fields.forEach(function (field) {","    this.config[field] = {","      boost: 1,","      bool: \"OR\",","      expand: false","    };","  }, this);","};","","/**"," * Build user configuration."," * "," * @param {JSON} config User JSON configuratoin"," * @param {Array} fields fields of index instance"," */","elasticlunr.Configuration.prototype.buildUserConfig = function (config, fields) {","  var global_bool = \"OR\";","  var global_expand = false;","","  this.reset();","  if ('bool' in config) {","    global_bool = config['bool'] || global_bool;","  }","","  if ('expand' in config) {","    global_expand = config['expand'] || global_expand;","  }","","  if ('fields' in config) {","    for (var field in config['fields']) {","      if (fields.indexOf(field) > -1) {","        var field_config = config['fields'][field];","        var field_expand = global_expand;","        if (field_config.expand != undefined) {","          field_expand = field_config.expand;","        }","","        this.config[field] = {","          boost: (field_config.boost || field_config.boost === 0) ? field_config.boost : 1,","          bool: field_config.bool || global_bool,","          expand: field_expand","        };","      } else {","        elasticlunr.utils.warn('field name in user configuration not found in index instance fields');","      }","    }","  } else {","    this.addAllFields2UserConfig(global_bool, global_expand, fields);","  }","};","","/**"," * Add all fields to user search configuration."," * "," * @param {String} bool Boolean model"," * @param {String} expand Expand model"," * @param {Array} fields fields of index instance"," */","elasticlunr.Configuration.prototype.addAllFields2UserConfig = function (bool, expand, fields) {","  fields.forEach(function (field) {","    this.config[field] = {","      boost: 1,","      bool: bool,","      expand: expand","    };","  }, this);","};","","/**"," * get current user configuration"," */","elasticlunr.Configuration.prototype.get = function () {","  return this.config;","};","","/**"," * reset user search configuration."," */","elasticlunr.Configuration.prototype.reset = function () {","  this.config = {};","};",""],"l":{"77":2,"78":0,"80":0,"81":0,"84":0,"86":0,"87":0,"88":0,"89":0,"91":0,"92":0,"101":0,"102":0,"103":0,"104":0,"118":0,"119":0,"120":0,"122":0,"123":0,"124":0,"127":0,"128":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"140":0,"146":0,"150":0,"161":0,"162":0,"163":0,"174":0,"175":0,"181":0,"182":0}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/document_store.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/document_store.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":28},"end":{"line":20,"column":44}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":33},"end":{"line":38,"column":59}}},"3":{"name":"(anonymous_3)","line":54,"loc":{"start":{"line":54,"column":50},"end":{"line":54,"column":62}}},"4":{"name":"(anonymous_4)","line":67,"loc":{"start":{"line":67,"column":45},"end":{"line":67,"column":68}}},"5":{"name":"(anonymous_5)","line":87,"loc":{"start":{"line":87,"column":45},"end":{"line":87,"column":63}}},"6":{"name":"(anonymous_6)","line":99,"loc":{"start":{"line":99,"column":45},"end":{"line":99,"column":63}}},"7":{"name":"(anonymous_7)","line":109,"loc":{"start":{"line":109,"column":48},"end":{"line":109,"column":66}}},"8":{"name":"(anonymous_8)","line":125,"loc":{"start":{"line":125,"column":53},"end":{"line":125,"column":90}}},"9":{"name":"(anonymous_9)","line":141,"loc":{"start":{"line":141,"column":56},"end":{"line":141,"column":93}}},"10":{"name":"(anonymous_10)","line":155,"loc":{"start":{"line":155,"column":53},"end":{"line":155,"column":82}}},"11":{"name":"(anonymous_11)","line":169,"loc":{"start":{"line":169,"column":45},"end":{"line":169,"column":57}}},"12":{"name":"clone","line":184,"loc":{"start":{"line":184,"column":0},"end":{"line":184,"column":20}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":30,"column":2}},"2":{"start":{"line":21,"column":2},"end":{"line":25,"column":3}},"3":{"start":{"line":22,"column":4},"end":{"line":22,"column":22}},"4":{"start":{"line":24,"column":4},"end":{"line":24,"column":22}},"5":{"start":{"line":27,"column":2},"end":{"line":27,"column":17}},"6":{"start":{"line":28,"column":2},"end":{"line":28,"column":20}},"7":{"start":{"line":29,"column":2},"end":{"line":29,"column":18}},"8":{"start":{"line":38,"column":0},"end":{"line":47,"column":2}},"9":{"start":{"line":39,"column":2},"end":{"line":39,"column":23}},"10":{"start":{"line":41,"column":2},"end":{"line":41,"column":39}},"11":{"start":{"line":42,"column":2},"end":{"line":42,"column":35}},"12":{"start":{"line":43,"column":2},"end":{"line":43,"column":41}},"13":{"start":{"line":44,"column":2},"end":{"line":44,"column":36}},"14":{"start":{"line":46,"column":2},"end":{"line":46,"column":15}},"15":{"start":{"line":54,"column":0},"end":{"line":56,"column":2}},"16":{"start":{"line":55,"column":2},"end":{"line":55,"column":20}},"17":{"start":{"line":67,"column":0},"end":{"line":75,"column":2}},"18":{"start":{"line":68,"column":2},"end":{"line":68,"column":42}},"19":{"start":{"line":68,"column":28},"end":{"line":68,"column":42}},"20":{"start":{"line":70,"column":2},"end":{"line":74,"column":3}},"21":{"start":{"line":71,"column":4},"end":{"line":71,"column":35}},"22":{"start":{"line":73,"column":4},"end":{"line":73,"column":29}},"23":{"start":{"line":87,"column":0},"end":{"line":90,"column":2}},"24":{"start":{"line":88,"column":2},"end":{"line":88,"column":49}},"25":{"start":{"line":88,"column":37},"end":{"line":88,"column":49}},"26":{"start":{"line":89,"column":2},"end":{"line":89,"column":27}},"27":{"start":{"line":99,"column":0},"end":{"line":101,"column":2}},"28":{"start":{"line":100,"column":2},"end":{"line":100,"column":29}},"29":{"start":{"line":109,"column":0},"end":{"line":115,"column":2}},"30":{"start":{"line":110,"column":2},"end":{"line":110,"column":35}},"31":{"start":{"line":110,"column":28},"end":{"line":110,"column":35}},"32":{"start":{"line":112,"column":2},"end":{"line":112,"column":27}},"33":{"start":{"line":113,"column":2},"end":{"line":113,"column":30}},"34":{"start":{"line":114,"column":2},"end":{"line":114,"column":16}},"35":{"start":{"line":125,"column":0},"end":{"line":131,"column":2}},"36":{"start":{"line":126,"column":2},"end":{"line":126,"column":54}},"37":{"start":{"line":126,"column":47},"end":{"line":126,"column":54}},"38":{"start":{"line":127,"column":2},"end":{"line":127,"column":43}},"39":{"start":{"line":127,"column":36},"end":{"line":127,"column":43}},"40":{"start":{"line":129,"column":2},"end":{"line":129,"column":55}},"41":{"start":{"line":129,"column":29},"end":{"line":129,"column":55}},"42":{"start":{"line":130,"column":2},"end":{"line":130,"column":43}},"43":{"start":{"line":141,"column":0},"end":{"line":146,"column":2}},"44":{"start":{"line":142,"column":2},"end":{"line":142,"column":54}},"45":{"start":{"line":142,"column":47},"end":{"line":142,"column":54}},"46":{"start":{"line":143,"column":2},"end":{"line":143,"column":43}},"47":{"start":{"line":143,"column":36},"end":{"line":143,"column":43}},"48":{"start":{"line":145,"column":2},"end":{"line":145,"column":49}},"49":{"start":{"line":155,"column":0},"end":{"line":161,"column":2}},"50":{"start":{"line":156,"column":2},"end":{"line":156,"column":56}},"51":{"start":{"line":156,"column":47},"end":{"line":156,"column":56}},"52":{"start":{"line":158,"column":2},"end":{"line":158,"column":39}},"53":{"start":{"line":158,"column":30},"end":{"line":158,"column":39}},"54":{"start":{"line":159,"column":2},"end":{"line":159,"column":53}},"55":{"start":{"line":159,"column":44},"end":{"line":159,"column":53}},"56":{"start":{"line":160,"column":2},"end":{"line":160,"column":41}},"57":{"start":{"line":169,"column":0},"end":{"line":176,"column":2}},"58":{"start":{"line":170,"column":2},"end":{"line":175,"column":4}},"59":{"start":{"line":184,"column":0},"end":{"line":194,"column":1}},"60":{"start":{"line":185,"column":2},"end":{"line":185,"column":58}},"61":{"start":{"line":185,"column":47},"end":{"line":185,"column":58}},"62":{"start":{"line":187,"column":2},"end":{"line":187,"column":31}},"63":{"start":{"line":189,"column":2},"end":{"line":191,"column":3}},"64":{"start":{"line":190,"column":4},"end":{"line":190,"column":57}},"65":{"start":{"line":190,"column":34},"end":{"line":190,"column":57}},"66":{"start":{"line":193,"column":2},"end":{"line":193,"column":14}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":19}},{"start":{"line":21,"column":23},"end":{"line":21,"column":41}}]},"3":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"4":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"5":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"6":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":2},"end":{"line":110,"column":2}},{"start":{"line":110,"column":2},"end":{"line":110,"column":2}}]},"7":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"8":{"line":126,"type":"binary-expr","locations":[{"start":{"line":126,"column":6},"end":{"line":126,"column":21}},{"start":{"line":126,"column":25},"end":{"line":126,"column":45}}]},"9":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"10":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"11":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":2},"end":{"line":142,"column":2}},{"start":{"line":142,"column":2},"end":{"line":142,"column":2}}]},"12":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":6},"end":{"line":142,"column":21}},{"start":{"line":142,"column":25},"end":{"line":142,"column":45}}]},"13":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]},"14":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":2},"end":{"line":156,"column":2}},{"start":{"line":156,"column":2},"end":{"line":156,"column":2}}]},"15":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":6},"end":{"line":156,"column":21}},{"start":{"line":156,"column":25},"end":{"line":156,"column":45}}]},"16":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]},"17":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":2},"end":{"line":159,"column":2}},{"start":{"line":159,"column":2},"end":{"line":159,"column":2}}]},"18":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"19":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":6},"end":{"line":185,"column":18}},{"start":{"line":185,"column":22},"end":{"line":185,"column":45}}]},"20":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":4},"end":{"line":190,"column":4}},{"start":{"line":190,"column":4},"end":{"line":190,"column":4}}]}},"code":["/*!"," * elasticlunr.DocumentStore"," * Copyright (C) @YEAR Wei Song"," */","","/**"," * elasticlunr.DocumentStore is a simple key-value document store used for storing sets of tokens for"," * documents stored in index."," *"," * elasticlunr.DocumentStore store original JSON format documents that you could build search snippet by this original JSON document."," *"," * user could choose whether original JSON format document should be store, if no configuration then document will be stored defaultly."," * If user care more about the index size, user could select not store JSON documents, then this will has some defects, such as user"," * could not use JSON document to generate snippets of search results."," *"," * @param {Boolean} save If the original JSON document should be stored."," * @constructor"," * @module"," */","elasticlunr.DocumentStore = function (save) {","  if (save === null || save === undefined) {","    this._save = true;","  } else {","    this._save = save;","  }","","  this.docs = {};","  this.docInfo = {};","  this.length = 0;","};","","/**"," * Loads a previously serialised document store"," *"," * @param {Object} serialisedData The serialised document store to load."," * @return {elasticlunr.DocumentStore}"," */","elasticlunr.DocumentStore.load = function (serialisedData) {","  var store = new this;","","  store.length = serialisedData.length;","  store.docs = serialisedData.docs;","  store.docInfo = serialisedData.docInfo;","  store._save = serialisedData.save;","","  return store;","};","","/**"," * check if current instance store the original doc"," *"," * @return {Boolean}"," */","elasticlunr.DocumentStore.prototype.isDocStored = function () {","  return this._save;","};","","/**"," * Stores the given doc in the document store against the given id."," * If docRef already exist, then update doc."," *"," * Document is store by original JSON format, then you could use original document to generate search snippets."," *"," * @param {Integer|String} docRef The key used to store the JSON format doc."," * @param {Object} doc The JSON format doc."," */","elasticlunr.DocumentStore.prototype.addDoc = function (docRef, doc) {","  if (!this.hasDoc(docRef)) this.length++;","","  if (this._save === true) {","    this.docs[docRef] = clone(doc);","  } else {","    this.docs[docRef] = null;","  }","};","","/**"," * Retrieves the JSON doc from the document store for a given key."," *"," * If docRef not found, return null."," * If user set not storing the documents, return null."," *"," * @param {Integer|String} docRef The key to lookup and retrieve from the document store."," * @return {Object}"," * @memberOf DocumentStore"," */","elasticlunr.DocumentStore.prototype.getDoc = function (docRef) {","  if (this.hasDoc(docRef) === false) return null;","  return this.docs[docRef];","};","","/**"," * Checks whether the document store contains a key (docRef)."," *"," * @param {Integer|String} docRef The id to look up in the document store."," * @return {Boolean}"," * @memberOf DocumentStore"," */","elasticlunr.DocumentStore.prototype.hasDoc = function (docRef) {","  return docRef in this.docs;","};","","/**"," * Removes the value for a key in the document store."," *"," * @param {Integer|String} docRef The id to remove from the document store."," * @memberOf DocumentStore"," */","elasticlunr.DocumentStore.prototype.removeDoc = function (docRef) {","  if (!this.hasDoc(docRef)) return;","","  delete this.docs[docRef];","  delete this.docInfo[docRef];","  this.length--;","};","","/**"," * Add field length of a document's field tokens from pipeline results."," * The field length of a document is used to do field length normalization even without the original JSON document stored."," *"," * @param {Integer|String} docRef document's id or reference"," * @param {String} fieldName field name"," * @param {Integer} length field length"," */","elasticlunr.DocumentStore.prototype.addFieldLength = function (docRef, fieldName, length) {","  if (docRef === null || docRef === undefined) return;","  if (this.hasDoc(docRef) == false) return;","","  if (!this.docInfo[docRef]) this.docInfo[docRef] = {};","  this.docInfo[docRef][fieldName] = length;","};","","/**"," * Update field length of a document's field tokens from pipeline results."," * The field length of a document is used to do field length normalization even without the original JSON document stored."," *"," * @param {Integer|String} docRef document's id or reference"," * @param {String} fieldName field name"," * @param {Integer} length field length"," */","elasticlunr.DocumentStore.prototype.updateFieldLength = function (docRef, fieldName, length) {","  if (docRef === null || docRef === undefined) return;","  if (this.hasDoc(docRef) == false) return;","","  this.addFieldLength(docRef, fieldName, length);","};","","/**"," * get field length of a document by docRef"," *"," * @param {Integer|String} docRef document id or reference"," * @param {String} fieldName field name"," * @return {Integer} field length"," */","elasticlunr.DocumentStore.prototype.getFieldLength = function (docRef, fieldName) {","  if (docRef === null || docRef === undefined) return 0;","","  if (!(docRef in this.docs)) return 0;","  if (!(fieldName in this.docInfo[docRef])) return 0;","  return this.docInfo[docRef][fieldName];","};","","/**"," * Returns a JSON representation of the document store used for serialisation."," *"," * @return {Object} JSON format"," * @memberOf DocumentStore"," */","elasticlunr.DocumentStore.prototype.toJSON = function () {","  return {","    docs: this.docs,","    docInfo: this.docInfo,","    length: this.length,","    save: this._save","  };","};","","/**"," * Cloning object"," *"," * @param {Object} object in JSON format"," * @return {Object} copied object"," */","function clone(obj) {","  if (null === obj || \"object\" !== typeof obj) return obj;","","  var copy = obj.constructor();","","  for (var attr in obj) {","    if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];","  }","","  return copy;","}",""],"l":{"20":2,"21":0,"22":0,"24":0,"27":0,"28":0,"29":0,"38":0,"39":0,"41":0,"42":0,"43":0,"44":0,"46":0,"54":0,"55":0,"67":0,"68":0,"70":0,"71":0,"73":0,"87":0,"88":0,"89":0,"99":0,"100":0,"109":0,"110":0,"112":0,"113":0,"114":0,"125":0,"126":0,"127":0,"129":0,"130":0,"141":0,"142":0,"143":0,"145":0,"155":0,"156":0,"158":0,"159":0,"160":0,"169":0,"170":0,"184":1,"185":0,"187":0,"189":0,"190":0,"193":0}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/event_emitter.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/event_emitter.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":16,"loc":{"start":{"line":16,"column":27},"end":{"line":16,"column":39}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":49},"end":{"line":29,"column":61}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":16},"end":{"line":36,"column":32}}},"4":{"name":"(anonymous_4)","line":49,"loc":{"start":{"line":49,"column":52},"end":{"line":49,"column":72}}},"5":{"name":"(anonymous_5)","line":69,"loc":{"start":{"line":69,"column":42},"end":{"line":69,"column":58}}},"6":{"name":"(anonymous_6)","line":74,"loc":{"start":{"line":74,"column":28},"end":{"line":74,"column":42}}},"7":{"name":"(anonymous_7)","line":86,"loc":{"start":{"line":86,"column":48},"end":{"line":86,"column":64}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":18,"column":2}},"2":{"start":{"line":17,"column":2},"end":{"line":17,"column":19}},"3":{"start":{"line":29,"column":0},"end":{"line":40,"column":2}},"4":{"start":{"line":30,"column":2},"end":{"line":32,"column":19}},"5":{"start":{"line":34,"column":2},"end":{"line":34,"column":89}},"6":{"start":{"line":34,"column":32},"end":{"line":34,"column":89}},"7":{"start":{"line":36,"column":2},"end":{"line":39,"column":11}},"8":{"start":{"line":37,"column":4},"end":{"line":37,"column":55}},"9":{"start":{"line":37,"column":32},"end":{"line":37,"column":55}},"10":{"start":{"line":38,"column":4},"end":{"line":38,"column":31}},"11":{"start":{"line":49,"column":0},"end":{"line":58,"column":2}},"12":{"start":{"line":50,"column":2},"end":{"line":50,"column":37}},"13":{"start":{"line":50,"column":30},"end":{"line":50,"column":37}},"14":{"start":{"line":52,"column":2},"end":{"line":52,"column":46}},"15":{"start":{"line":53,"column":2},"end":{"line":53,"column":29}},"16":{"start":{"line":53,"column":22},"end":{"line":53,"column":29}},"17":{"start":{"line":55,"column":2},"end":{"line":55,"column":39}},"18":{"start":{"line":57,"column":2},"end":{"line":57,"column":62}},"19":{"start":{"line":57,"column":37},"end":{"line":57,"column":62}},"20":{"start":{"line":69,"column":0},"end":{"line":77,"column":2}},"21":{"start":{"line":70,"column":2},"end":{"line":70,"column":37}},"22":{"start":{"line":70,"column":30},"end":{"line":70,"column":37}},"23":{"start":{"line":72,"column":2},"end":{"line":72,"column":54}},"24":{"start":{"line":74,"column":2},"end":{"line":76,"column":11}},"25":{"start":{"line":75,"column":4},"end":{"line":75,"column":30}},"26":{"start":{"line":86,"column":0},"end":{"line":88,"column":2}},"27":{"start":{"line":87,"column":2},"end":{"line":87,"column":29}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"5":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"6":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]}},"code":["/*!"," * elasticlunr.EventEmitter"," * Copyright (C) @YEAR Oliver Nightingale"," * Copyright (C) @YEAR Wei Song"," */","","/**"," * elasticlunr.EventEmitter is an event emitter for elasticlunr."," * It manages adding and removing event handlers and triggering events and their handlers."," *"," * Each event could has multiple corresponding functions,"," * these functions will be called as the sequence that they are added into the event."," * "," * @constructor"," */","elasticlunr.EventEmitter = function () {","  this.events = {};","};","","/**"," * Binds a handler function to a specific event(s)."," *"," * Can bind a single function to many different events in one call."," *"," * @param {String} [eventName] The name(s) of events to bind this function to."," * @param {Function} fn The function to call when an event is fired."," * @memberOf EventEmitter"," */","elasticlunr.EventEmitter.prototype.addListener = function () {","  var args = Array.prototype.slice.call(arguments),","      fn = args.pop(),","      names = args;","","  if (typeof fn !== \"function\") throw new TypeError (\"last argument must be a function\");","","  names.forEach(function (name) {","    if (!this.hasHandler(name)) this.events[name] = [];","    this.events[name].push(fn);","  }, this);","};","","/**"," * Removes a handler function from a specific event."," *"," * @param {String} eventName The name of the event to remove this function from."," * @param {Function} fn The function to remove from an event."," * @memberOf EventEmitter"," */","elasticlunr.EventEmitter.prototype.removeListener = function (name, fn) {","  if (!this.hasHandler(name)) return;","","  var fnIndex = this.events[name].indexOf(fn);","  if (fnIndex === -1) return;","","  this.events[name].splice(fnIndex, 1);","","  if (this.events[name].length == 0) delete this.events[name];","};","","/**"," * Call all functions that bounded to the given event."," *"," * Additional data can be passed to the event handler as arguments to `emit`"," * after the event name."," *"," * @param {String} eventName The name of the event to emit."," * @memberOf EventEmitter"," */","elasticlunr.EventEmitter.prototype.emit = function (name) {","  if (!this.hasHandler(name)) return;","","  var args = Array.prototype.slice.call(arguments, 1);","","  this.events[name].forEach(function (fn) {","    fn.apply(undefined, args);","  }, this);","};","","/**"," * Checks whether a handler has ever been stored against an event."," *"," * @param {String} eventName The name of the event to check."," * @private"," * @memberOf EventEmitter"," */","elasticlunr.EventEmitter.prototype.hasHandler = function (name) {","  return name in this.events;","};",""],"l":{"16":2,"17":0,"29":0,"30":0,"34":0,"36":0,"37":0,"38":0,"49":0,"50":0,"52":0,"53":0,"55":0,"57":0,"69":0,"70":0,"72":0,"74":0,"75":0,"86":0,"87":0}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/index.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0},"fnMap":{"1":{"name":"(anonymous_1)","line":14,"loc":{"start":{"line":14,"column":20},"end":{"line":14,"column":32}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":38},"end":{"line":23,"column":50}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":33},"end":{"line":37,"column":45}}},"4":{"name":"(anonymous_4)","line":49,"loc":{"start":{"line":49,"column":34},"end":{"line":49,"column":54}}},"5":{"name":"(anonymous_5)","line":63,"loc":{"start":{"line":63,"column":25},"end":{"line":63,"column":51}}},"6":{"name":"(anonymous_6)","line":96,"loc":{"start":{"line":96,"column":39},"end":{"line":96,"column":60}}},"7":{"name":"(anonymous_7)","line":115,"loc":{"start":{"line":115,"column":37},"end":{"line":115,"column":56}}},"8":{"name":"(anonymous_8)","line":130,"loc":{"start":{"line":130,"column":43},"end":{"line":130,"column":59}}},"9":{"name":"(anonymous_9)","line":150,"loc":{"start":{"line":150,"column":37},"end":{"line":150,"column":63}}},"10":{"name":"(anonymous_10)","line":157,"loc":{"start":{"line":157,"column":23},"end":{"line":157,"column":40}}},"11":{"name":"(anonymous_11)","line":162,"loc":{"start":{"line":162,"column":24},"end":{"line":162,"column":41}}},"12":{"name":"(anonymous_12)","line":193,"loc":{"start":{"line":193,"column":45},"end":{"line":193,"column":74}}},"13":{"name":"(anonymous_13)","line":220,"loc":{"start":{"line":220,"column":40},"end":{"line":220,"column":66}}},"14":{"name":"(anonymous_14)","line":230,"loc":{"start":{"line":230,"column":23},"end":{"line":230,"column":40}}},"15":{"name":"(anonymous_15)","line":232,"loc":{"start":{"line":232,"column":24},"end":{"line":232,"column":41}}},"16":{"name":"(anonymous_16)","line":260,"loc":{"start":{"line":260,"column":40},"end":{"line":260,"column":66}}},"17":{"name":"(anonymous_17)","line":278,"loc":{"start":{"line":278,"column":34},"end":{"line":278,"column":57}}},"18":{"name":"(anonymous_18)","line":294,"loc":{"start":{"line":294,"column":40},"end":{"line":294,"column":52}}},"19":{"name":"(anonymous_19)","line":323,"loc":{"start":{"line":323,"column":37},"end":{"line":323,"column":66}}},"20":{"name":"(anonymous_20)","line":359,"loc":{"start":{"line":359,"column":15},"end":{"line":359,"column":31}}},"21":{"name":"(anonymous_21)","line":371,"loc":{"start":{"line":371,"column":42},"end":{"line":371,"column":84}}},"22":{"name":"(anonymous_22)","line":383,"loc":{"start":{"line":383,"column":22},"end":{"line":383,"column":39}}},"23":{"name":"(anonymous_23)","line":407,"loc":{"start":{"line":407,"column":19},"end":{"line":407,"column":34}}},"24":{"name":"(anonymous_24)","line":477,"loc":{"start":{"line":477,"column":42},"end":{"line":477,"column":77}}},"25":{"name":"(anonymous_25)","line":511,"loc":{"start":{"line":511,"column":47},"end":{"line":511,"column":81}}},"26":{"name":"(anonymous_26)","line":533,"loc":{"start":{"line":533,"column":40},"end":{"line":533,"column":72}}},"27":{"name":"(anonymous_27)","line":549,"loc":{"start":{"line":549,"column":37},"end":{"line":549,"column":49}}},"28":{"name":"(anonymous_28)","line":551,"loc":{"start":{"line":551,"column":23},"end":{"line":551,"column":40}}},"29":{"name":"(anonymous_29)","line":591,"loc":{"start":{"line":591,"column":34},"end":{"line":591,"column":52}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":26,"column":2}},"2":{"start":{"line":15,"column":2},"end":{"line":15,"column":20}},"3":{"start":{"line":16,"column":2},"end":{"line":16,"column":19}},"4":{"start":{"line":17,"column":2},"end":{"line":17,"column":43}},"5":{"start":{"line":18,"column":2},"end":{"line":18,"column":53}},"6":{"start":{"line":19,"column":2},"end":{"line":19,"column":18}},"7":{"start":{"line":20,"column":2},"end":{"line":20,"column":51}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":22}},"9":{"start":{"line":23,"column":2},"end":{"line":25,"column":17}},"10":{"start":{"line":24,"column":4},"end":{"line":24,"column":24}},"11":{"start":{"line":37,"column":0},"end":{"line":40,"column":2}},"12":{"start":{"line":38,"column":2},"end":{"line":38,"column":51}},"13":{"start":{"line":39,"column":2},"end":{"line":39,"column":70}},"14":{"start":{"line":49,"column":0},"end":{"line":51,"column":2}},"15":{"start":{"line":50,"column":2},"end":{"line":50,"column":52}},"16":{"start":{"line":63,"column":0},"end":{"line":81,"column":2}},"17":{"start":{"line":64,"column":2},"end":{"line":67,"column":3}},"18":{"start":{"line":65,"column":4},"end":{"line":66,"column":84}},"19":{"start":{"line":69,"column":2},"end":{"line":69,"column":21}},"20":{"start":{"line":71,"column":2},"end":{"line":71,"column":38}},"21":{"start":{"line":72,"column":2},"end":{"line":72,"column":32}},"22":{"start":{"line":73,"column":2},"end":{"line":73,"column":83}},"23":{"start":{"line":74,"column":2},"end":{"line":74,"column":68}},"24":{"start":{"line":75,"column":2},"end":{"line":75,"column":17}},"25":{"start":{"line":76,"column":2},"end":{"line":78,"column":3}},"26":{"start":{"line":77,"column":4},"end":{"line":77,"column":83}},"27":{"start":{"line":80,"column":2},"end":{"line":80,"column":13}},"28":{"start":{"line":96,"column":0},"end":{"line":100,"column":2}},"29":{"start":{"line":97,"column":2},"end":{"line":97,"column":31}},"30":{"start":{"line":98,"column":2},"end":{"line":98,"column":56}},"31":{"start":{"line":99,"column":2},"end":{"line":99,"column":14}},"32":{"start":{"line":115,"column":0},"end":{"line":118,"column":2}},"33":{"start":{"line":116,"column":2},"end":{"line":116,"column":22}},"34":{"start":{"line":117,"column":2},"end":{"line":117,"column":14}},"35":{"start":{"line":130,"column":0},"end":{"line":133,"column":2}},"36":{"start":{"line":131,"column":2},"end":{"line":131,"column":59}},"37":{"start":{"line":132,"column":2},"end":{"line":132,"column":14}},"38":{"start":{"line":150,"column":0},"end":{"line":175,"column":2}},"39":{"start":{"line":151,"column":2},"end":{"line":151,"column":19}},"40":{"start":{"line":151,"column":12},"end":{"line":151,"column":19}},"41":{"start":{"line":152,"column":2},"end":{"line":152,"column":61}},"42":{"start":{"line":154,"column":2},"end":{"line":154,"column":30}},"43":{"start":{"line":156,"column":2},"end":{"line":156,"column":41}},"44":{"start":{"line":157,"column":2},"end":{"line":172,"column":11}},"45":{"start":{"line":158,"column":4},"end":{"line":158,"column":75}},"46":{"start":{"line":159,"column":4},"end":{"line":159,"column":73}},"47":{"start":{"line":161,"column":4},"end":{"line":161,"column":24}},"48":{"start":{"line":162,"column":4},"end":{"line":165,"column":13}},"49":{"start":{"line":163,"column":6},"end":{"line":164,"column":33}},"50":{"start":{"line":163,"column":31},"end":{"line":163,"column":54}},"51":{"start":{"line":164,"column":11},"end":{"line":164,"column":33}},"52":{"start":{"line":167,"column":4},"end":{"line":171,"column":5}},"53":{"start":{"line":168,"column":6},"end":{"line":168,"column":44}},"54":{"start":{"line":169,"column":6},"end":{"line":169,"column":47}},"55":{"start":{"line":170,"column":6},"end":{"line":170,"column":76}},"56":{"start":{"line":174,"column":2},"end":{"line":174,"column":58}},"57":{"start":{"line":174,"column":17},"end":{"line":174,"column":58}},"58":{"start":{"line":193,"column":0},"end":{"line":202,"column":2}},"59":{"start":{"line":194,"column":2},"end":{"line":194,"column":22}},"60":{"start":{"line":194,"column":15},"end":{"line":194,"column":22}},"61":{"start":{"line":195,"column":2},"end":{"line":197,"column":3}},"62":{"start":{"line":196,"column":4},"end":{"line":196,"column":11}},"63":{"start":{"line":199,"column":2},"end":{"line":199,"column":49}},"64":{"start":{"line":199,"column":42},"end":{"line":199,"column":49}},"65":{"start":{"line":200,"column":2},"end":{"line":200,"column":46}},"66":{"start":{"line":201,"column":2},"end":{"line":201,"column":29}},"67":{"start":{"line":220,"column":0},"end":{"line":238,"column":2}},"68":{"start":{"line":221,"column":2},"end":{"line":221,"column":19}},"69":{"start":{"line":221,"column":12},"end":{"line":221,"column":19}},"70":{"start":{"line":223,"column":2},"end":{"line":223,"column":61}},"71":{"start":{"line":225,"column":2},"end":{"line":225,"column":30}},"72":{"start":{"line":226,"column":2},"end":{"line":226,"column":49}},"73":{"start":{"line":226,"column":42},"end":{"line":226,"column":49}},"74":{"start":{"line":228,"column":2},"end":{"line":228,"column":39}},"75":{"start":{"line":230,"column":2},"end":{"line":235,"column":11}},"76":{"start":{"line":231,"column":4},"end":{"line":231,"column":75}},"77":{"start":{"line":232,"column":4},"end":{"line":234,"column":13}},"78":{"start":{"line":233,"column":6},"end":{"line":233,"column":51}},"79":{"start":{"line":237,"column":2},"end":{"line":237,"column":61}},"80":{"start":{"line":237,"column":17},"end":{"line":237,"column":61}},"81":{"start":{"line":260,"column":0},"end":{"line":267,"column":2}},"82":{"start":{"line":261,"column":2},"end":{"line":261,"column":61}},"83":{"start":{"line":263,"column":2},"end":{"line":263,"column":45}},"84":{"start":{"line":264,"column":2},"end":{"line":264,"column":26}},"85":{"start":{"line":266,"column":2},"end":{"line":266,"column":61}},"86":{"start":{"line":266,"column":17},"end":{"line":266,"column":61}},"87":{"start":{"line":278,"column":0},"end":{"line":287,"column":2}},"88":{"start":{"line":279,"column":2},"end":{"line":279,"column":42}},"89":{"start":{"line":280,"column":2},"end":{"line":280,"column":102}},"90":{"start":{"line":280,"column":70},"end":{"line":280,"column":102}},"91":{"start":{"line":282,"column":2},"end":{"line":282,"column":46}},"92":{"start":{"line":283,"column":2},"end":{"line":283,"column":63}},"93":{"start":{"line":284,"column":2},"end":{"line":284,"column":33}},"94":{"start":{"line":286,"column":2},"end":{"line":286,"column":13}},"95":{"start":{"line":294,"column":0},"end":{"line":296,"column":2}},"96":{"start":{"line":295,"column":2},"end":{"line":295,"column":30}},"97":{"start":{"line":323,"column":0},"end":{"line":361,"column":2}},"98":{"start":{"line":324,"column":2},"end":{"line":324,"column":24}},"99":{"start":{"line":324,"column":14},"end":{"line":324,"column":24}},"100":{"start":{"line":326,"column":2},"end":{"line":326,"column":23}},"101":{"start":{"line":327,"column":2},"end":{"line":329,"column":3}},"102":{"start":{"line":328,"column":4},"end":{"line":328,"column":43}},"103":{"start":{"line":331,"column":2},"end":{"line":331,"column":80}},"104":{"start":{"line":333,"column":2},"end":{"line":333,"column":68}},"105":{"start":{"line":335,"column":2},"end":{"line":335,"column":24}},"106":{"start":{"line":337,"column":2},"end":{"line":352,"column":3}},"107":{"start":{"line":338,"column":4},"end":{"line":338,"column":74}},"108":{"start":{"line":339,"column":4},"end":{"line":339,"column":41}},"109":{"start":{"line":341,"column":4},"end":{"line":343,"column":5}},"110":{"start":{"line":342,"column":6},"end":{"line":342,"column":75}},"111":{"start":{"line":345,"column":4},"end":{"line":351,"column":5}},"112":{"start":{"line":346,"column":6},"end":{"line":350,"column":7}},"113":{"start":{"line":347,"column":8},"end":{"line":347,"column":59}},"114":{"start":{"line":349,"column":8},"end":{"line":349,"column":58}},"115":{"start":{"line":354,"column":2},"end":{"line":354,"column":19}},"116":{"start":{"line":355,"column":2},"end":{"line":357,"column":3}},"117":{"start":{"line":356,"column":4},"end":{"line":356,"column":61}},"118":{"start":{"line":359,"column":2},"end":{"line":359,"column":62}},"119":{"start":{"line":359,"column":33},"end":{"line":359,"column":58}},"120":{"start":{"line":360,"column":2},"end":{"line":360,"column":17}},"121":{"start":{"line":371,"column":0},"end":{"line":463,"column":2}},"122":{"start":{"line":372,"column":2},"end":{"line":372,"column":43}},"123":{"start":{"line":373,"column":2},"end":{"line":373,"column":40}},"124":{"start":{"line":374,"column":2},"end":{"line":374,"column":38}},"125":{"start":{"line":375,"column":2},"end":{"line":375,"column":20}},"126":{"start":{"line":376,"column":2},"end":{"line":376,"column":21}},"127":{"start":{"line":379,"column":2},"end":{"line":381,"column":3}},"128":{"start":{"line":380,"column":4},"end":{"line":380,"column":11}},"129":{"start":{"line":383,"column":2},"end":{"line":459,"column":11}},"130":{"start":{"line":384,"column":4},"end":{"line":384,"column":25}},"131":{"start":{"line":385,"column":4},"end":{"line":387,"column":5}},"132":{"start":{"line":386,"column":6},"end":{"line":386,"column":56}},"133":{"start":{"line":406,"column":4},"end":{"line":406,"column":30}},"134":{"start":{"line":407,"column":4},"end":{"line":456,"column":13}},"135":{"start":{"line":408,"column":6},"end":{"line":408,"column":52}},"136":{"start":{"line":409,"column":6},"end":{"line":409,"column":41}},"137":{"start":{"line":411,"column":6},"end":{"line":422,"column":7}},"138":{"start":{"line":415,"column":10},"end":{"line":415,"column":32}},"139":{"start":{"line":416,"column":10},"end":{"line":420,"column":11}},"140":{"start":{"line":417,"column":14},"end":{"line":419,"column":15}},"141":{"start":{"line":418,"column":18},"end":{"line":418,"column":54}},"142":{"start":{"line":421,"column":10},"end":{"line":421,"column":30}},"143":{"start":{"line":429,"column":6},"end":{"line":431,"column":7}},"144":{"start":{"line":430,"column":8},"end":{"line":430,"column":52}},"145":{"start":{"line":433,"column":6},"end":{"line":455,"column":7}},"146":{"start":{"line":434,"column":8},"end":{"line":434,"column":69}},"147":{"start":{"line":435,"column":8},"end":{"line":435,"column":79}},"148":{"start":{"line":436,"column":8},"end":{"line":436,"column":32}},"149":{"start":{"line":437,"column":8},"end":{"line":439,"column":9}},"150":{"start":{"line":438,"column":10},"end":{"line":438,"column":55}},"151":{"start":{"line":441,"column":8},"end":{"line":441,"column":25}},"152":{"start":{"line":442,"column":8},"end":{"line":446,"column":9}},"153":{"start":{"line":445,"column":10},"end":{"line":445,"column":75}},"154":{"start":{"line":448,"column":8},"end":{"line":448,"column":58}},"155":{"start":{"line":450,"column":8},"end":{"line":454,"column":9}},"156":{"start":{"line":451,"column":10},"end":{"line":451,"column":44}},"157":{"start":{"line":453,"column":10},"end":{"line":453,"column":43}},"158":{"start":{"line":458,"column":4},"end":{"line":458,"column":69}},"159":{"start":{"line":461,"column":2},"end":{"line":461,"column":65}},"160":{"start":{"line":462,"column":2},"end":{"line":462,"column":16}},"161":{"start":{"line":477,"column":0},"end":{"line":499,"column":2}},"162":{"start":{"line":478,"column":4},"end":{"line":480,"column":5}},"163":{"start":{"line":479,"column":8},"end":{"line":479,"column":22}},"164":{"start":{"line":481,"column":4},"end":{"line":498,"column":5}},"165":{"start":{"line":482,"column":8},"end":{"line":482,"column":30}},"166":{"start":{"line":483,"column":8},"end":{"line":487,"column":9}},"167":{"start":{"line":484,"column":12},"end":{"line":486,"column":13}},"168":{"start":{"line":485,"column":16},"end":{"line":485,"column":76}},"169":{"start":{"line":488,"column":8},"end":{"line":488,"column":28}},"170":{"start":{"line":490,"column":8},"end":{"line":496,"column":9}},"171":{"start":{"line":491,"column":12},"end":{"line":495,"column":13}},"172":{"start":{"line":492,"column":16},"end":{"line":492,"column":54}},"173":{"start":{"line":494,"column":16},"end":{"line":494,"column":53}},"174":{"start":{"line":497,"column":8},"end":{"line":497,"column":27}},"175":{"start":{"line":511,"column":0},"end":{"line":519,"column":2}},"176":{"start":{"line":512,"column":2},"end":{"line":518,"column":3}},"177":{"start":{"line":513,"column":4},"end":{"line":517,"column":5}},"178":{"start":{"line":514,"column":6},"end":{"line":514,"column":33}},"179":{"start":{"line":516,"column":6},"end":{"line":516,"column":31}},"180":{"start":{"line":533,"column":0},"end":{"line":541,"column":2}},"181":{"start":{"line":534,"column":2},"end":{"line":538,"column":3}},"182":{"start":{"line":535,"column":4},"end":{"line":535,"column":38}},"183":{"start":{"line":535,"column":29},"end":{"line":535,"column":38}},"184":{"start":{"line":536,"column":4},"end":{"line":536,"column":39}},"185":{"start":{"line":537,"column":4},"end":{"line":537,"column":43}},"186":{"start":{"line":540,"column":2},"end":{"line":540,"column":16}},"187":{"start":{"line":549,"column":0},"end":{"line":563,"column":2}},"188":{"start":{"line":550,"column":2},"end":{"line":550,"column":21}},"189":{"start":{"line":551,"column":2},"end":{"line":553,"column":11}},"190":{"start":{"line":552,"column":4},"end":{"line":552,"column":50}},"191":{"start":{"line":555,"column":2},"end":{"line":562,"column":4}},"192":{"start":{"line":591,"column":0},"end":{"line":595,"column":2}},"193":{"start":{"line":592,"column":2},"end":{"line":592,"column":54}},"194":{"start":{"line":593,"column":2},"end":{"line":593,"column":21}},"195":{"start":{"line":594,"column":2},"end":{"line":594,"column":27}}},"branchMap":{"1":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"2":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":2},"end":{"line":151,"column":2}},{"start":{"line":151,"column":2},"end":{"line":151,"column":2}}]},"3":{"line":152,"type":"cond-expr","locations":[{"start":{"line":152,"column":44},"end":{"line":152,"column":48}},{"start":{"line":152,"column":51},"end":{"line":152,"column":60}}]},"4":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":6},"end":{"line":163,"column":6}},{"start":{"line":163,"column":6},"end":{"line":163,"column":6}}]},"5":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":2},"end":{"line":174,"column":2}},{"start":{"line":174,"column":2},"end":{"line":174,"column":2}}]},"6":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":2},"end":{"line":194,"column":2}},{"start":{"line":194,"column":2},"end":{"line":194,"column":2}}]},"7":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"8":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":2},"end":{"line":199,"column":2}},{"start":{"line":199,"column":2},"end":{"line":199,"column":2}}]},"9":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":2},"end":{"line":221,"column":2}},{"start":{"line":221,"column":2},"end":{"line":221,"column":2}}]},"10":{"line":223,"type":"cond-expr","locations":[{"start":{"line":223,"column":44},"end":{"line":223,"column":48}},{"start":{"line":223,"column":51},"end":{"line":223,"column":60}}]},"11":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":2},"end":{"line":226,"column":2}},{"start":{"line":226,"column":2},"end":{"line":226,"column":2}}]},"12":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":2},"end":{"line":237,"column":2}},{"start":{"line":237,"column":2},"end":{"line":237,"column":2}}]},"13":{"line":261,"type":"cond-expr","locations":[{"start":{"line":261,"column":44},"end":{"line":261,"column":48}},{"start":{"line":261,"column":51},"end":{"line":261,"column":60}}]},"14":{"line":266,"type":"if","locations":[{"start":{"line":266,"column":2},"end":{"line":266,"column":2}},{"start":{"line":266,"column":2},"end":{"line":266,"column":2}}]},"15":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":2},"end":{"line":280,"column":2}},{"start":{"line":280,"column":2},"end":{"line":280,"column":2}}]},"16":{"line":324,"type":"if","locations":[{"start":{"line":324,"column":2},"end":{"line":324,"column":2}},{"start":{"line":324,"column":2},"end":{"line":324,"column":2}}]},"17":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":2},"end":{"line":327,"column":2}},{"start":{"line":327,"column":2},"end":{"line":327,"column":2}}]},"18":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":6},"end":{"line":346,"column":6}},{"start":{"line":346,"column":6},"end":{"line":346,"column":6}}]},"19":{"line":379,"type":"if","locations":[{"start":{"line":379,"column":2},"end":{"line":379,"column":2}},{"start":{"line":379,"column":2},"end":{"line":379,"column":2}}]},"20":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":4},"end":{"line":385,"column":4}},{"start":{"line":385,"column":4},"end":{"line":385,"column":4}}]},"21":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":6},"end":{"line":411,"column":6}},{"start":{"line":411,"column":6},"end":{"line":411,"column":6}}]},"22":{"line":411,"type":"binary-expr","locations":[{"start":{"line":411,"column":10},"end":{"line":411,"column":16}},{"start":{"line":411,"column":20},"end":{"line":411,"column":40}}]},"23":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":14},"end":{"line":417,"column":14}},{"start":{"line":417,"column":14},"end":{"line":417,"column":14}}]},"24":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":6},"end":{"line":429,"column":6}},{"start":{"line":429,"column":6},"end":{"line":429,"column":6}}]},"25":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":8},"end":{"line":437,"column":8}},{"start":{"line":437,"column":8},"end":{"line":437,"column":8}}]},"26":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":8},"end":{"line":442,"column":8}},{"start":{"line":442,"column":8},"end":{"line":442,"column":8}}]},"27":{"line":450,"type":"if","locations":[{"start":{"line":450,"column":8},"end":{"line":450,"column":8}},{"start":{"line":450,"column":8},"end":{"line":450,"column":8}}]},"28":{"line":478,"type":"if","locations":[{"start":{"line":478,"column":4},"end":{"line":478,"column":4}},{"start":{"line":478,"column":4},"end":{"line":478,"column":4}}]},"29":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":4},"end":{"line":481,"column":4}},{"start":{"line":481,"column":4},"end":{"line":481,"column":4}}]},"30":{"line":484,"type":"if","locations":[{"start":{"line":484,"column":12},"end":{"line":484,"column":12}},{"start":{"line":484,"column":12},"end":{"line":484,"column":12}}]},"31":{"line":491,"type":"if","locations":[{"start":{"line":491,"column":12},"end":{"line":491,"column":12}},{"start":{"line":491,"column":12},"end":{"line":491,"column":12}}]},"32":{"line":513,"type":"if","locations":[{"start":{"line":513,"column":4},"end":{"line":513,"column":4}},{"start":{"line":513,"column":4},"end":{"line":513,"column":4}}]},"33":{"line":535,"type":"if","locations":[{"start":{"line":535,"column":4},"end":{"line":535,"column":4}},{"start":{"line":535,"column":4},"end":{"line":535,"column":4}}]}},"code":["/*!"," * elasticlunr.Index"," * Copyright (C) @YEAR Oliver Nightingale"," * Copyright (C) @YEAR Wei Song"," */","","/**"," * elasticlunr.Index is object that manages a search index.  It contains the indexes"," * and stores all the tokens and document lookups.  It also provides the main"," * user facing API for the library."," *"," * @constructor"," */","elasticlunr.Index = function () {","  this._fields = [];","  this._ref = 'id';","  this.pipeline = new elasticlunr.Pipeline;","  this.documentStore = new elasticlunr.DocumentStore;","  this.index = {};","  this.eventEmitter = new elasticlunr.EventEmitter;","  this._idfCache = {};","","  this.on('add', 'remove', 'update', (function () {","    this._idfCache = {};","  }).bind(this));","};","","/**"," * Bind a handler to events being emitted by the index."," *"," * The handler can be bound to many events at the same time."," *"," * @param {String} [eventName] The name(s) of events to bind the function to."," * @param {Function} fn The serialised set to load."," * @memberOf Index"," */","elasticlunr.Index.prototype.on = function () {","  var args = Array.prototype.slice.call(arguments);","  return this.eventEmitter.addListener.apply(this.eventEmitter, args);","};","","/**"," * Removes a handler from an event being emitted by the index."," *"," * @param {String} eventName The name of events to remove the function from."," * @param {Function} fn The serialised set to load."," * @memberOf Index"," */","elasticlunr.Index.prototype.off = function (name, fn) {","  return this.eventEmitter.removeListener(name, fn);","};","","/**"," * Loads a previously serialised index."," *"," * Issues a warning if the index being imported was serialised"," * by a different version of elasticlunr."," *"," * @param {Object} serialisedData The serialised set to load."," * @return {elasticlunr.Index}"," * @memberOf Index"," */","elasticlunr.Index.load = function (serialisedData) {","  if (serialisedData.version !== elasticlunr.version) {","    elasticlunr.utils.warn('version mismatch: current '","                    + elasticlunr.version + ' importing ' + serialisedData.version);","  }","","  var idx = new this;","","  idx._fields = serialisedData.fields;","  idx._ref = serialisedData.ref;","  idx.documentStore = elasticlunr.DocumentStore.load(serialisedData.documentStore);","  idx.pipeline = elasticlunr.Pipeline.load(serialisedData.pipeline);","  idx.index = {};","  for (var field in serialisedData.index) {","    idx.index[field] = elasticlunr.InvertedIndex.load(serialisedData.index[field]);","  }","","  return idx;","};","","/**"," * Adds a field to the list of fields that will be searchable within documents in the index."," *"," * Remember that inner index is build based on field, which means each field has one inverted index."," *"," * Fields should be added before any documents are added to the index, fields"," * that are added after documents are added to the index will only apply to new"," * documents added to the index."," *"," * @param {String} fieldName The name of the field within the document that should be indexed"," * @return {elasticlunr.Index}"," * @memberOf Index"," */","elasticlunr.Index.prototype.addField = function (fieldName) {","  this._fields.push(fieldName);","  this.index[fieldName] = new elasticlunr.InvertedIndex;","  return this;","};","","/**"," * Sets the property used to uniquely identify documents added to the index,"," * by default this property is 'id'."," *"," * This should only be changed before adding documents to the index, changing"," * the ref property without resetting the index can lead to unexpected results."," *"," * @param {String} refName The property to use to uniquely identify the"," * documents in the index."," * @param {Boolean} emitEvent Whether to emit add events, defaults to true"," * @return {elasticlunr.Index}"," * @memberOf Index"," */","elasticlunr.Index.prototype.setRef = function (refName) {","  this._ref = refName;","  return this;","};","","/**"," *"," * Set if the JSON format original documents are save into elasticlunr.DocumentStore"," *"," * Defaultly save all the original JSON documents."," *"," * @param {Boolean} save Whether to save the original JSON documents."," * @return {elasticlunr.Index}"," * @memberOf Index"," */","elasticlunr.Index.prototype.saveDocument = function (save) {","  this.documentStore = new elasticlunr.DocumentStore(save);","  return this;","};","","/**"," * Add a JSON format document to the index."," *"," * This is the way new documents enter the index, this function will run the"," * fields from the document through the index's pipeline and then add it to"," * the index, it will then show up in search results."," *"," * An 'add' event is emitted with the document that has been added and the index"," * the document has been added to. This event can be silenced by passing false"," * as the second argument to add."," *"," * @param {Object} doc The JSON format document to add to the index."," * @param {Boolean} emitEvent Whether or not to emit events, default true."," * @memberOf Index"," */","elasticlunr.Index.prototype.addDoc = function (doc, emitEvent) {","  if (!doc) return;","  var emitEvent = emitEvent === undefined ? true : emitEvent;","","  var docRef = doc[this._ref];","","  this.documentStore.addDoc(docRef, doc);","  this._fields.forEach(function (field) {","    var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));","    this.documentStore.addFieldLength(docRef, field, fieldTokens.length);","","    var tokenCount = {};","    fieldTokens.forEach(function (token) {","      if (token in tokenCount) tokenCount[token] += 1;","      else tokenCount[token] = 1;","    }, this);","","    for (var token in tokenCount) {","      var termFrequency = tokenCount[token];","      termFrequency = Math.sqrt(termFrequency);","      this.index[field].addToken(token, { ref: docRef, tf: termFrequency });","    }","  }, this);","","  if (emitEvent) this.eventEmitter.emit('add', doc, this);","};","","/**"," * Removes a document from the index by doc ref."," *"," * To make sure documents no longer show up in search results they can be"," * removed from the index using this method."," *"," * A 'remove' event is emitted with the document that has been removed and the index"," * the document has been removed from. This event can be silenced by passing false"," * as the second argument to remove."," *"," * If user setting DocumentStore not storing the documents, then remove doc by docRef is not allowed."," *"," * @param {String|Integer} docRef The document ref to remove from the index."," * @param {Boolean} emitEvent Whether to emit remove events, defaults to true"," * @memberOf Index"," */","elasticlunr.Index.prototype.removeDocByRef = function (docRef, emitEvent) {","  if (!docRef) return;","  if (this.documentStore.isDocStored() === false) {","    return;","  }","","  if (!this.documentStore.hasDoc(docRef)) return;","  var doc = this.documentStore.getDoc(docRef);","  this.removeDoc(doc, false);","};","","/**"," * Removes a document from the index."," * This remove operation could work even the original doc is not store in the DocumentStore."," *"," * To make sure documents no longer show up in search results they can be"," * removed from the index using this method."," *"," * A 'remove' event is emitted with the document that has been removed and the index"," * the document has been removed from. This event can be silenced by passing false"," * as the second argument to remove."," *"," *"," * @param {Object} doc The document ref to remove from the index."," * @param {Boolean} emitEvent Whether to emit remove events, defaults to true"," * @memberOf Index"," */","elasticlunr.Index.prototype.removeDoc = function (doc, emitEvent) {","  if (!doc) return;","","  var emitEvent = emitEvent === undefined ? true : emitEvent;","","  var docRef = doc[this._ref];","  if (!this.documentStore.hasDoc(docRef)) return;","","  this.documentStore.removeDoc(docRef);","","  this._fields.forEach(function (field) {","    var fieldTokens = this.pipeline.run(elasticlunr.tokenizer(doc[field]));","    fieldTokens.forEach(function (token) {","      this.index[field].removeToken(token, docRef);","    }, this);","  }, this);","","  if (emitEvent) this.eventEmitter.emit('remove', doc, this);","};","","/**"," * Updates a document in the index."," *"," * When a document contained within the index gets updated, fields changed,"," * added or removed, to make sure it correctly matched against search queries,"," * it should be updated in the index."," *"," * This method is just a wrapper around `remove` and `add`"," *"," * An 'update' event is emitted with the document that has been updated and the index."," * This event can be silenced by passing false as the second argument to update. Only"," * an update event will be fired, the 'add' and 'remove' events of the underlying calls"," * are silenced."," *"," * @param {Object} doc The document to update in the index."," * @param {Boolean} emitEvent Whether to emit update events, defaults to true"," * @see Index.prototype.remove"," * @see Index.prototype.add"," * @memberOf Index"," */","elasticlunr.Index.prototype.updateDoc = function (doc, emitEvent) {","  var emitEvent = emitEvent === undefined ? true : emitEvent;","","  this.removeDocByRef(doc[this._ref], false);","  this.addDoc(doc, false);","","  if (emitEvent) this.eventEmitter.emit('update', doc, this);","};","","/**"," * Calculates the inverse document frequency for a token within the index of a field."," *"," * @param {String} token The token to calculate the idf of."," * @param {String} field The field to compute idf."," * @see Index.prototype.idf"," * @private"," * @memberOf Index"," */","elasticlunr.Index.prototype.idf = function (term, field) {","  var cacheKey = \"@\" + field + '/' + term;","  if (Object.prototype.hasOwnProperty.call(this._idfCache, cacheKey)) return this._idfCache[cacheKey];","","  var df = this.index[field].getDocFreq(term);","  var idf = 1 + Math.log(this.documentStore.length / (df + 1));","  this._idfCache[cacheKey] = idf;","","  return idf;","};","","/**"," * get fields of current index instance"," *"," * @return {Array}"," */","elasticlunr.Index.prototype.getFields = function () {","  return this._fields.slice();","};","","/**"," * Searches the index using the passed query."," * Queries should be a string, multiple words are allowed."," *"," * If config is null, will search all fields defaultly, and lead to OR based query."," * If config is specified, will search specified with query time boosting."," *"," * All query tokens are passed through the same pipeline that document tokens"," * are passed through, so any language processing involved will be run on every"," * query term."," *"," * Each query term is expanded, so that the term 'he' might be expanded to"," * 'hello' and 'help' if those terms were already included in the index."," *"," * Matching documents are returned as an array of objects, each object contains"," * the matching document ref, as set for this index, and the similarity score"," * for this document against the query."," *"," * @param {String} query The query to search the index with."," * @param {JSON} userConfig The user query config, JSON format."," * @return {Object}"," * @see Index.prototype.idf"," * @see Index.prototype.documentVector"," * @memberOf Index"," */","elasticlunr.Index.prototype.search = function (query, userConfig) {","  if (!query) return [];","","  var configStr = null;","  if (userConfig != null) {","    configStr = JSON.stringify(userConfig);","  }","","  var config = new elasticlunr.Configuration(configStr, this.getFields()).get();","","  var queryTokens = this.pipeline.run(elasticlunr.tokenizer(query));","","  var queryResults = {};","","  for (var field in config) {","    var fieldSearchResults = this.fieldSearch(queryTokens, field, config);","    var fieldBoost = config[field].boost;","","    for (var docRef in fieldSearchResults) {","      fieldSearchResults[docRef] = fieldSearchResults[docRef] * fieldBoost;","    }","","    for (var docRef in fieldSearchResults) {","      if (docRef in queryResults) {","        queryResults[docRef] += fieldSearchResults[docRef];","      } else {","        queryResults[docRef] = fieldSearchResults[docRef];","      }","    }","  }","","  var results = [];","  for (var docRef in queryResults) {","    results.push({ref: docRef, score: queryResults[docRef]});","  }","","  results.sort(function (a, b) { return b.score - a.score; });","  return results;","};","","/**"," * search queryTokens in specified field."," *"," * @param {Array} queryTokens The query tokens to query in this field."," * @param {String} field Field to query in."," * @param {elasticlunr.Configuration} config The user query config, JSON format."," * @return {Object}"," */","elasticlunr.Index.prototype.fieldSearch = function (queryTokens, fieldName, config) {","  var booleanType = config[fieldName].bool;","  var expand = config[fieldName].expand;","  var boost = config[fieldName].boost;","  var scores = null;","  var docTokens = {};","","  // Do nothing if the boost is 0","  if (boost === 0) {","    return;","  }","","  queryTokens.forEach(function (token) {","    var tokens = [token];","    if (expand == true) {","      tokens = this.index[fieldName].expandToken(token);","    }","    // Consider every query token in turn. If expanded, each query token","    // corresponds to a set of tokens, which is all tokens in the ","    // index matching the pattern queryToken* .","    // For the set of tokens corresponding to a query token, find and score","    // all matching documents. Store those scores in queryTokenScores, ","    // keyed by docRef.","    // Then, depending on the value of booleanType, combine the scores","    // for this query token with previous scores.  If booleanType is OR,","    // then merge the scores by summing into the accumulated total, adding","    // new document scores are required (effectively a union operator). ","    // If booleanType is AND, accumulate scores only if the document ","    // has previously been scored by another query token (an intersection","    // operation0. ","    // Furthermore, since when booleanType is AND, additional ","    // query tokens can't add new documents to the result set, use the","    // current document set to limit the processing of each new query ","    // token for efficiency (i.e., incremental intersection).","    ","    var queryTokenScores = {};","    tokens.forEach(function (key) {","      var docs = this.index[fieldName].getDocs(key);","      var idf = this.idf(key, fieldName);","      ","      if (scores && booleanType == 'AND') {","          // special case, we can rule out documents that have been","          // already been filtered out because they weren't scored","          // by previous query token passes.","          var filteredDocs = {};","          for (var docRef in scores) {","              if (docRef in docs) {","                  filteredDocs[docRef] = docs[docRef];","              }","          }","          docs = filteredDocs;","      }","      // only record appeared token for retrieved documents for the","      // original token, not for expaned token.","      // beause for doing coordNorm for a retrieved document, coordNorm only care how many","      // query token appear in that document.","      // so expanded token should not be added into docTokens, if added, this will pollute the","      // coordNorm","      if (key == token) {","        this.fieldSearchStats(docTokens, key, docs);","      }","","      for (var docRef in docs) {","        var tf = this.index[fieldName].getTermFrequency(key, docRef);","        var fieldLength = this.documentStore.getFieldLength(docRef, fieldName);","        var fieldLengthNorm = 1;","        if (fieldLength != 0) {","          fieldLengthNorm = 1 / Math.sqrt(fieldLength);","        }","","        var penality = 1;","        if (key != token) {","          // currently I'm not sure if this penality is enough,","          // need to do verification","          penality = (1 - (key.length - token.length) / key.length) * 0.15;","        }","","        var score = tf * idf * fieldLengthNorm * penality;","","        if (docRef in queryTokenScores) {","          queryTokenScores[docRef] += score;","        } else {","          queryTokenScores[docRef] = score;","        }","      }","    }, this);","    ","    scores = this.mergeScores(scores, queryTokenScores, booleanType);","  }, this);","","  scores = this.coordNorm(scores, docTokens, queryTokens.length);","  return scores;","};","","/**"," * Merge the scores from one set of tokens into an accumulated score table."," * Exact operation depends on the op parameter. If op is 'AND', then only the"," * intersection of the two score lists is retained. Otherwise, the union of"," * the two score lists is returned. For internal use only."," *"," * @param {Object} bool accumulated scores. Should be null on first call."," * @param {String} scores new scores to merge into accumScores."," * @param {Object} op merge operation (should be 'AND' or 'OR')."," *"," */","","elasticlunr.Index.prototype.mergeScores = function (accumScores, scores, op) {","    if (!accumScores) {","        return scores; ","    }","    if (op == 'AND') {","        var intersection = {};","        for (var docRef in scores) {","            if (docRef in accumScores) {","                intersection[docRef] = accumScores[docRef] + scores[docRef];","            }","        }","        return intersection;","    } else {","        for (var docRef in scores) {","            if (docRef in accumScores) {","                accumScores[docRef] += scores[docRef];","            } else {","                accumScores[docRef] = scores[docRef];","            }","        }","        return accumScores;","    }","};","","","/**"," * Record the occuring query token of retrieved doc specified by doc field."," * Only for inner user."," *"," * @param {Object} docTokens a data structure stores which token appears in the retrieved doc."," * @param {String} token query token"," * @param {Object} docs the retrieved documents of the query token"," *"," */","elasticlunr.Index.prototype.fieldSearchStats = function (docTokens, token, docs) {","  for (var doc in docs) {","    if (doc in docTokens) {","      docTokens[doc].push(token);","    } else {","      docTokens[doc] = [token];","    }","  }","};","","/**"," * coord norm the score of a doc."," * if a doc contain more query tokens, then the score will larger than the doc"," * contains less query tokens."," *"," * only for inner use."," *"," * @param {Object} results first results"," * @param {Object} docs field search results of a token"," * @param {Integer} n query token number"," * @return {Object}"," */","elasticlunr.Index.prototype.coordNorm = function (scores, docTokens, n) {","  for (var doc in scores) {","    if (!(doc in docTokens)) continue;","    var tokens = docTokens[doc].length;","    scores[doc] = scores[doc] * tokens / n;","  }","","  return scores;","};","","/**"," * Returns a representation of the index ready for serialisation."," *"," * @return {Object}"," * @memberOf Index"," */","elasticlunr.Index.prototype.toJSON = function () {","  var indexJson = {};","  this._fields.forEach(function (field) {","    indexJson[field] = this.index[field].toJSON();","  }, this);","","  return {","    version: elasticlunr.version,","    fields: this._fields,","    ref: this._ref,","    documentStore: this.documentStore.toJSON(),","    index: indexJson,","    pipeline: this.pipeline.toJSON()","  };","};","","/**"," * Applies a plugin to the current index."," *"," * A plugin is a function that is called with the index as its context."," * Plugins can be used to customise or extend the behaviour the index"," * in some way. A plugin is just a function, that encapsulated the custom"," * behaviour that should be applied to the index."," *"," * The plugin function will be called with the index as its argument, additional"," * arguments can also be passed when calling use. The function will be called"," * with the index as its context."," *"," * Example:"," *"," *     var myPlugin = function (idx, arg1, arg2) {"," *       // `this` is the index to be extended"," *       // apply any extensions etc here."," *     }"," *"," *     var idx = elasticlunr(function () {"," *       this.use(myPlugin, 'arg1', 'arg2')"," *     })"," *"," * @param {Function} plugin The plugin to apply."," * @memberOf Index"," */","elasticlunr.Index.prototype.use = function (plugin) {","  var args = Array.prototype.slice.call(arguments, 1);","  args.unshift(this);","  plugin.apply(this, args);","};",""],"l":{"14":2,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"23":0,"24":0,"37":0,"38":0,"39":0,"49":0,"50":0,"63":0,"64":0,"65":0,"69":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"80":0,"96":0,"97":0,"98":0,"99":0,"115":0,"116":0,"117":0,"130":0,"131":0,"132":0,"150":0,"151":0,"152":0,"154":0,"156":0,"157":0,"158":0,"159":0,"161":0,"162":0,"163":0,"164":0,"167":0,"168":0,"169":0,"170":0,"174":0,"193":0,"194":0,"195":0,"196":0,"199":0,"200":0,"201":0,"220":0,"221":0,"223":0,"225":0,"226":0,"228":0,"230":0,"231":0,"232":0,"233":0,"237":0,"260":0,"261":0,"263":0,"264":0,"266":0,"278":0,"279":0,"280":0,"282":0,"283":0,"284":0,"286":0,"294":0,"295":0,"323":0,"324":0,"326":0,"327":0,"328":0,"331":0,"333":0,"335":0,"337":0,"338":0,"339":0,"341":0,"342":0,"345":0,"346":0,"347":0,"349":0,"354":0,"355":0,"356":0,"359":0,"360":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"379":0,"380":0,"383":0,"384":0,"385":0,"386":0,"406":0,"407":0,"408":0,"409":0,"411":0,"415":0,"416":0,"417":0,"418":0,"421":0,"429":0,"430":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"441":0,"442":0,"445":0,"448":0,"450":0,"451":0,"453":0,"458":0,"461":0,"462":0,"477":0,"478":0,"479":0,"481":0,"482":0,"483":0,"484":0,"485":0,"488":0,"490":0,"491":0,"492":0,"494":0,"497":0,"511":0,"512":0,"513":0,"514":0,"516":0,"533":0,"534":0,"535":0,"536":0,"537":0,"540":0,"549":0,"550":0,"551":0,"552":0,"555":0,"591":0,"592":0,"593":0,"594":0}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/inverted_index.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/inverted_index.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"fnMap":{"1":{"name":"(anonymous_1)","line":13,"loc":{"start":{"line":13,"column":28},"end":{"line":13,"column":40}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":33},"end":{"line":23,"column":59}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":47},"end":{"line":48,"column":81}}},"4":{"name":"(anonymous_4)","line":79,"loc":{"start":{"line":79,"column":47},"end":{"line":79,"column":64}}},"5":{"name":"(anonymous_5)","line":102,"loc":{"start":{"line":102,"column":46},"end":{"line":102,"column":63}}},"6":{"name":"(anonymous_6)","line":124,"loc":{"start":{"line":124,"column":46},"end":{"line":124,"column":63}}},"7":{"name":"(anonymous_7)","line":143,"loc":{"start":{"line":143,"column":55},"end":{"line":143,"column":80}}},"8":{"name":"(anonymous_8)","line":166,"loc":{"start":{"line":166,"column":49},"end":{"line":166,"column":66}}},"9":{"name":"(anonymous_9)","line":184,"loc":{"start":{"line":184,"column":50},"end":{"line":184,"column":72}}},"10":{"name":"(anonymous_10)","line":204,"loc":{"start":{"line":204,"column":50},"end":{"line":204,"column":79}}},"11":{"name":"(anonymous_11)","line":230,"loc":{"start":{"line":230,"column":45},"end":{"line":230,"column":57}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":15,"column":2}},"2":{"start":{"line":14,"column":2},"end":{"line":14,"column":34}},"3":{"start":{"line":23,"column":0},"end":{"line":28,"column":2}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":21}},"5":{"start":{"line":25,"column":2},"end":{"line":25,"column":33}},"6":{"start":{"line":27,"column":2},"end":{"line":27,"column":13}},"7":{"start":{"line":48,"column":0},"end":{"line":69,"column":2}},"8":{"start":{"line":49,"column":2},"end":{"line":50,"column":14}},"9":{"start":{"line":52,"column":2},"end":{"line":58,"column":3}},"10":{"start":{"line":53,"column":4},"end":{"line":53,"column":25}},"11":{"start":{"line":55,"column":4},"end":{"line":55,"column":54}},"12":{"start":{"line":55,"column":24},"end":{"line":55,"column":54}},"13":{"start":{"line":56,"column":4},"end":{"line":56,"column":13}},"14":{"start":{"line":57,"column":4},"end":{"line":57,"column":21}},"15":{"start":{"line":60,"column":2},"end":{"line":60,"column":29}},"16":{"start":{"line":61,"column":2},"end":{"line":68,"column":3}},"17":{"start":{"line":63,"column":4},"end":{"line":63,"column":43}},"18":{"start":{"line":64,"column":4},"end":{"line":64,"column":17}},"19":{"start":{"line":67,"column":4},"end":{"line":67,"column":43}},"20":{"start":{"line":79,"column":0},"end":{"line":90,"column":2}},"21":{"start":{"line":80,"column":2},"end":{"line":80,"column":27}},"22":{"start":{"line":80,"column":14},"end":{"line":80,"column":27}},"23":{"start":{"line":82,"column":2},"end":{"line":82,"column":23}},"24":{"start":{"line":84,"column":2},"end":{"line":87,"column":3}},"25":{"start":{"line":85,"column":4},"end":{"line":85,"column":38}},"26":{"start":{"line":85,"column":25},"end":{"line":85,"column":38}},"27":{"start":{"line":86,"column":4},"end":{"line":86,"column":26}},"28":{"start":{"line":89,"column":2},"end":{"line":89,"column":14}},"29":{"start":{"line":102,"column":0},"end":{"line":113,"column":2}},"30":{"start":{"line":103,"column":2},"end":{"line":103,"column":26}},"31":{"start":{"line":103,"column":14},"end":{"line":103,"column":26}},"32":{"start":{"line":105,"column":2},"end":{"line":105,"column":23}},"33":{"start":{"line":107,"column":2},"end":{"line":110,"column":3}},"34":{"start":{"line":108,"column":4},"end":{"line":108,"column":37}},"35":{"start":{"line":108,"column":25},"end":{"line":108,"column":37}},"36":{"start":{"line":109,"column":4},"end":{"line":109,"column":26}},"37":{"start":{"line":112,"column":2},"end":{"line":112,"column":14}},"38":{"start":{"line":124,"column":0},"end":{"line":131,"column":2}},"39":{"start":{"line":125,"column":2},"end":{"line":125,"column":33}},"40":{"start":{"line":126,"column":2},"end":{"line":128,"column":3}},"41":{"start":{"line":127,"column":4},"end":{"line":127,"column":14}},"42":{"start":{"line":130,"column":2},"end":{"line":130,"column":19}},"43":{"start":{"line":143,"column":0},"end":{"line":155,"column":2}},"44":{"start":{"line":144,"column":2},"end":{"line":144,"column":33}},"45":{"start":{"line":146,"column":2},"end":{"line":148,"column":3}},"46":{"start":{"line":147,"column":4},"end":{"line":147,"column":13}},"47":{"start":{"line":150,"column":2},"end":{"line":152,"column":3}},"48":{"start":{"line":151,"column":4},"end":{"line":151,"column":13}},"49":{"start":{"line":154,"column":2},"end":{"line":154,"column":30}},"50":{"start":{"line":166,"column":0},"end":{"line":174,"column":2}},"51":{"start":{"line":167,"column":2},"end":{"line":167,"column":33}},"52":{"start":{"line":169,"column":2},"end":{"line":171,"column":3}},"53":{"start":{"line":170,"column":4},"end":{"line":170,"column":13}},"54":{"start":{"line":173,"column":2},"end":{"line":173,"column":17}},"55":{"start":{"line":184,"column":0},"end":{"line":194,"column":2}},"56":{"start":{"line":185,"column":2},"end":{"line":185,"column":21}},"57":{"start":{"line":185,"column":14},"end":{"line":185,"column":21}},"58":{"start":{"line":186,"column":2},"end":{"line":186,"column":33}},"59":{"start":{"line":188,"column":2},"end":{"line":188,"column":27}},"60":{"start":{"line":188,"column":20},"end":{"line":188,"column":27}},"61":{"start":{"line":190,"column":2},"end":{"line":193,"column":3}},"62":{"start":{"line":191,"column":4},"end":{"line":191,"column":26}},"63":{"start":{"line":192,"column":4},"end":{"line":192,"column":17}},"64":{"start":{"line":204,"column":0},"end":{"line":222,"column":2}},"65":{"start":{"line":205,"column":2},"end":{"line":205,"column":46}},"66":{"start":{"line":205,"column":36},"end":{"line":205,"column":46}},"67":{"start":{"line":206,"column":2},"end":{"line":206,"column":24}},"68":{"start":{"line":208,"column":2},"end":{"line":211,"column":3}},"69":{"start":{"line":209,"column":4},"end":{"line":209,"column":31}},"70":{"start":{"line":210,"column":4},"end":{"line":210,"column":34}},"71":{"start":{"line":210,"column":22},"end":{"line":210,"column":34}},"72":{"start":{"line":213,"column":2},"end":{"line":213,"column":36}},"73":{"start":{"line":213,"column":19},"end":{"line":213,"column":36}},"74":{"start":{"line":215,"column":2},"end":{"line":219,"column":3}},"75":{"start":{"line":216,"column":4},"end":{"line":216,"column":33}},"76":{"start":{"line":216,"column":24},"end":{"line":216,"column":33}},"77":{"start":{"line":217,"column":4},"end":{"line":217,"column":31}},"78":{"start":{"line":217,"column":22},"end":{"line":217,"column":31}},"79":{"start":{"line":218,"column":4},"end":{"line":218,"column":51}},"80":{"start":{"line":221,"column":2},"end":{"line":221,"column":14}},"81":{"start":{"line":230,"column":0},"end":{"line":234,"column":2}},"82":{"start":{"line":231,"column":2},"end":{"line":233,"column":4}}},"branchMap":{"1":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":13},"end":{"line":49,"column":17}},{"start":{"line":49,"column":21},"end":{"line":49,"column":30}}]},"2":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"3":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"4":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"5":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":85,"column":4}},{"start":{"line":85,"column":4},"end":{"line":85,"column":4}}]},"6":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":2},"end":{"line":103,"column":2}},{"start":{"line":103,"column":2},"end":{"line":103,"column":2}}]},"7":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"8":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"9":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":2},"end":{"line":146,"column":2}},{"start":{"line":146,"column":2},"end":{"line":146,"column":2}}]},"10":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":2},"end":{"line":150,"column":2}},{"start":{"line":150,"column":2},"end":{"line":150,"column":2}}]},"11":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":2},"end":{"line":169,"column":2}},{"start":{"line":169,"column":2},"end":{"line":169,"column":2}}]},"12":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"13":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":2},"end":{"line":188,"column":2}},{"start":{"line":188,"column":2},"end":{"line":188,"column":2}}]},"14":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":2},"end":{"line":190,"column":2}},{"start":{"line":190,"column":2},"end":{"line":190,"column":2}}]},"15":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"16":{"line":205,"type":"binary-expr","locations":[{"start":{"line":205,"column":6},"end":{"line":205,"column":19}},{"start":{"line":205,"column":23},"end":{"line":205,"column":34}}]},"17":{"line":206,"type":"binary-expr","locations":[{"start":{"line":206,"column":13},"end":{"line":206,"column":17}},{"start":{"line":206,"column":21},"end":{"line":206,"column":23}}]},"18":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":2},"end":{"line":208,"column":2}},{"start":{"line":208,"column":2},"end":{"line":208,"column":2}}]},"19":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":4},"end":{"line":210,"column":4}},{"start":{"line":210,"column":4},"end":{"line":210,"column":4}}]},"20":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":2},"end":{"line":213,"column":2}},{"start":{"line":213,"column":2},"end":{"line":213,"column":2}}]},"21":{"line":216,"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":216,"column":4}},{"start":{"line":216,"column":4},"end":{"line":216,"column":4}}]},"22":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":4},"end":{"line":217,"column":4}},{"start":{"line":217,"column":4},"end":{"line":217,"column":4}}]}},"code":["/*!"," * elasticlunr.InvertedIndex"," * Copyright (C) @YEAR Wei Song"," * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt"," */","","/**"," * elasticlunr.InvertedIndex is used for efficiently storing and"," * lookup of documents that contain a given token."," *"," * @constructor"," */","elasticlunr.InvertedIndex = function () {","  this.root = { docs: {}, df: 0 };","};","","/**"," * Loads a previously serialised inverted index."," *"," * @param {Object} serialisedData The serialised inverted index to load."," * @return {elasticlunr.InvertedIndex}"," */","elasticlunr.InvertedIndex.load = function (serialisedData) {","  var idx = new this;","  idx.root = serialisedData.root;","","  return idx;","};","","/**"," * Adds a {token: tokenInfo} pair to the inverted index."," * If the token already exist, then update the tokenInfo."," *"," * tokenInfo format: { ref: 1, tf: 2}"," * tokenInfor should contains the document's ref and the tf(token frequency) of that token in"," * the document."," *"," * By default this function starts at the root of the current inverted index, however"," * it can start at any node of the inverted index if required."," *"," * @param {String} token "," * @param {Object} tokenInfo format: { ref: 1, tf: 2}"," * @param {Object} root An optional node at which to start looking for the"," * correct place to enter the doc, by default the root of this elasticlunr.InvertedIndex"," * is used."," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.addToken = function (token, tokenInfo, root) {","  var root = root || this.root,","      idx = 0;","","  while (idx <= token.length - 1) {","    var key = token[idx];","","    if (!(key in root)) root[key] = {docs: {}, df: 0};","    idx += 1;","    root = root[key];","  }","","  var docRef = tokenInfo.ref;","  if (!root.docs[docRef]) {","    // if this doc not exist, then add this doc","    root.docs[docRef] = {tf: tokenInfo.tf};","    root.df += 1;","  } else {","    // if this doc already exist, then update tokenInfo","    root.docs[docRef] = {tf: tokenInfo.tf};","  }","};","","/**"," * Checks whether a token is in this elasticlunr.InvertedIndex."," * "," *"," * @param {String} token The token to be checked"," * @return {Boolean}"," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.hasToken = function (token) {","  if (!token) return false;","","  var node = this.root;","","  for (var i = 0; i < token.length; i++) {","    if (!node[token[i]]) return false;","    node = node[token[i]];","  }","","  return true;","};","","/**"," * Retrieve a node from the inverted index for a given token."," * If token not found in this InvertedIndex, return null."," * "," *"," * @param {String} token The token to get the node for."," * @return {Object}"," * @see InvertedIndex.prototype.get"," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.getNode = function (token) {","  if (!token) return null;","","  var node = this.root;","","  for (var i = 0; i < token.length; i++) {","    if (!node[token[i]]) return null;","    node = node[token[i]];","  }","","  return node;","};","","/**"," * Retrieve the documents of a given token."," * If token not found, return {}."," *"," *"," * @param {String} token The token to get the documents for."," * @return {Object}"," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.getDocs = function (token) {","  var node = this.getNode(token);","  if (node == null) {","    return {};","  }","","  return node.docs;","};","","/**"," * Retrieve term frequency of given token in given docRef."," * If token or docRef not found, return 0."," *"," *"," * @param {String} token The token to get the documents for."," * @param {String|Integer} docRef"," * @return {Integer}"," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.getTermFrequency = function (token, docRef) {","  var node = this.getNode(token);","","  if (node == null) {","    return 0;","  }","","  if (!(docRef in node.docs)) {","    return 0;","  }","","  return node.docs[docRef].tf;","};","","/**"," * Retrieve the document frequency of given token."," * If token not found, return 0."," *"," *"," * @param {String} token The token to get the documents for."," * @return {Object}"," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.getDocFreq = function (token) {","  var node = this.getNode(token);","","  if (node == null) {","    return 0;","  }","","  return node.df;","};","","/**"," * Remove the document identified by document's ref from the token in the inverted index."," *"," *"," * @param {String} token Remove the document from which token."," * @param {String} ref The ref of the document to remove from given token."," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.removeToken = function (token, ref) {","  if (!token) return;","  var node = this.getNode(token);","","  if (node == null) return;","","  if (ref in node.docs) {","    delete node.docs[ref];","    node.df -= 1;","  }","};","","/**"," * Find all the possible suffixes of given token using tokens currently in the inverted index."," * If token not found, return empty Array."," *"," * @param {String} token The token to expand."," * @return {Array}"," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.expandToken = function (token, memo, root) {","  if (token == null || token == '') return [];","  var memo = memo || [];","","  if (root == void 0) {","    root = this.getNode(token);","    if (root == null) return memo;","  }","","  if (root.df > 0) memo.push(token);","","  for (var key in root) {","    if (key === 'docs') continue;","    if (key === 'df') continue;","    this.expandToken(token + key, memo, root[key]);","  }","","  return memo;","};","","/**"," * Returns a representation of the inverted index ready for serialisation."," *"," * @return {Object}"," * @memberOf InvertedIndex"," */","elasticlunr.InvertedIndex.prototype.toJSON = function () {","  return {","    root: this.root","  };","};","",""],"l":{"13":2,"14":0,"23":0,"24":0,"25":0,"27":0,"48":0,"49":0,"52":0,"53":0,"55":0,"56":0,"57":0,"60":0,"61":0,"63":0,"64":0,"67":0,"79":0,"80":0,"82":0,"84":0,"85":0,"86":0,"89":0,"102":0,"103":0,"105":0,"107":0,"108":0,"109":0,"112":0,"124":0,"125":0,"126":0,"127":0,"130":0,"143":0,"144":0,"146":0,"147":0,"150":0,"151":0,"154":0,"166":0,"167":0,"169":0,"170":0,"173":0,"184":0,"185":0,"186":0,"188":0,"190":0,"191":0,"192":0,"204":0,"205":0,"206":0,"208":0,"209":0,"210":0,"213":0,"215":0,"216":0,"217":0,"218":0,"221":0,"230":0,"231":0}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/pipeline.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/pipeline.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"(anonymous_1)","line":33,"loc":{"start":{"line":33,"column":23},"end":{"line":33,"column":35}}},"2":{"name":"(anonymous_2)","line":52,"loc":{"start":{"line":52,"column":40},"end":{"line":52,"column":61}}},"3":{"name":"(anonymous_3)","line":68,"loc":{"start":{"line":68,"column":45},"end":{"line":68,"column":62}}},"4":{"name":"(anonymous_4)","line":83,"loc":{"start":{"line":83,"column":51},"end":{"line":83,"column":65}}},"5":{"name":"(anonymous_5)","line":102,"loc":{"start":{"line":102,"column":28},"end":{"line":102,"column":50}}},"6":{"name":"(anonymous_6)","line":105,"loc":{"start":{"line":105,"column":21},"end":{"line":105,"column":39}}},"7":{"name":"(anonymous_7)","line":126,"loc":{"start":{"line":126,"column":37},"end":{"line":126,"column":49}}},"8":{"name":"(anonymous_8)","line":129,"loc":{"start":{"line":129,"column":14},"end":{"line":129,"column":28}}},"9":{"name":"(anonymous_9)","line":146,"loc":{"start":{"line":146,"column":39},"end":{"line":146,"column":68}}},"10":{"name":"(anonymous_10)","line":168,"loc":{"start":{"line":168,"column":40},"end":{"line":168,"column":69}}},"11":{"name":"(anonymous_11)","line":185,"loc":{"start":{"line":185,"column":40},"end":{"line":185,"column":54}}},"12":{"name":"(anonymous_12)","line":202,"loc":{"start":{"line":202,"column":37},"end":{"line":202,"column":55}}},"13":{"name":"(anonymous_13)","line":226,"loc":{"start":{"line":226,"column":39},"end":{"line":226,"column":51}}},"14":{"name":"(anonymous_14)","line":235,"loc":{"start":{"line":235,"column":38},"end":{"line":235,"column":50}}},"15":{"name":"(anonymous_15)","line":250,"loc":{"start":{"line":250,"column":40},"end":{"line":250,"column":52}}},"16":{"name":"(anonymous_16)","line":251,"loc":{"start":{"line":251,"column":25},"end":{"line":251,"column":39}}}},"statementMap":{"1":{"start":{"line":33,"column":0},"end":{"line":35,"column":2}},"2":{"start":{"line":34,"column":2},"end":{"line":34,"column":19}},"3":{"start":{"line":37,"column":0},"end":{"line":37,"column":46}},"4":{"start":{"line":52,"column":0},"end":{"line":59,"column":2}},"5":{"start":{"line":53,"column":2},"end":{"line":55,"column":3}},"6":{"start":{"line":54,"column":4},"end":{"line":54,"column":81}},"7":{"start":{"line":57,"column":2},"end":{"line":57,"column":19}},"8":{"start":{"line":58,"column":2},"end":{"line":58,"column":55}},"9":{"start":{"line":68,"column":0},"end":{"line":74,"column":2}},"10":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"11":{"start":{"line":70,"column":4},"end":{"line":70,"column":16}},"12":{"start":{"line":73,"column":2},"end":{"line":73,"column":57}},"13":{"start":{"line":83,"column":0},"end":{"line":89,"column":2}},"14":{"start":{"line":84,"column":2},"end":{"line":84,"column":72}},"15":{"start":{"line":86,"column":2},"end":{"line":88,"column":3}},"16":{"start":{"line":87,"column":4},"end":{"line":87,"column":130}},"17":{"start":{"line":102,"column":0},"end":{"line":116,"column":2}},"18":{"start":{"line":103,"column":2},"end":{"line":103,"column":42}},"19":{"start":{"line":105,"column":2},"end":{"line":113,"column":5}},"20":{"start":{"line":106,"column":4},"end":{"line":106,"column":64}},"21":{"start":{"line":108,"column":4},"end":{"line":112,"column":5}},"22":{"start":{"line":109,"column":6},"end":{"line":109,"column":23}},"23":{"start":{"line":111,"column":6},"end":{"line":111,"column":71}},"24":{"start":{"line":115,"column":2},"end":{"line":115,"column":18}},"25":{"start":{"line":126,"column":0},"end":{"line":133,"column":2}},"26":{"start":{"line":127,"column":2},"end":{"line":127,"column":50}},"27":{"start":{"line":129,"column":2},"end":{"line":132,"column":11}},"28":{"start":{"line":130,"column":4},"end":{"line":130,"column":57}},"29":{"start":{"line":131,"column":4},"end":{"line":131,"column":25}},"30":{"start":{"line":146,"column":0},"end":{"line":155,"column":2}},"31":{"start":{"line":147,"column":2},"end":{"line":147,"column":58}},"32":{"start":{"line":149,"column":2},"end":{"line":149,"column":44}},"33":{"start":{"line":150,"column":2},"end":{"line":152,"column":3}},"34":{"start":{"line":151,"column":4},"end":{"line":151,"column":46}},"35":{"start":{"line":154,"column":2},"end":{"line":154,"column":40}},"36":{"start":{"line":168,"column":0},"end":{"line":177,"column":2}},"37":{"start":{"line":169,"column":2},"end":{"line":169,"column":58}},"38":{"start":{"line":171,"column":2},"end":{"line":171,"column":44}},"39":{"start":{"line":172,"column":2},"end":{"line":174,"column":3}},"40":{"start":{"line":173,"column":4},"end":{"line":173,"column":46}},"41":{"start":{"line":176,"column":2},"end":{"line":176,"column":36}},"42":{"start":{"line":185,"column":0},"end":{"line":192,"column":2}},"43":{"start":{"line":186,"column":2},"end":{"line":186,"column":36}},"44":{"start":{"line":187,"column":2},"end":{"line":189,"column":3}},"45":{"start":{"line":188,"column":4},"end":{"line":188,"column":11}},"46":{"start":{"line":191,"column":2},"end":{"line":191,"column":29}},"47":{"start":{"line":202,"column":0},"end":{"line":219,"column":2}},"48":{"start":{"line":203,"column":2},"end":{"line":205,"column":42}},"49":{"start":{"line":207,"column":2},"end":{"line":216,"column":3}},"50":{"start":{"line":208,"column":4},"end":{"line":208,"column":26}},"51":{"start":{"line":210,"column":4},"end":{"line":213,"column":5}},"52":{"start":{"line":211,"column":6},"end":{"line":211,"column":47}},"53":{"start":{"line":212,"column":6},"end":{"line":212,"column":52}},"54":{"start":{"line":212,"column":46},"end":{"line":212,"column":52}},"55":{"start":{"line":215,"column":4},"end":{"line":215,"column":60}},"56":{"start":{"line":215,"column":44},"end":{"line":215,"column":60}},"57":{"start":{"line":218,"column":2},"end":{"line":218,"column":13}},"58":{"start":{"line":226,"column":0},"end":{"line":228,"column":2}},"59":{"start":{"line":227,"column":2},"end":{"line":227,"column":19}},"60":{"start":{"line":235,"column":1},"end":{"line":237,"column":3}},"61":{"start":{"line":236,"column":3},"end":{"line":236,"column":22}},"62":{"start":{"line":250,"column":0},"end":{"line":255,"column":2}},"63":{"start":{"line":251,"column":2},"end":{"line":254,"column":5}},"64":{"start":{"line":252,"column":4},"end":{"line":252,"column":57}},"65":{"start":{"line":253,"column":4},"end":{"line":253,"column":20}}},"branchMap":{"1":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"2":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"3":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":21},"end":{"line":84,"column":29}},{"start":{"line":84,"column":34},"end":{"line":84,"column":70}}]},"4":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":2},"end":{"line":86,"column":2}},{"start":{"line":86,"column":2},"end":{"line":86,"column":2}}]},"5":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"6":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":2},"end":{"line":150,"column":2}},{"start":{"line":150,"column":2},"end":{"line":150,"column":2}}]},"7":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"8":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":2},"end":{"line":187,"column":2}},{"start":{"line":187,"column":2},"end":{"line":187,"column":2}}]},"9":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":6},"end":{"line":212,"column":6}},{"start":{"line":212,"column":6},"end":{"line":212,"column":6}}]},"10":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":10},"end":{"line":212,"column":26}},{"start":{"line":212,"column":30},"end":{"line":212,"column":44}}]},"11":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":4},"end":{"line":215,"column":4}},{"start":{"line":215,"column":4},"end":{"line":215,"column":4}}]},"12":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":8},"end":{"line":215,"column":24}},{"start":{"line":215,"column":28},"end":{"line":215,"column":42}}]}},"code":["/*!"," * elasticlunr.Pipeline"," * Copyright (C) @YEAR Oliver Nightingale"," * Copyright (C) @YEAR Wei Song"," */","","/**"," * elasticlunr.Pipelines maintain an ordered list of functions to be applied to "," * both documents tokens and query tokens."," *"," * An instance of elasticlunr.Index will contain a pipeline"," * with a trimmer, a stop word filter, an English stemmer. Extra"," * functions can be added before or after either of these functions or these"," * default functions can be removed."," *"," * When run the pipeline, it will call each function in turn."," *"," * The output of the functions in the pipeline will be passed to the next function"," * in the pipeline. To exclude a token from entering the index the function"," * should return undefined, the rest of the pipeline will not be called with"," * this token."," *"," * For serialisation of pipelines to work, all functions used in an instance of"," * a pipeline should be registered with elasticlunr.Pipeline. Registered functions can"," * then be loaded. If trying to load a serialised pipeline that uses functions"," * that are not registered an error will be thrown."," *"," * If not planning on serialising the pipeline then registering pipeline functions"," * is not necessary."," *"," * @constructor"," */","elasticlunr.Pipeline = function () {","  this._queue = [];","};","","elasticlunr.Pipeline.registeredFunctions = {};","","/**"," * Register a function in the pipeline."," *"," * Functions that are used in the pipeline should be registered if the pipeline"," * needs to be serialised, or a serialised pipeline needs to be loaded."," *"," * Registering a function does not add it to a pipeline, functions must still be"," * added to instances of the pipeline for them to be used when running a pipeline."," *"," * @param {Function} fn The function to register."," * @param {String} label The label to register this function with"," * @memberOf Pipeline"," */","elasticlunr.Pipeline.registerFunction = function (fn, label) {","  if (label in elasticlunr.Pipeline.registeredFunctions) {","    elasticlunr.utils.warn('Overwriting existing registered function: ' + label);","  }","","  fn.label = label;","  elasticlunr.Pipeline.registeredFunctions[label] = fn;","};","","/**"," * Get a registered function in the pipeline."," *"," * @param {String} label The label of registered function."," * @return {Function}"," * @memberOf Pipeline"," */","elasticlunr.Pipeline.getRegisteredFunction = function (label) {","  if ((label in elasticlunr.Pipeline.registeredFunctions) !== true) {","    return null;","  }","","  return elasticlunr.Pipeline.registeredFunctions[label];","};","","/**"," * Warns if the function is not registered as a Pipeline function."," *"," * @param {Function} fn The function to check for."," * @private"," * @memberOf Pipeline"," */","elasticlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {","  var isRegistered = fn.label && (fn.label in this.registeredFunctions);","","  if (!isRegistered) {","    elasticlunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn);","  }","};","","/**"," * Loads a previously serialised pipeline."," *"," * All functions to be loaded must already be registered with elasticlunr.Pipeline."," * If any function from the serialised data has not been registered then an"," * error will be thrown."," *"," * @param {Object} serialised The serialised pipeline to load."," * @return {elasticlunr.Pipeline}"," * @memberOf Pipeline"," */","elasticlunr.Pipeline.load = function (serialised) {","  var pipeline = new elasticlunr.Pipeline;","","  serialised.forEach(function (fnName) {","    var fn = elasticlunr.Pipeline.getRegisteredFunction(fnName);","","    if (fn) {","      pipeline.add(fn);","    } else {","      throw new Error('Cannot load un-registered function: ' + fnName);","    }","  });","","  return pipeline;","};","","/**"," * Adds new functions to the end of the pipeline."," *"," * Logs a warning if the function has not been registered."," *"," * @param {Function} functions Any number of functions to add to the pipeline."," * @memberOf Pipeline"," */","elasticlunr.Pipeline.prototype.add = function () {","  var fns = Array.prototype.slice.call(arguments);","","  fns.forEach(function (fn) {","    elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);","    this._queue.push(fn);","  }, this);","};","","/**"," * Adds a single function after a function that already exists in the"," * pipeline."," *"," * Logs a warning if the function has not been registered."," * If existingFn is not found, throw an Exception."," *"," * @param {Function} existingFn A function that already exists in the pipeline."," * @param {Function} newFn The new function to add to the pipeline."," * @memberOf Pipeline"," */","elasticlunr.Pipeline.prototype.after = function (existingFn, newFn) {","  elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);","","  var pos = this._queue.indexOf(existingFn);","  if (pos === -1) {","    throw new Error('Cannot find existingFn');","  }","","  this._queue.splice(pos + 1, 0, newFn);","};","","/**"," * Adds a single function before a function that already exists in the"," * pipeline."," *"," * Logs a warning if the function has not been registered."," * If existingFn is not found, throw an Exception."," *"," * @param {Function} existingFn A function that already exists in the pipeline."," * @param {Function} newFn The new function to add to the pipeline."," * @memberOf Pipeline"," */","elasticlunr.Pipeline.prototype.before = function (existingFn, newFn) {","  elasticlunr.Pipeline.warnIfFunctionNotRegistered(newFn);","","  var pos = this._queue.indexOf(existingFn);","  if (pos === -1) {","    throw new Error('Cannot find existingFn');","  }","","  this._queue.splice(pos, 0, newFn);","};","","/**"," * Removes a function from the pipeline."," *"," * @param {Function} fn The function to remove from the pipeline."," * @memberOf Pipeline"," */","elasticlunr.Pipeline.prototype.remove = function (fn) {","  var pos = this._queue.indexOf(fn);","  if (pos === -1) {","    return;","  }","","  this._queue.splice(pos, 1);","};","","/**"," * Runs the current list of functions that registered in the pipeline against the"," * input tokens."," *"," * @param {Array} tokens The tokens to run through the pipeline."," * @return {Array}"," * @memberOf Pipeline"," */","elasticlunr.Pipeline.prototype.run = function (tokens) {","  var out = [],","      tokenLength = tokens.length,","      pipelineLength = this._queue.length;","","  for (var i = 0; i < tokenLength; i++) {","    var token = tokens[i];","","    for (var j = 0; j < pipelineLength; j++) {","      token = this._queue[j](token, i, tokens);","      if (token === void 0 || token === null) break;","    };","","    if (token !== void 0 && token !== null) out.push(token);","  };","","  return out;","};","","/**"," * Resets the pipeline by removing any existing processors."," *"," * @memberOf Pipeline"," */","elasticlunr.Pipeline.prototype.reset = function () {","  this._queue = [];","};",""," /**","  * Get the pipeline if user want to check the pipeline.","  *","  * @memberOf Pipeline","  */"," elasticlunr.Pipeline.prototype.get = function () {","   return this._queue;"," };","","/**"," * Returns a representation of the pipeline ready for serialisation."," * Only serialize pipeline function's name. Not storing function, so when"," * loading the archived JSON index file, corresponding pipeline function is "," * added by registered function of elasticlunr.Pipeline.registeredFunctions"," *"," * Logs a warning if the function has not been registered."," *"," * @return {Array}"," * @memberOf Pipeline"," */","elasticlunr.Pipeline.prototype.toJSON = function () {","  return this._queue.map(function (fn) {","    elasticlunr.Pipeline.warnIfFunctionNotRegistered(fn);","    return fn.label;","  });","};",""],"l":{"33":2,"34":0,"37":0,"52":0,"53":0,"54":0,"57":0,"58":0,"68":0,"69":0,"70":0,"73":0,"83":0,"84":0,"86":0,"87":0,"102":0,"103":0,"105":0,"106":0,"108":0,"109":0,"111":0,"115":0,"126":0,"127":0,"129":0,"130":0,"131":0,"146":0,"147":0,"149":0,"150":0,"151":0,"154":0,"168":0,"169":0,"171":0,"172":0,"173":0,"176":0,"185":0,"186":0,"187":0,"188":0,"191":0,"202":0,"203":0,"207":0,"208":0,"210":0,"211":0,"212":0,"215":0,"218":0,"226":0,"227":0,"235":0,"236":0,"250":0,"251":0,"252":0,"253":0}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/sorted_set.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/sorted_set.js","s":{"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":1,"20":0,"21":1,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":1,"83":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":17},"end":{"line":20,"column":29}}},"2":{"name":"(anonymous_2)","line":32,"loc":{"start":{"line":32,"column":22},"end":{"line":32,"column":48}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":31},"end":{"line":48,"column":43}}},"4":{"name":"(anonymous_4)","line":66,"loc":{"start":{"line":66,"column":35},"end":{"line":66,"column":47}}},"5":{"name":"(anonymous_5)","line":83,"loc":{"start":{"line":83,"column":31},"end":{"line":83,"column":50}}},"6":{"name":"(anonymous_6)","line":98,"loc":{"start":{"line":98,"column":35},"end":{"line":98,"column":54}}},"7":{"name":"(anonymous_7)","line":110,"loc":{"start":{"line":110,"column":35},"end":{"line":110,"column":51}}},"8":{"name":"(anonymous_8)","line":144,"loc":{"start":{"line":144,"column":39},"end":{"line":144,"column":55}}},"9":{"name":"(anonymous_9)","line":172,"loc":{"start":{"line":172,"column":37},"end":{"line":172,"column":57}}},"10":{"name":"(anonymous_10)","line":207,"loc":{"start":{"line":207,"column":33},"end":{"line":207,"column":45}}},"11":{"name":"(anonymous_11)","line":224,"loc":{"start":{"line":224,"column":33},"end":{"line":224,"column":53}}},"12":{"name":"(anonymous_12)","line":248,"loc":{"start":{"line":248,"column":34},"end":{"line":248,"column":46}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":23,"column":1}},"2":{"start":{"line":21,"column":2},"end":{"line":21,"column":17}},"3":{"start":{"line":22,"column":2},"end":{"line":22,"column":20}},"4":{"start":{"line":32,"column":0},"end":{"line":39,"column":1}},"5":{"start":{"line":33,"column":2},"end":{"line":33,"column":20}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":31}},"7":{"start":{"line":36,"column":2},"end":{"line":36,"column":36}},"8":{"start":{"line":38,"column":2},"end":{"line":38,"column":12}},"9":{"start":{"line":48,"column":0},"end":{"line":58,"column":1}},"10":{"start":{"line":49,"column":2},"end":{"line":49,"column":16}},"11":{"start":{"line":51,"column":2},"end":{"line":55,"column":3}},"12":{"start":{"line":52,"column":4},"end":{"line":52,"column":26}},"13":{"start":{"line":53,"column":4},"end":{"line":53,"column":40}},"14":{"start":{"line":53,"column":32},"end":{"line":53,"column":40}},"15":{"start":{"line":54,"column":4},"end":{"line":54,"column":63}},"16":{"start":{"line":57,"column":2},"end":{"line":57,"column":36}},"17":{"start":{"line":66,"column":0},"end":{"line":68,"column":1}},"18":{"start":{"line":67,"column":2},"end":{"line":67,"column":30}},"19":{"start":{"line":83,"column":0},"end":{"line":85,"column":1}},"20":{"start":{"line":84,"column":2},"end":{"line":84,"column":35}},"21":{"start":{"line":98,"column":0},"end":{"line":100,"column":1}},"22":{"start":{"line":99,"column":2},"end":{"line":99,"column":39}},"23":{"start":{"line":110,"column":0},"end":{"line":131,"column":1}},"24":{"start":{"line":111,"column":2},"end":{"line":115,"column":38}},"25":{"start":{"line":117,"column":2},"end":{"line":126,"column":3}},"26":{"start":{"line":118,"column":4},"end":{"line":118,"column":40}},"27":{"start":{"line":118,"column":28},"end":{"line":118,"column":40}},"28":{"start":{"line":120,"column":4},"end":{"line":120,"column":39}},"29":{"start":{"line":120,"column":26},"end":{"line":120,"column":39}},"30":{"start":{"line":121,"column":4},"end":{"line":121,"column":37}},"31":{"start":{"line":121,"column":26},"end":{"line":121,"column":37}},"32":{"start":{"line":123,"column":4},"end":{"line":123,"column":31}},"33":{"start":{"line":124,"column":4},"end":{"line":124,"column":49}},"34":{"start":{"line":125,"column":4},"end":{"line":125,"column":36}},"35":{"start":{"line":128,"column":2},"end":{"line":128,"column":38}},"36":{"start":{"line":128,"column":26},"end":{"line":128,"column":38}},"37":{"start":{"line":130,"column":2},"end":{"line":130,"column":11}},"38":{"start":{"line":144,"column":0},"end":{"line":162,"column":1}},"39":{"start":{"line":145,"column":2},"end":{"line":149,"column":38}},"40":{"start":{"line":151,"column":2},"end":{"line":158,"column":3}},"41":{"start":{"line":152,"column":4},"end":{"line":152,"column":39}},"42":{"start":{"line":152,"column":26},"end":{"line":152,"column":39}},"43":{"start":{"line":153,"column":4},"end":{"line":153,"column":37}},"44":{"start":{"line":153,"column":26},"end":{"line":153,"column":37}},"45":{"start":{"line":155,"column":4},"end":{"line":155,"column":31}},"46":{"start":{"line":156,"column":4},"end":{"line":156,"column":49}},"47":{"start":{"line":157,"column":4},"end":{"line":157,"column":36}},"48":{"start":{"line":160,"column":2},"end":{"line":160,"column":36}},"49":{"start":{"line":160,"column":24},"end":{"line":160,"column":36}},"50":{"start":{"line":161,"column":2},"end":{"line":161,"column":40}},"51":{"start":{"line":161,"column":24},"end":{"line":161,"column":40}},"52":{"start":{"line":172,"column":0},"end":{"line":199,"column":1}},"53":{"start":{"line":173,"column":2},"end":{"line":176,"column":46}},"54":{"start":{"line":178,"column":2},"end":{"line":196,"column":3}},"55":{"start":{"line":179,"column":4},"end":{"line":179,"column":45}},"56":{"start":{"line":179,"column":40},"end":{"line":179,"column":45}},"57":{"start":{"line":181,"column":4},"end":{"line":185,"column":5}},"58":{"start":{"line":182,"column":6},"end":{"line":182,"column":28}},"59":{"start":{"line":183,"column":6},"end":{"line":183,"column":14}},"60":{"start":{"line":184,"column":6},"end":{"line":184,"column":14}},"61":{"start":{"line":187,"column":4},"end":{"line":190,"column":5}},"62":{"start":{"line":188,"column":6},"end":{"line":188,"column":9}},"63":{"start":{"line":189,"column":6},"end":{"line":189,"column":14}},"64":{"start":{"line":192,"column":4},"end":{"line":195,"column":5}},"65":{"start":{"line":193,"column":6},"end":{"line":193,"column":9}},"66":{"start":{"line":194,"column":6},"end":{"line":194,"column":14}},"67":{"start":{"line":198,"column":2},"end":{"line":198,"column":21}},"68":{"start":{"line":207,"column":0},"end":{"line":214,"column":1}},"69":{"start":{"line":208,"column":2},"end":{"line":208,"column":32}},"70":{"start":{"line":210,"column":2},"end":{"line":210,"column":33}},"71":{"start":{"line":211,"column":2},"end":{"line":211,"column":38}},"72":{"start":{"line":213,"column":2},"end":{"line":213,"column":14}},"73":{"start":{"line":224,"column":0},"end":{"line":240,"column":1}},"74":{"start":{"line":225,"column":2},"end":{"line":225,"column":33}},"75":{"start":{"line":227,"column":2},"end":{"line":231,"column":3}},"76":{"start":{"line":228,"column":4},"end":{"line":228,"column":39}},"77":{"start":{"line":230,"column":4},"end":{"line":230,"column":39}},"78":{"start":{"line":233,"column":2},"end":{"line":233,"column":28}},"79":{"start":{"line":235,"column":2},"end":{"line":237,"column":3}},"80":{"start":{"line":236,"column":4},"end":{"line":236,"column":37}},"81":{"start":{"line":239,"column":2},"end":{"line":239,"column":17}},"82":{"start":{"line":248,"column":0},"end":{"line":250,"column":1}},"83":{"start":{"line":249,"column":2},"end":{"line":249,"column":23}}},"branchMap":{"1":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":53,"column":4}},{"start":{"line":53,"column":4},"end":{"line":53,"column":4}}]},"2":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":4},"end":{"line":118,"column":4}},{"start":{"line":118,"column":4},"end":{"line":118,"column":4}}]},"3":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":120,"column":4}},{"start":{"line":120,"column":4},"end":{"line":120,"column":4}}]},"4":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":4},"end":{"line":121,"column":4}},{"start":{"line":121,"column":4},"end":{"line":121,"column":4}}]},"5":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":2},"end":{"line":128,"column":2}},{"start":{"line":128,"column":2},"end":{"line":128,"column":2}}]},"6":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"7":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":153,"column":4}},{"start":{"line":153,"column":4},"end":{"line":153,"column":4}}]},"8":{"line":160,"type":"if","locations":[{"start":{"line":160,"column":2},"end":{"line":160,"column":2}},{"start":{"line":160,"column":2},"end":{"line":160,"column":2}}]},"9":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":2},"end":{"line":161,"column":2}},{"start":{"line":161,"column":2},"end":{"line":161,"column":2}}]},"10":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":179,"column":4}},{"start":{"line":179,"column":4},"end":{"line":179,"column":4}}]},"11":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":8},"end":{"line":179,"column":21}},{"start":{"line":179,"column":25},"end":{"line":179,"column":38}}]},"12":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":4},"end":{"line":181,"column":4}},{"start":{"line":181,"column":4},"end":{"line":181,"column":4}}]},"13":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]},"14":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":192,"column":4}},{"start":{"line":192,"column":4},"end":{"line":192,"column":4}}]},"15":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":2},"end":{"line":227,"column":2}},{"start":{"line":227,"column":2},"end":{"line":227,"column":2}}]}},"code":["/**"," * sorted_set.js is added only to make elasticlunr.js compatible with lunr-languages."," * if elasticlunr.js support different languages by default, this will make elasticlunr.js"," * much bigger that not good for browser usage."," *"," */","","","/*!"," * lunr.SortedSet"," * Copyright (C) @YEAR Oliver Nightingale"," */","","/**"," * lunr.SortedSets are used to maintain an array of uniq values in a sorted"," * order."," *"," * @constructor"," */","lunr.SortedSet = function () {","  this.length = 0","  this.elements = []","}","","/**"," * Loads a previously serialised sorted set."," *"," * @param {Array} serialisedData The serialised set to load."," * @returns {lunr.SortedSet}"," * @memberOf SortedSet"," */","lunr.SortedSet.load = function (serialisedData) {","  var set = new this","","  set.elements = serialisedData","  set.length = serialisedData.length","","  return set","}","","/**"," * Inserts new items into the set in the correct position to maintain the"," * order."," *"," * @param {Object} The objects to add to this set."," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.add = function () {","  var i, element","","  for (i = 0; i < arguments.length; i++) {","    element = arguments[i]","    if (~this.indexOf(element)) continue","    this.elements.splice(this.locationFor(element), 0, element)","  }","","  this.length = this.elements.length","}","","/**"," * Converts this sorted set into an array."," *"," * @returns {Array}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.toArray = function () {","  return this.elements.slice()","}","","/**"," * Creates a new array with the results of calling a provided function on every"," * element in this sorted set."," *"," * Delegates to Array.prototype.map and has the same signature."," *"," * @param {Function} fn The function that is called on each element of the"," * set."," * @param {Object} ctx An optional object that can be used as the context"," * for the function fn."," * @returns {Array}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.map = function (fn, ctx) {","  return this.elements.map(fn, ctx)","}","","/**"," * Executes a provided function once per sorted set element."," *"," * Delegates to Array.prototype.forEach and has the same signature."," *"," * @param {Function} fn The function that is called on each element of the"," * set."," * @param {Object} ctx An optional object that can be used as the context"," * @memberOf SortedSet"," * for the function fn."," */","lunr.SortedSet.prototype.forEach = function (fn, ctx) {","  return this.elements.forEach(fn, ctx)","}","","/**"," * Returns the index at which a given element can be found in the"," * sorted set, or -1 if it is not present."," *"," * @param {Object} elem The object to locate in the sorted set."," * @returns {Number}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.indexOf = function (elem) {","  var start = 0,","      end = this.elements.length,","      sectionLength = end - start,","      pivot = start + Math.floor(sectionLength / 2),","      pivotElem = this.elements[pivot]","","  while (sectionLength > 1) {","    if (pivotElem === elem) return pivot","","    if (pivotElem < elem) start = pivot","    if (pivotElem > elem) end = pivot","","    sectionLength = end - start","    pivot = start + Math.floor(sectionLength / 2)","    pivotElem = this.elements[pivot]","  }","","  if (pivotElem === elem) return pivot","","  return -1","}","","/**"," * Returns the position within the sorted set that an element should be"," * inserted at to maintain the current order of the set."," *"," * This function assumes that the element to search for does not already exist"," * in the sorted set."," *"," * @param {Object} elem The elem to find the position for in the set"," * @returns {Number}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.locationFor = function (elem) {","  var start = 0,","      end = this.elements.length,","      sectionLength = end - start,","      pivot = start + Math.floor(sectionLength / 2),","      pivotElem = this.elements[pivot]","","  while (sectionLength > 1) {","    if (pivotElem < elem) start = pivot","    if (pivotElem > elem) end = pivot","","    sectionLength = end - start","    pivot = start + Math.floor(sectionLength / 2)","    pivotElem = this.elements[pivot]","  }","","  if (pivotElem > elem) return pivot","  if (pivotElem < elem) return pivot + 1","}","","/**"," * Creates a new lunr.SortedSet that contains the elements in the intersection"," * of this set and the passed set."," *"," * @param {lunr.SortedSet} otherSet The set to intersect with this set."," * @returns {lunr.SortedSet}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.intersect = function (otherSet) {","  var intersectSet = new lunr.SortedSet,","      i = 0, j = 0,","      a_len = this.length, b_len = otherSet.length,","      a = this.elements, b = otherSet.elements","","  while (true) {","    if (i > a_len - 1 || j > b_len - 1) break","","    if (a[i] === b[j]) {","      intersectSet.add(a[i])","      i++, j++","      continue","    }","","    if (a[i] < b[j]) {","      i++","      continue","    }","","    if (a[i] > b[j]) {","      j++","      continue","    }","  };","","  return intersectSet","}","","/**"," * Makes a copy of this set"," *"," * @returns {lunr.SortedSet}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.clone = function () {","  var clone = new lunr.SortedSet","","  clone.elements = this.toArray()","  clone.length = clone.elements.length","","  return clone","}","","/**"," * Creates a new lunr.SortedSet that contains the elements in the union"," * of this set and the passed set."," *"," * @param {lunr.SortedSet} otherSet The set to union with this set."," * @returns {lunr.SortedSet}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.union = function (otherSet) {","  var longSet, shortSet, unionSet","","  if (this.length >= otherSet.length) {","    longSet = this, shortSet = otherSet","  } else {","    longSet = otherSet, shortSet = this","  }","","  unionSet = longSet.clone()","","  for(var i = 0, shortSetElements = shortSet.toArray(); i < shortSetElements.length; i++){","    unionSet.add(shortSetElements[i])","  }","","  return unionSet","}","","/**"," * Returns a representation of the sorted set ready for serialisation."," *"," * @returns {Array}"," * @memberOf SortedSet"," */","lunr.SortedSet.prototype.toJSON = function () {","  return this.toArray()","}"],"l":{"20":1,"21":0,"22":0,"32":1,"33":0,"35":0,"36":0,"38":0,"48":1,"49":0,"51":0,"52":0,"53":0,"54":0,"57":0,"66":1,"67":0,"83":1,"84":0,"98":1,"99":0,"110":1,"111":0,"117":0,"118":0,"120":0,"121":0,"123":0,"124":0,"125":0,"128":0,"130":0,"144":1,"145":0,"151":0,"152":0,"153":0,"155":0,"156":0,"157":0,"160":0,"161":0,"172":1,"173":0,"178":0,"179":0,"181":0,"182":0,"183":0,"184":0,"187":0,"188":0,"189":0,"192":0,"193":0,"194":0,"198":0,"207":1,"208":0,"210":0,"211":0,"213":0,"224":1,"225":0,"227":0,"228":0,"230":0,"233":0,"235":0,"236":0,"239":0,"248":1,"249":0}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/stemmer.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/stemmer.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0,0],"24":[0,0],"25":[0,0],"26":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":17,"loc":{"start":{"line":17,"column":23},"end":{"line":17,"column":33}}},"2":{"name":"porterStemmer","line":88,"loc":{"start":{"line":88,"column":22},"end":{"line":88,"column":48}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":217,"column":5}},"2":{"start":{"line":18,"column":2},"end":{"line":60,"column":30}},"3":{"start":{"line":62,"column":2},"end":{"line":62,"column":33}},"4":{"start":{"line":63,"column":2},"end":{"line":63,"column":33}},"5":{"start":{"line":64,"column":2},"end":{"line":64,"column":33}},"6":{"start":{"line":65,"column":2},"end":{"line":65,"column":31}},"7":{"start":{"line":67,"column":2},"end":{"line":67,"column":32}},"8":{"start":{"line":68,"column":2},"end":{"line":68,"column":32}},"9":{"start":{"line":69,"column":2},"end":{"line":69,"column":27}},"10":{"start":{"line":70,"column":2},"end":{"line":70,"column":33}},"11":{"start":{"line":71,"column":2},"end":{"line":71,"column":21}},"12":{"start":{"line":72,"column":2},"end":{"line":72,"column":31}},"13":{"start":{"line":73,"column":2},"end":{"line":73,"column":50}},"14":{"start":{"line":74,"column":2},"end":{"line":74,"column":58}},"15":{"start":{"line":76,"column":2},"end":{"line":76,"column":33}},"16":{"start":{"line":77,"column":2},"end":{"line":77,"column":152}},"17":{"start":{"line":79,"column":2},"end":{"line":79,"column":62}},"18":{"start":{"line":81,"column":2},"end":{"line":81,"column":99}},"19":{"start":{"line":82,"column":2},"end":{"line":82,"column":34}},"20":{"start":{"line":84,"column":2},"end":{"line":84,"column":24}},"21":{"start":{"line":85,"column":2},"end":{"line":85,"column":21}},"22":{"start":{"line":86,"column":2},"end":{"line":86,"column":55}},"23":{"start":{"line":88,"column":2},"end":{"line":214,"column":4}},"24":{"start":{"line":89,"column":4},"end":{"line":95,"column":10}},"25":{"start":{"line":97,"column":4},"end":{"line":97,"column":35}},"26":{"start":{"line":97,"column":24},"end":{"line":97,"column":33}},"27":{"start":{"line":99,"column":4},"end":{"line":99,"column":28}},"28":{"start":{"line":100,"column":4},"end":{"line":102,"column":5}},"29":{"start":{"line":101,"column":6},"end":{"line":101,"column":46}},"30":{"start":{"line":105,"column":4},"end":{"line":105,"column":14}},"31":{"start":{"line":106,"column":4},"end":{"line":106,"column":17}},"32":{"start":{"line":108,"column":4},"end":{"line":109,"column":56}},"33":{"start":{"line":108,"column":22},"end":{"line":108,"column":47}},"34":{"start":{"line":109,"column":9},"end":{"line":109,"column":56}},"35":{"start":{"line":109,"column":28},"end":{"line":109,"column":54}},"36":{"start":{"line":112,"column":4},"end":{"line":112,"column":15}},"37":{"start":{"line":113,"column":4},"end":{"line":113,"column":17}},"38":{"start":{"line":114,"column":4},"end":{"line":134,"column":5}},"39":{"start":{"line":115,"column":6},"end":{"line":115,"column":26}},"40":{"start":{"line":116,"column":6},"end":{"line":116,"column":19}},"41":{"start":{"line":117,"column":6},"end":{"line":120,"column":7}},"42":{"start":{"line":118,"column":8},"end":{"line":118,"column":21}},"43":{"start":{"line":119,"column":8},"end":{"line":119,"column":29}},"44":{"start":{"line":121,"column":11},"end":{"line":134,"column":5}},"45":{"start":{"line":122,"column":6},"end":{"line":122,"column":27}},"46":{"start":{"line":123,"column":6},"end":{"line":123,"column":19}},"47":{"start":{"line":124,"column":6},"end":{"line":124,"column":19}},"48":{"start":{"line":125,"column":6},"end":{"line":133,"column":7}},"49":{"start":{"line":126,"column":8},"end":{"line":126,"column":17}},"50":{"start":{"line":127,"column":8},"end":{"line":127,"column":23}},"51":{"start":{"line":128,"column":8},"end":{"line":128,"column":23}},"52":{"start":{"line":129,"column":8},"end":{"line":129,"column":23}},"53":{"start":{"line":130,"column":8},"end":{"line":132,"column":46}},"54":{"start":{"line":130,"column":28},"end":{"line":130,"column":40}},"55":{"start":{"line":131,"column":13},"end":{"line":132,"column":46}},"56":{"start":{"line":131,"column":32},"end":{"line":131,"column":45}},"57":{"start":{"line":131,"column":46},"end":{"line":131,"column":67}},"58":{"start":{"line":132,"column":13},"end":{"line":132,"column":46}},"59":{"start":{"line":132,"column":32},"end":{"line":132,"column":44}},"60":{"start":{"line":137,"column":4},"end":{"line":137,"column":15}},"61":{"start":{"line":138,"column":4},"end":{"line":142,"column":5}},"62":{"start":{"line":139,"column":6},"end":{"line":139,"column":26}},"63":{"start":{"line":140,"column":6},"end":{"line":140,"column":19}},"64":{"start":{"line":141,"column":6},"end":{"line":141,"column":21}},"65":{"start":{"line":145,"column":4},"end":{"line":145,"column":14}},"66":{"start":{"line":146,"column":4},"end":{"line":154,"column":5}},"67":{"start":{"line":147,"column":6},"end":{"line":147,"column":26}},"68":{"start":{"line":148,"column":6},"end":{"line":148,"column":19}},"69":{"start":{"line":149,"column":6},"end":{"line":149,"column":21}},"70":{"start":{"line":150,"column":6},"end":{"line":150,"column":19}},"71":{"start":{"line":151,"column":6},"end":{"line":153,"column":7}},"72":{"start":{"line":152,"column":8},"end":{"line":152,"column":37}},"73":{"start":{"line":157,"column":4},"end":{"line":157,"column":14}},"74":{"start":{"line":158,"column":4},"end":{"line":166,"column":5}},"75":{"start":{"line":159,"column":6},"end":{"line":159,"column":26}},"76":{"start":{"line":160,"column":6},"end":{"line":160,"column":19}},"77":{"start":{"line":161,"column":6},"end":{"line":161,"column":21}},"78":{"start":{"line":162,"column":6},"end":{"line":162,"column":19}},"79":{"start":{"line":163,"column":6},"end":{"line":165,"column":7}},"80":{"start":{"line":164,"column":8},"end":{"line":164,"column":37}},"81":{"start":{"line":169,"column":4},"end":{"line":169,"column":14}},"82":{"start":{"line":170,"column":4},"end":{"line":170,"column":16}},"83":{"start":{"line":171,"column":4},"end":{"line":185,"column":5}},"84":{"start":{"line":172,"column":6},"end":{"line":172,"column":26}},"85":{"start":{"line":173,"column":6},"end":{"line":173,"column":19}},"86":{"start":{"line":174,"column":6},"end":{"line":174,"column":19}},"87":{"start":{"line":175,"column":6},"end":{"line":177,"column":7}},"88":{"start":{"line":176,"column":8},"end":{"line":176,"column":17}},"89":{"start":{"line":178,"column":11},"end":{"line":185,"column":5}},"90":{"start":{"line":179,"column":6},"end":{"line":179,"column":27}},"91":{"start":{"line":180,"column":6},"end":{"line":180,"column":27}},"92":{"start":{"line":181,"column":6},"end":{"line":181,"column":20}},"93":{"start":{"line":182,"column":6},"end":{"line":184,"column":7}},"94":{"start":{"line":183,"column":8},"end":{"line":183,"column":17}},"95":{"start":{"line":188,"column":4},"end":{"line":188,"column":14}},"96":{"start":{"line":189,"column":4},"end":{"line":198,"column":5}},"97":{"start":{"line":190,"column":6},"end":{"line":190,"column":26}},"98":{"start":{"line":191,"column":6},"end":{"line":191,"column":19}},"99":{"start":{"line":192,"column":6},"end":{"line":192,"column":19}},"100":{"start":{"line":193,"column":6},"end":{"line":193,"column":20}},"101":{"start":{"line":194,"column":6},"end":{"line":194,"column":18}},"102":{"start":{"line":195,"column":6},"end":{"line":197,"column":7}},"103":{"start":{"line":196,"column":8},"end":{"line":196,"column":17}},"104":{"start":{"line":200,"column":4},"end":{"line":200,"column":16}},"105":{"start":{"line":201,"column":4},"end":{"line":201,"column":18}},"106":{"start":{"line":202,"column":4},"end":{"line":205,"column":5}},"107":{"start":{"line":203,"column":6},"end":{"line":203,"column":19}},"108":{"start":{"line":204,"column":6},"end":{"line":204,"column":27}},"109":{"start":{"line":209,"column":4},"end":{"line":211,"column":5}},"110":{"start":{"line":210,"column":6},"end":{"line":210,"column":46}},"111":{"start":{"line":213,"column":4},"end":{"line":213,"column":13}},"112":{"start":{"line":216,"column":2},"end":{"line":216,"column":23}},"113":{"start":{"line":219,"column":0},"end":{"line":219,"column":70}}},"branchMap":{"1":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"2":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":100,"column":4}},{"start":{"line":100,"column":4},"end":{"line":100,"column":4}}]},"3":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":4},"end":{"line":108,"column":4}},{"start":{"line":108,"column":4},"end":{"line":108,"column":4}}]},"4":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":9},"end":{"line":109,"column":9}},{"start":{"line":109,"column":9},"end":{"line":109,"column":9}}]},"5":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":114,"column":4}},{"start":{"line":114,"column":4},"end":{"line":114,"column":4}}]},"6":{"line":117,"type":"if","locations":[{"start":{"line":117,"column":6},"end":{"line":117,"column":6}},{"start":{"line":117,"column":6},"end":{"line":117,"column":6}}]},"7":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":11},"end":{"line":121,"column":11}},{"start":{"line":121,"column":11},"end":{"line":121,"column":11}}]},"8":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":6},"end":{"line":125,"column":6}},{"start":{"line":125,"column":6},"end":{"line":125,"column":6}}]},"9":{"line":130,"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":130,"column":8}},{"start":{"line":130,"column":8},"end":{"line":130,"column":8}}]},"10":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":13},"end":{"line":131,"column":13}},{"start":{"line":131,"column":13},"end":{"line":131,"column":13}}]},"11":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":13},"end":{"line":132,"column":13}},{"start":{"line":132,"column":13},"end":{"line":132,"column":13}}]},"12":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"13":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":4},"end":{"line":146,"column":4}},{"start":{"line":146,"column":4},"end":{"line":146,"column":4}}]},"14":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":151,"column":6}},{"start":{"line":151,"column":6},"end":{"line":151,"column":6}}]},"15":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":4},"end":{"line":158,"column":4}},{"start":{"line":158,"column":4},"end":{"line":158,"column":4}}]},"16":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":6},"end":{"line":163,"column":6}},{"start":{"line":163,"column":6},"end":{"line":163,"column":6}}]},"17":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":4},"end":{"line":171,"column":4}},{"start":{"line":171,"column":4},"end":{"line":171,"column":4}}]},"18":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":6},"end":{"line":175,"column":6}},{"start":{"line":175,"column":6},"end":{"line":175,"column":6}}]},"19":{"line":178,"type":"if","locations":[{"start":{"line":178,"column":11},"end":{"line":178,"column":11}},{"start":{"line":178,"column":11},"end":{"line":178,"column":11}}]},"20":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":6},"end":{"line":182,"column":6}},{"start":{"line":182,"column":6},"end":{"line":182,"column":6}}]},"21":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":189,"column":4}},{"start":{"line":189,"column":4},"end":{"line":189,"column":4}}]},"22":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":6},"end":{"line":195,"column":6}},{"start":{"line":195,"column":6},"end":{"line":195,"column":6}}]},"23":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":10},"end":{"line":195,"column":23}},{"start":{"line":195,"column":28},"end":{"line":195,"column":42}},{"start":{"line":195,"column":46},"end":{"line":195,"column":63}}]},"24":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":4},"end":{"line":202,"column":4}},{"start":{"line":202,"column":4},"end":{"line":202,"column":4}}]},"25":{"line":202,"type":"binary-expr","locations":[{"start":{"line":202,"column":8},"end":{"line":202,"column":18}},{"start":{"line":202,"column":22},"end":{"line":202,"column":33}}]},"26":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":209,"column":4}},{"start":{"line":209,"column":4},"end":{"line":209,"column":4}}]}},"code":["/*!"," * elasticlunr.stemmer"," * Copyright (C) @YEAR Oliver Nightingale"," * Copyright (C) @YEAR Wei Song"," * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt"," */","","/**"," * elasticlunr.stemmer is an english language stemmer, this is a JavaScript"," * implementation of the PorterStemmer taken from http://tartarus.org/~martin"," *"," * @module"," * @param {String} str The string to stem"," * @return {String}"," * @see elasticlunr.Pipeline"," */","elasticlunr.stemmer = (function(){","  var step2list = {","      \"ational\" : \"ate\",","      \"tional\" : \"tion\",","      \"enci\" : \"ence\",","      \"anci\" : \"ance\",","      \"izer\" : \"ize\",","      \"bli\" : \"ble\",","      \"alli\" : \"al\",","      \"entli\" : \"ent\",","      \"eli\" : \"e\",","      \"ousli\" : \"ous\",","      \"ization\" : \"ize\",","      \"ation\" : \"ate\",","      \"ator\" : \"ate\",","      \"alism\" : \"al\",","      \"iveness\" : \"ive\",","      \"fulness\" : \"ful\",","      \"ousness\" : \"ous\",","      \"aliti\" : \"al\",","      \"iviti\" : \"ive\",","      \"biliti\" : \"ble\",","      \"logi\" : \"log\"","    },","","    step3list = {","      \"icate\" : \"ic\",","      \"ative\" : \"\",","      \"alize\" : \"al\",","      \"iciti\" : \"ic\",","      \"ical\" : \"ic\",","      \"ful\" : \"\",","      \"ness\" : \"\"","    },","","    c = \"[^aeiou]\",          // consonant","    v = \"[aeiouy]\",          // vowel","    C = c + \"[^aeiouy]*\",    // consonant sequence","    V = v + \"[aeiou]*\",      // vowel sequence","","    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0","    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1","    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1","    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem","","  var re_mgr0 = new RegExp(mgr0);","  var re_mgr1 = new RegExp(mgr1);","  var re_meq1 = new RegExp(meq1);","  var re_s_v = new RegExp(s_v);","","  var re_1a = /^(.+?)(ss|i)es$/;","  var re2_1a = /^(.+?)([^s])s$/;","  var re_1b = /^(.+?)eed$/;","  var re2_1b = /^(.+?)(ed|ing)$/;","  var re_1b_2 = /.$/;","  var re2_1b_2 = /(at|bl|iz)$/;","  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");","  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");","","  var re_1c = /^(.+?[^aeiou])y$/;","  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;","","  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;","","  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;","  var re2_4 = /^(.+?)(s|t)(ion)$/;","","  var re_5 = /^(.+?)e$/;","  var re_5_1 = /ll$/;","  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");","","  var porterStemmer = function porterStemmer(w) {","    var   stem,","      suffix,","      firstch,","      re,","      re2,","      re3,","      re4;","","    if (w.length < 3) { return w; }","","    firstch = w.substr(0,1);","    if (firstch == \"y\") {","      w = firstch.toUpperCase() + w.substr(1);","    }","","    // Step 1a","    re = re_1a","    re2 = re2_1a;","","    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }","    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }","","    // Step 1b","    re = re_1b;","    re2 = re2_1b;","    if (re.test(w)) {","      var fp = re.exec(w);","      re = re_mgr0;","      if (re.test(fp[1])) {","        re = re_1b_2;","        w = w.replace(re,\"\");","      }","    } else if (re2.test(w)) {","      var fp = re2.exec(w);","      stem = fp[1];","      re2 = re_s_v;","      if (re2.test(stem)) {","        w = stem;","        re2 = re2_1b_2;","        re3 = re3_1b_2;","        re4 = re4_1b_2;","        if (re2.test(w)) {  w = w + \"e\"; }","        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }","        else if (re4.test(w)) { w = w + \"e\"; }","      }","    }","","    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)","    re = re_1c;","    if (re.test(w)) {","      var fp = re.exec(w);","      stem = fp[1];","      w = stem + \"i\";","    }","","    // Step 2","    re = re_2;","    if (re.test(w)) {","      var fp = re.exec(w);","      stem = fp[1];","      suffix = fp[2];","      re = re_mgr0;","      if (re.test(stem)) {","        w = stem + step2list[suffix];","      }","    }","","    // Step 3","    re = re_3;","    if (re.test(w)) {","      var fp = re.exec(w);","      stem = fp[1];","      suffix = fp[2];","      re = re_mgr0;","      if (re.test(stem)) {","        w = stem + step3list[suffix];","      }","    }","","    // Step 4","    re = re_4;","    re2 = re2_4;","    if (re.test(w)) {","      var fp = re.exec(w);","      stem = fp[1];","      re = re_mgr1;","      if (re.test(stem)) {","        w = stem;","      }","    } else if (re2.test(w)) {","      var fp = re2.exec(w);","      stem = fp[1] + fp[2];","      re2 = re_mgr1;","      if (re2.test(stem)) {","        w = stem;","      }","    }","","    // Step 5","    re = re_5;","    if (re.test(w)) {","      var fp = re.exec(w);","      stem = fp[1];","      re = re_mgr1;","      re2 = re_meq1;","      re3 = re3_5;","      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {","        w = stem;","      }","    }","","    re = re_5_1;","    re2 = re_mgr1;","    if (re.test(w) && re2.test(w)) {","      re = re_1b_2;","      w = w.replace(re,\"\");","    }","","    // and turn initial Y back to y","","    if (firstch == \"y\") {","      w = firstch.toLowerCase() + w.substr(1);","    }","","    return w;","  };","","  return porterStemmer;","})();","","elasticlunr.Pipeline.registerFunction(elasticlunr.stemmer, 'stemmer');",""],"l":{"17":2,"18":0,"62":0,"63":0,"64":0,"65":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"76":0,"77":0,"79":0,"81":0,"82":0,"84":0,"85":0,"86":0,"88":0,"89":0,"97":0,"99":0,"100":0,"101":0,"105":0,"106":0,"108":0,"109":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"137":0,"138":0,"139":0,"140":0,"141":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"200":0,"201":0,"202":0,"203":0,"204":0,"209":0,"210":0,"213":0,"216":0,"219":0}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/stop_word_filter.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/stop_word_filter.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":29},"end":{"line":20,"column":46}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":29},"end":{"line":33,"column":41}}},"3":{"name":"(anonymous_3)","line":44,"loc":{"start":{"line":44,"column":27},"end":{"line":44,"column":44}}},"4":{"name":"(anonymous_4)","line":47,"loc":{"start":{"line":47,"column":16},"end":{"line":47,"column":32}}},"5":{"name":"(anonymous_5)","line":58,"loc":{"start":{"line":58,"column":29},"end":{"line":58,"column":41}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":24,"column":2}},"2":{"start":{"line":21,"column":2},"end":{"line":23,"column":3}},"3":{"start":{"line":22,"column":4},"end":{"line":22,"column":17}},"4":{"start":{"line":33,"column":0},"end":{"line":35,"column":2}},"5":{"start":{"line":34,"column":2},"end":{"line":34,"column":44}},"6":{"start":{"line":44,"column":0},"end":{"line":50,"column":2}},"7":{"start":{"line":45,"column":2},"end":{"line":45,"column":62}},"8":{"start":{"line":45,"column":55},"end":{"line":45,"column":62}},"9":{"start":{"line":47,"column":2},"end":{"line":49,"column":11}},"10":{"start":{"line":48,"column":4},"end":{"line":48,"column":54}},"11":{"start":{"line":58,"column":0},"end":{"line":60,"column":2}},"12":{"start":{"line":59,"column":2},"end":{"line":59,"column":70}},"13":{"start":{"line":62,"column":0},"end":{"line":183,"column":2}},"14":{"start":{"line":185,"column":0},"end":{"line":185,"column":68}},"15":{"start":{"line":187,"column":0},"end":{"line":187,"column":84}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":11}},{"start":{"line":21,"column":15},"end":{"line":21,"column":67}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"4":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":19}},{"start":{"line":45,"column":23},"end":{"line":45,"column":53}}]}},"code":["/*!"," * elasticlunr.stopWordFilter"," * Copyright (C) @YEAR Oliver Nightingale"," * Copyright (C) @YEAR Wei Song"," */","","/**"," * elasticlunr.stopWordFilter is an English language stop words filter, any words"," * contained in the stop word list will not be passed through the filter."," *"," * This is intended to be used in the Pipeline. If the token does not pass the"," * filter then undefined will be returned."," * Currently this StopwordFilter using dictionary to do O(1) time complexity stop word filtering."," *"," * @module"," * @param {String} token The token to pass through the filter"," * @return {String}"," * @see elasticlunr.Pipeline"," */","elasticlunr.stopWordFilter = function (token) {","  if (token && elasticlunr.stopWordFilter.stopWords[token] !== true) {","    return token;","  }","};","","/**"," * Remove predefined stop words"," * if user want to use customized stop words, user could use this function to delete"," * all predefined stopwords."," *"," * @return {null}"," */","elasticlunr.clearStopWords = function () {","  elasticlunr.stopWordFilter.stopWords = {};","};","","/**"," * Add customized stop words"," * user could use this function to add customized stop words"," * "," * @params {Array} words customized stop words"," * @return {null}"," */","elasticlunr.addStopWords = function (words) {","  if (words == null || Array.isArray(words) === false) return;","","  words.forEach(function (word) {","    elasticlunr.stopWordFilter.stopWords[word] = true;","  }, this);","};","","/**"," * Reset to default stop words"," * user could use this function to restore default stop words"," *"," * @return {null}"," */","elasticlunr.resetStopWords = function () {","  elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;","};","","elasticlunr.defaultStopWords = {","  \"\": true,","  \"a\": true,","  \"able\": true,","  \"about\": true,","  \"across\": true,","  \"after\": true,","  \"all\": true,","  \"almost\": true,","  \"also\": true,","  \"am\": true,","  \"among\": true,","  \"an\": true,","  \"and\": true,","  \"any\": true,","  \"are\": true,","  \"as\": true,","  \"at\": true,","  \"be\": true,","  \"because\": true,","  \"been\": true,","  \"but\": true,","  \"by\": true,","  \"can\": true,","  \"cannot\": true,","  \"could\": true,","  \"dear\": true,","  \"did\": true,","  \"do\": true,","  \"does\": true,","  \"either\": true,","  \"else\": true,","  \"ever\": true,","  \"every\": true,","  \"for\": true,","  \"from\": true,","  \"get\": true,","  \"got\": true,","  \"had\": true,","  \"has\": true,","  \"have\": true,","  \"he\": true,","  \"her\": true,","  \"hers\": true,","  \"him\": true,","  \"his\": true,","  \"how\": true,","  \"however\": true,","  \"i\": true,","  \"if\": true,","  \"in\": true,","  \"into\": true,","  \"is\": true,","  \"it\": true,","  \"its\": true,","  \"just\": true,","  \"least\": true,","  \"let\": true,","  \"like\": true,","  \"likely\": true,","  \"may\": true,","  \"me\": true,","  \"might\": true,","  \"most\": true,","  \"must\": true,","  \"my\": true,","  \"neither\": true,","  \"no\": true,","  \"nor\": true,","  \"not\": true,","  \"of\": true,","  \"off\": true,","  \"often\": true,","  \"on\": true,","  \"only\": true,","  \"or\": true,","  \"other\": true,","  \"our\": true,","  \"own\": true,","  \"rather\": true,","  \"said\": true,","  \"say\": true,","  \"says\": true,","  \"she\": true,","  \"should\": true,","  \"since\": true,","  \"so\": true,","  \"some\": true,","  \"than\": true,","  \"that\": true,","  \"the\": true,","  \"their\": true,","  \"them\": true,","  \"then\": true,","  \"there\": true,","  \"these\": true,","  \"they\": true,","  \"this\": true,","  \"tis\": true,","  \"to\": true,","  \"too\": true,","  \"twas\": true,","  \"us\": true,","  \"wants\": true,","  \"was\": true,","  \"we\": true,","  \"were\": true,","  \"what\": true,","  \"when\": true,","  \"where\": true,","  \"which\": true,","  \"while\": true,","  \"who\": true,","  \"whom\": true,","  \"why\": true,","  \"will\": true,","  \"with\": true,","  \"would\": true,","  \"yet\": true,","  \"you\": true,","  \"your\": true","};","","elasticlunr.stopWordFilter.stopWords = elasticlunr.defaultStopWords;","","elasticlunr.Pipeline.registerFunction(elasticlunr.stopWordFilter, 'stopWordFilter');",""],"l":{"20":2,"21":0,"22":0,"33":0,"34":0,"44":0,"45":0,"47":0,"48":0,"58":0,"59":0,"62":0,"185":0,"187":0}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/tokenizer.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/tokenizer.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":24},"end":{"line":20,"column":39}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":41}}},"3":{"name":"(anonymous_3)","line":31,"loc":{"start":{"line":31,"column":18},"end":{"line":31,"column":31}}},"4":{"name":"(anonymous_4)","line":36,"loc":{"start":{"line":36,"column":16},"end":{"line":36,"column":31}}},"5":{"name":"(anonymous_5)","line":66,"loc":{"start":{"line":66,"column":37},"end":{"line":66,"column":51}}},"6":{"name":"(anonymous_6)","line":76,"loc":{"start":{"line":76,"column":39},"end":{"line":76,"column":50}}},"7":{"name":"(anonymous_7)","line":84,"loc":{"start":{"line":84,"column":37},"end":{"line":84,"column":48}}}},"statementMap":{"1":{"start":{"line":20,"column":0},"end":{"line":45,"column":2}},"2":{"start":{"line":21,"column":2},"end":{"line":21,"column":72}},"3":{"start":{"line":21,"column":62},"end":{"line":21,"column":72}},"4":{"start":{"line":22,"column":2},"end":{"line":42,"column":3}},"5":{"start":{"line":23,"column":4},"end":{"line":29,"column":7}},"6":{"start":{"line":24,"column":6},"end":{"line":26,"column":7}},"7":{"start":{"line":25,"column":8},"end":{"line":25,"column":21}},"8":{"start":{"line":28,"column":6},"end":{"line":28,"column":18}},"9":{"start":{"line":31,"column":4},"end":{"line":33,"column":7}},"10":{"start":{"line":32,"column":6},"end":{"line":32,"column":57}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":17}},"12":{"start":{"line":36,"column":4},"end":{"line":39,"column":13}},"13":{"start":{"line":37,"column":6},"end":{"line":37,"column":63}},"14":{"start":{"line":38,"column":6},"end":{"line":38,"column":31}},"15":{"start":{"line":41,"column":4},"end":{"line":41,"column":15}},"16":{"start":{"line":44,"column":2},"end":{"line":44,"column":84}},"17":{"start":{"line":50,"column":0},"end":{"line":50,"column":51}},"18":{"start":{"line":59,"column":0},"end":{"line":59,"column":73}},"19":{"start":{"line":66,"column":0},"end":{"line":70,"column":1}},"20":{"start":{"line":67,"column":4},"end":{"line":69,"column":5}},"21":{"start":{"line":68,"column":8},"end":{"line":68,"column":46}},"22":{"start":{"line":76,"column":0},"end":{"line":78,"column":1}},"23":{"start":{"line":77,"column":4},"end":{"line":77,"column":77}},"24":{"start":{"line":84,"column":0},"end":{"line":86,"column":1}},"25":{"start":{"line":85,"column":4},"end":{"line":85,"column":43}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":23}},{"start":{"line":21,"column":27},"end":{"line":21,"column":39}},{"start":{"line":21,"column":43},"end":{"line":21,"column":60}}]},"3":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":6}},{"start":{"line":24,"column":6},"end":{"line":24,"column":6}}]},"5":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":10},"end":{"line":24,"column":24}},{"start":{"line":24,"column":28},"end":{"line":24,"column":47}}]},"6":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":4},"end":{"line":67,"column":4}},{"start":{"line":67,"column":4},"end":{"line":67,"column":4}}]},"7":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":8},"end":{"line":67,"column":20}},{"start":{"line":67,"column":24},"end":{"line":67,"column":41}},{"start":{"line":67,"column":45},"end":{"line":67,"column":69}}]}},"code":["/*!"," * elasticlunr.tokenizer"," * Copyright (C) @YEAR Oliver Nightingale"," * Copyright (C) @YEAR Wei Song"," */","","/**"," * A function for splitting a string into tokens."," * Currently English is supported as default."," * Uses `elasticlunr.tokenizer.seperator` to split strings, you could change"," * the value of this property to set how you want strings are split into tokens."," * IMPORTANT: use elasticlunr.tokenizer.seperator carefully, if you are not familiar with"," * text process, then you'd better not change it."," *"," * @module"," * @param {String} str The string that you want to tokenize."," * @see elasticlunr.tokenizer.seperator"," * @return {Array}"," */","elasticlunr.tokenizer = function (str) {","  if (!arguments.length || str === null || str === undefined) return [];","  if (Array.isArray(str)) {","    var arr = str.filter(function(token) {","      if (token === null || token === undefined) {","        return false;","      }","","      return true;","    });","","    arr = arr.map(function (t) {","      return elasticlunr.utils.toString(t).toLowerCase();","    });","","    var out = [];","    arr.forEach(function(item) {","      var tokens = item.split(elasticlunr.tokenizer.seperator);","      out = out.concat(tokens);","    }, this);","","    return out;","  }","","  return str.toString().trim().toLowerCase().split(elasticlunr.tokenizer.seperator);","};","","/**"," * Default string seperator."," */","elasticlunr.tokenizer.defaultSeperator = /[\\s\\-]+/;","","/**"," * The sperator used to split a string into tokens. Override this property to change the behaviour of"," * `elasticlunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens."," *"," * @static"," * @see elasticlunr.tokenizer"," */","elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;","","/**"," * Set up customized string seperator"," *"," * @param {Object} sep The customized seperator that you want to use to tokenize a string."," */","elasticlunr.tokenizer.setSeperator = function(sep) {","    if (sep !== null && sep !== undefined && typeof(sep) === 'object') {","        elasticlunr.tokenizer.seperator = sep;","    }","}","","/**"," * Reset string seperator"," *"," */","elasticlunr.tokenizer.resetSeperator = function() {","    elasticlunr.tokenizer.seperator = elasticlunr.tokenizer.defaultSeperator;","}","","/**"," * Get string seperator"," *"," */","elasticlunr.tokenizer.getSeperator = function() {","    return elasticlunr.tokenizer.seperator;","}",""],"l":{"20":2,"21":0,"22":0,"23":0,"24":0,"25":0,"28":0,"31":0,"32":0,"35":0,"36":0,"37":0,"38":0,"41":0,"44":0,"50":0,"59":0,"66":0,"67":0,"68":0,"76":0,"77":0,"84":0,"85":0}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/trimmer.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/trimmer.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":22},"end":{"line":21,"column":39}}}},"statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":29,"column":2}},"2":{"start":{"line":22,"column":2},"end":{"line":24,"column":3}},"3":{"start":{"line":23,"column":4},"end":{"line":23,"column":53}},"4":{"start":{"line":26,"column":2},"end":{"line":28,"column":25}},"5":{"start":{"line":31,"column":0},"end":{"line":31,"column":70}}},"branchMap":{"1":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":20}},{"start":{"line":22,"column":24},"end":{"line":22,"column":43}}]}},"code":["/*!"," * elasticlunr.trimmer"," * Copyright (C) @YEAR Oliver Nightingale"," * Copyright (C) @YEAR Wei Song"," */","","/**"," * elasticlunr.trimmer is a pipeline function for trimming non word"," * characters from the begining and end of tokens before they"," * enter the index."," *"," * This implementation may not work correctly for non latin"," * characters and should either be removed or adapted for use"," * with languages with non-latin characters."," *"," * @module"," * @param {String} token The token to pass through the filter"," * @return {String}"," * @see elasticlunr.Pipeline"," */","elasticlunr.trimmer = function (token) {","  if (token === null || token === undefined) {","    throw new Error('token should not be undefined');","  }","","  return token","    .replace(/^\\W+/, '')","    .replace(/\\W+$/, '');","};","","elasticlunr.Pipeline.registerFunction(elasticlunr.trimmer, 'trimmer');",""],"l":{"21":2,"22":0,"23":0,"26":0,"31":0}},"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/utils.js":{"path":"/home/travis/build/npmtest/node-npmtest-elasticlunr/node_modules/elasticlunr/lib/utils.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":18,"loc":{"start":{"line":18,"column":26},"end":{"line":18,"column":44}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":9},"end":{"line":19,"column":28}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":29},"end":{"line":37,"column":44}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":23}},"2":{"start":{"line":18,"column":0},"end":{"line":24,"column":9}},"3":{"start":{"line":19,"column":2},"end":{"line":23,"column":4}},"4":{"start":{"line":20,"column":4},"end":{"line":22,"column":5}},"5":{"start":{"line":21,"column":6},"end":{"line":21,"column":28}},"6":{"start":{"line":37,"column":0},"end":{"line":43,"column":2}},"7":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"8":{"start":{"line":39,"column":4},"end":{"line":39,"column":14}},"9":{"start":{"line":42,"column":2},"end":{"line":42,"column":24}}},"branchMap":{"1":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":4},"end":{"line":20,"column":4}},{"start":{"line":20,"column":4},"end":{"line":20,"column":4}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":8},"end":{"line":20,"column":22}},{"start":{"line":20,"column":26},"end":{"line":20,"column":38}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"4":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":20}},{"start":{"line":38,"column":24},"end":{"line":38,"column":36}}]}},"code":["/*!"," * elasticlunr.utils"," * Copyright (C) @YEAR Oliver Nightingale"," * Copyright (C) @YEAR Wei Song"," */","","/**"," * A namespace containing utils for the rest of the elasticlunr library"," */","elasticlunr.utils = {};","","/**"," * Print a warning message to the console."," *"," * @param {String} message The message to be printed."," * @memberOf Utils"," */","elasticlunr.utils.warn = (function (global) {","  return function (message) {","    if (global.console && console.warn) {","      console.warn(message);","    }","  };","})(this);","","/**"," * Convert an object to string."," *"," * In the case of `null` and `undefined` the function returns"," * an empty string, in all other cases the result of calling"," * `toString` on the passed object is returned."," *"," * @param {object} obj The object to convert to a string."," * @return {String} string representation of the passed object."," * @memberOf Utils"," */","elasticlunr.utils.toString = function (obj) {","  if (obj === void 0 || obj === null) {","    return \"\";","  }","","  return obj.toString();","};",""],"l":{"10":2,"18":0,"19":0,"20":0,"21":0,"37":0,"38":0,"39":0,"42":0}}}